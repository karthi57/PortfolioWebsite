{"ast":null,"code":"var Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n\n  return function () {\n    let moduleArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var Module = moduleArg;\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = Object.assign({}, Module);\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = true;\n    var ENVIRONMENT_IS_WORKER = false;\n    var scriptDirectory = \"\";\n\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n\n      {\n        read_ = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = url => {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n\n          xhr.onload = () => {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n\n            onerror();\n          };\n\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n    } else {}\n\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.error.bind(console);\n    Object.assign(Module, moduleOverrides);\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n\n    if (typeof WebAssembly != \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n    }\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -sASSERTIONS for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    var wasmBinaryFile;\n    wasmBinaryFile = \"process.wasm\";\n\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n\n      if (readBinary) {\n        return readBinary(file);\n      }\n\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == \"function\") {\n          return fetch(binaryFile, {\n            credentials: \"same-origin\"\n          }).then(response => {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n            }\n\n            return response[\"arrayBuffer\"]();\n          }).catch(() => getBinarySync(binaryFile));\n        }\n      }\n\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile).then(binary => WebAssembly.instantiate(binary, imports)).then(instance => instance).then(receiver, reason => {\n        err(`failed to asynchronously prepare wasm: ${reason}`);\n        abort(reason);\n      });\n    }\n\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && typeof fetch == \"function\") {\n        return fetch(binaryFile, {\n          credentials: \"same-origin\"\n        }).then(response => {\n          var result = WebAssembly.instantiateStreaming(response, imports);\n          return result.then(callback, function (reason) {\n            err(`wasm streaming compile failed: ${reason}`);\n            err(\"falling back to ArrayBuffer instantiation\");\n            return instantiateArrayBuffer(binaryFile, imports, callback);\n          });\n        });\n      }\n\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n\n    function createWasm() {\n      var info = {\n        \"a\": wasmImports\n      };\n\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n        wasmMemory = wasmExports[\"K\"];\n        updateMemoryViews();\n        wasmTable = wasmExports[\"O\"];\n        addOnInit(wasmExports[\"L\"]);\n        removeRunDependency(\"wasm-instantiate\");\n        return wasmExports;\n      }\n\n      addRunDependency(\"wasm-instantiate\");\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          return Module[\"instantiateWasm\"](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var callRuntimeCallbacks = callbacks => {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    };\n\n    function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n\n      this.set_type = function (type) {\n        HEAPU32[this.ptr + 4 >> 2] = type;\n      };\n\n      this.get_type = function () {\n        return HEAPU32[this.ptr + 4 >> 2];\n      };\n\n      this.set_destructor = function (destructor) {\n        HEAPU32[this.ptr + 8 >> 2] = destructor;\n      };\n\n      this.get_destructor = function () {\n        return HEAPU32[this.ptr + 8 >> 2];\n      };\n\n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12 >> 0] = caught;\n      };\n\n      this.get_caught = function () {\n        return HEAP8[this.ptr + 12 >> 0] != 0;\n      };\n\n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13 >> 0] = rethrown;\n      };\n\n      this.get_rethrown = function () {\n        return HEAP8[this.ptr + 13 >> 0] != 0;\n      };\n\n      this.init = function (type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      };\n\n      this.set_adjusted_ptr = function (adjustedPtr) {\n        HEAPU32[this.ptr + 16 >> 2] = adjustedPtr;\n      };\n\n      this.get_adjusted_ptr = function () {\n        return HEAPU32[this.ptr + 16 >> 2];\n      };\n\n      this.get_exception_ptr = function () {\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n\n        if (isPointer) {\n          return HEAPU32[this.excPtr >> 2];\n        }\n\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n\n    var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw exceptionLast;\n    };\n\n    var tupleRegistrations = {};\n\n    var runDestructors = destructors => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n\n    function simpleReadValueFromPointer(pointer) {\n      return this[\"fromWireType\"](HEAP32[pointer >> 2]);\n    }\n\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var InternalError;\n\n    var throwInternalError = message => {\n      throw new InternalError(message);\n    };\n\n    var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n\n    var __embind_finalize_value_array = rawTupleType => {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements.map(elt => elt.getterReturnType).concat(elements.map(elt => elt.setterArgumentType));\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      whenDependentTypesAreResolved([rawTupleType], elementTypes, function (elementTypes) {\n        elements.forEach((elt, i) => {\n          var getterReturnType = elementTypes[i];\n          var getter = elt.getter;\n          var getterContext = elt.getterContext;\n          var setterArgumentType = elementTypes[i + elementsLength];\n          var setter = elt.setter;\n          var setterContext = elt.setterContext;\n\n          elt.read = ptr => getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n\n          elt.write = (ptr, o) => {\n            var destructors = [];\n            setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n            runDestructors(destructors);\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": ptr => {\n            var rv = new Array(elementsLength);\n\n            for (var i = 0; i < elementsLength; ++i) {\n              rv[i] = elements[i].read(ptr);\n            }\n\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": (destructors, o) => {\n            if (elementsLength !== o.length) {\n              throw new TypeError(`Incorrect number of tuple elements for ${reg.name}: expected=${elementsLength}, actual=${o.length}`);\n            }\n\n            var ptr = rawConstructor();\n\n            for (var i = 0; i < elementsLength; ++i) {\n              elements[i].write(ptr, o[i]);\n            }\n\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n\n            return ptr;\n          },\n          \"argPackAdvance\": GenericWireTypeSize,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    };\n\n    var structRegistrations = {};\n\n    var __embind_finalize_value_object = structType => {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords.map(field => field.getterReturnType).concat(fieldRecords.map(field => field.setterArgumentType));\n      whenDependentTypesAreResolved([structType], fieldTypes, fieldTypes => {\n        var fields = {};\n        fieldRecords.forEach((field, i) => {\n          var fieldName = field.fieldName;\n          var getterReturnType = fieldTypes[i];\n          var getter = field.getter;\n          var getterContext = field.getterContext;\n          var setterArgumentType = fieldTypes[i + fieldRecords.length];\n          var setter = field.setter;\n          var setterContext = field.setterContext;\n          fields[fieldName] = {\n            read: ptr => getterReturnType[\"fromWireType\"](getter(getterContext, ptr)),\n            write: (ptr, o) => {\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n              runDestructors(destructors);\n            }\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": ptr => {\n            var rv = {};\n\n            for (var i in fields) {\n              rv[i] = fields[i].read(ptr);\n            }\n\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": (destructors, o) => {\n            for (var fieldName in fields) {\n              if (!(fieldName in o)) {\n                throw new TypeError(`Missing field: \"${fieldName}\"`);\n              }\n            }\n\n            var ptr = rawConstructor();\n\n            for (fieldName in fields) {\n              fields[fieldName].write(ptr, o[fieldName]);\n            }\n\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n\n            return ptr;\n          },\n          \"argPackAdvance\": GenericWireTypeSize,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    };\n\n    var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {};\n\n    var embind_init_charCodes = () => {\n      var codes = new Array(256);\n\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n\n      embind_charCodes = codes;\n    };\n\n    var embind_charCodes;\n\n    var readLatin1String = ptr => {\n      var ret = \"\";\n      var c = ptr;\n\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n\n      return ret;\n    };\n\n    var BindingError;\n\n    var throwBindingError = message => {\n      throw new BindingError(message);\n    };\n\n    function sharedRegisterType(rawType, registeredInstance) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var name = registeredInstance.name;\n\n      if (!rawType) {\n        throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n      }\n\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(cb => cb());\n      }\n    }\n\n    function registerType(rawType, registeredInstance) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      }\n\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n\n    var GenericWireTypeSize = 8;\n\n    var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function (wt) {\n          return !!wt;\n        },\n        \"toWireType\": function (destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": function (pointer) {\n          return this[\"fromWireType\"](HEAPU8[pointer]);\n        },\n        destructorFunction: null\n      });\n    };\n\n    var shallowCopyInternalPointer = o => ({\n      count: o.count,\n      deleteScheduled: o.deleteScheduled,\n      preservePointerOnDelete: o.preservePointerOnDelete,\n      ptr: o.ptr,\n      ptrType: o.ptrType,\n      smartPtr: o.smartPtr,\n      smartPtrType: o.smartPtrType\n    });\n\n    var throwInstanceAlreadyDeleted = obj => {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n\n      throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n    };\n\n    var finalizationRegistry = false;\n\n    var detachFinalizer = handle => {};\n\n    var runDestructor = $$ => {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    };\n\n    var releaseClassHandle = $$ => {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n\n      if (toDelete) {\n        runDestructor($$);\n      }\n    };\n\n    var downcastPointer = (ptr, ptrClass, desiredClass) => {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n\n      if (undefined === desiredClass.baseClass) {\n        return null;\n      }\n\n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n\n      if (rv === null) {\n        return null;\n      }\n\n      return desiredClass.downcast(rv);\n    };\n\n    var registeredPointers = {};\n\n    var getInheritedInstanceCount = () => Object.keys(registeredInstances).length;\n\n    var getLiveInheritedInstances = () => {\n      var rv = [];\n\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n\n      return rv;\n    };\n\n    var deletionQueue = [];\n\n    var flushPendingDeletes = () => {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj[\"delete\"]();\n      }\n    };\n\n    var delayFunction;\n\n    var setDelayFunction = fn => {\n      delayFunction = fn;\n\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    };\n\n    var init_embind = () => {\n      Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n      Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n      Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n      Module[\"setDelayFunction\"] = setDelayFunction;\n    };\n\n    var registeredInstances = {};\n\n    var getBasestPointer = (class_, ptr) => {\n      if (ptr === undefined) {\n        throwBindingError(\"ptr should not be undefined\");\n      }\n\n      while (class_.baseClass) {\n        ptr = class_.upcast(ptr);\n        class_ = class_.baseClass;\n      }\n\n      return ptr;\n    };\n\n    var getInheritedInstance = (class_, ptr) => {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    };\n\n    var makeClassHandle = (prototype, record) => {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n      }\n\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n      }\n\n      record.count = {\n        value: 1\n      };\n      return attachFinalizer(Object.create(prototype, {\n        $$: {\n          value: record\n        }\n      }));\n    };\n\n    function RegisteredPointer_fromWireType(ptr) {\n      var rawPointer = this.getPointee(ptr);\n\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n\n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n\n      if (undefined !== registeredInstance) {\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance[\"clone\"]();\n        } else {\n          var rv = registeredInstance[\"clone\"]();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n\n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr: ptr\n          });\n        }\n      }\n\n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n\n      var toType;\n\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n\n      var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp\n        });\n      }\n    }\n\n    var attachFinalizer = handle => {\n      if (\"undefined\" === typeof FinalizationRegistry) {\n        attachFinalizer = handle => handle;\n\n        return handle;\n      }\n\n      finalizationRegistry = new FinalizationRegistry(info => {\n        releaseClassHandle(info.$$);\n      });\n\n      attachFinalizer = handle => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n\n        if (hasSmartPtr) {\n          var info = {\n            $$: $$\n          };\n          finalizationRegistry.register(handle, info, handle);\n        }\n\n        return handle;\n      };\n\n      detachFinalizer = handle => finalizationRegistry.unregister(handle);\n\n      return attachFinalizer(handle);\n    };\n\n    var init_ClassHandle = () => {\n      Object.assign(ClassHandle.prototype, {\n        \"isAliasOf\"(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          other.$$ = other.$$;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n\n          return leftClass === rightClass && left === right;\n        },\n\n        \"clone\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n              $$: {\n                value: shallowCopyInternalPointer(this.$$)\n              }\n            }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        },\n\n        \"delete\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = undefined;\n            this.$$.ptr = undefined;\n          }\n        },\n\n        \"isDeleted\"() {\n          return !this.$$.ptr;\n        },\n\n        \"deleteLater\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n\n          deletionQueue.push(this);\n\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n\n      });\n    };\n\n    function ClassHandle() {}\n\n    var char_0 = 48;\n    var char_9 = 57;\n\n    var makeLegalFunctionName = name => {\n      if (undefined === name) {\n        return \"_unknown\";\n      }\n\n      name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n      var f = name.charCodeAt(0);\n\n      if (f >= char_0 && f <= char_9) {\n        return `_${name}`;\n      }\n\n      return name;\n    };\n\n    function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      return {\n        [name]: function () {\n          return body.apply(this, arguments);\n        }\n      }[name];\n    }\n\n    var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n\n        proto[methodName] = function () {\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n            throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`);\n          }\n\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n\n    var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n\n        ensureOverloadTable(Module, name, name);\n\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\n        }\n\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    };\n\n    function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n\n    var upcastPointer = (ptr, ptrClass, desiredClass) => {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\n        }\n\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n\n      return ptr;\n    };\n\n    function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n\n        return 0;\n      }\n\n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n\n    function genericPointerToWireType(destructors, handle) {\n      var ptr;\n\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n\n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n\n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`);\n      }\n\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n\n      if (this.isSmartPointer) {\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n        }\n\n        switch (this.sharingPolicy) {\n          case 0:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`);\n            }\n\n            break;\n\n          case 1:\n            ptr = handle.$$.smartPtr;\n            break;\n\n          case 2:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle[\"clone\"]();\n              ptr = this.rawShare(ptr, Emval.toHandle(() => clonedHandle[\"delete\"]()));\n\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n\n            break;\n\n          default:\n            throwBindingError(\"Unsupporting sharing policy\");\n        }\n      }\n\n      return ptr;\n    }\n\n    function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n\n        return 0;\n      }\n\n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n\n      if (handle.$$.ptrType.isConst) {\n        throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\n      }\n\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n\n    function readPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n\n    var init_RegisteredPointer = () => {\n      Object.assign(RegisteredPointer.prototype, {\n        getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n\n          return ptr;\n        },\n\n        destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        },\n\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": readPointer,\n\n        \"deleteObject\"(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        },\n\n        \"fromWireType\": RegisteredPointer_fromWireType\n      });\n    };\n\n    function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n\n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this[\"toWireType\"] = genericPointerToWireType;\n      }\n    }\n\n    var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\");\n      }\n\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n\n    var dynCallLegacy = (sig, ptr, args) => {\n      var f = Module[\"dynCall_\" + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    };\n\n    var wasmTableMirror = [];\n    var wasmTable;\n\n    var getWasmTableEntry = funcPtr => {\n      var func = wasmTableMirror[funcPtr];\n\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n\n      return func;\n    };\n\n    var dynCall = (sig, ptr, args) => {\n      if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    };\n\n    var getDynCaller = (sig, ptr) => {\n      var argCache = [];\n      return function () {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    };\n\n    var embind__requireFunction = (signature, rawFunction) => {\n      signature = readLatin1String(signature);\n\n      function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n          return getDynCaller(signature, rawFunction);\n        }\n\n        return getWasmTableEntry(rawFunction);\n      }\n\n      var fp = makeDynCaller();\n\n      if (typeof fp != \"function\") {\n        throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n      }\n\n      return fp;\n    };\n\n    var extendError = (baseErrorType, errorName) => {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n\n        if (stack !== undefined) {\n          this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return `${this.name}: ${this.message}`;\n        }\n      };\n\n      return errorClass;\n    };\n\n    var UnboundTypeError;\n\n    var getTypeName = type => {\n      var ptr = ___getTypeName(type);\n\n      var rv = readLatin1String(ptr);\n\n      _free(ptr);\n\n      return rv;\n    };\n\n    var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n\n        if (registeredTypes[type]) {\n          return;\n        }\n\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n\n      types.forEach(visit);\n      throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([\", \"]));\n    };\n\n    var __embind_register_class = (rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) => {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n\n      if (upcast) {\n        upcast = embind__requireFunction(upcastSignature, upcast);\n      }\n\n      if (downcast) {\n        downcast = embind__requireFunction(downcastSignature, downcast);\n      }\n\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n      exposePublicSymbol(legalFunctionName, function () {\n        throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [baseClassRawType]);\n      });\n      whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function (base) {\n        base = base[0];\n        var baseClass;\n        var basePrototype;\n\n        if (baseClassRawType) {\n          baseClass = base.registeredClass;\n          basePrototype = baseClass.instancePrototype;\n        } else {\n          basePrototype = ClassHandle.prototype;\n        }\n\n        var constructor = createNamedFunction(legalFunctionName, function () {\n          if (Object.getPrototypeOf(this) !== instancePrototype) {\n            throw new BindingError(\"Use 'new' to construct \" + name);\n          }\n\n          if (undefined === registeredClass.constructor_body) {\n            throw new BindingError(name + \" has no accessible constructor\");\n          }\n\n          var body = registeredClass.constructor_body[arguments.length];\n\n          if (undefined === body) {\n            throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\n          }\n\n          return body.apply(this, arguments);\n        });\n        var instancePrototype = Object.create(basePrototype, {\n          constructor: {\n            value: constructor\n          }\n        });\n        constructor.prototype = instancePrototype;\n        var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n\n        if (registeredClass.baseClass) {\n          if (registeredClass.baseClass.__derivedClasses === undefined) {\n            registeredClass.baseClass.__derivedClasses = [];\n          }\n\n          registeredClass.baseClass.__derivedClasses.push(registeredClass);\n        }\n\n        var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n        var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n        var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n        registeredPointers[rawType] = {\n          pointerType: pointerConverter,\n          constPointerType: constPointerConverter\n        };\n        replacePublicSymbol(legalFunctionName, constructor);\n        return [referenceConverter, pointerConverter, constPointerConverter];\n      });\n    };\n\n    var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n\n      for (var i = 0; i < count; i++) {\n        array.push(HEAPU32[firstElement + i * 4 >> 2]);\n      }\n\n      return array;\n    };\n\n    function newFunc(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`);\n      }\n\n      var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy();\n      var r = constructor.apply(obj, argumentList);\n      return r instanceof Object ? r : obj;\n    }\n\n    function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n      var argCount = argTypes.length;\n\n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = false;\n\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          needsDestructorStack = true;\n          break;\n        }\n      }\n\n      var returns = argTypes[0].name !== \"void\";\n      var argsList = \"\";\n      var argsListWired = \"\";\n\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n      }\n\n      var invokerFnBody = `\\n        return function ${makeLegalFunctionName(humanName)}(${argsList}) {\\n        if (arguments.length !== ${argCount - 2}) {\\n          throwBindingError('function ${humanName} called with ' + arguments.length + ' arguments, expected ${argCount - 2}');\\n        }`;\n\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n\n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n      }\n\n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2]);\n      }\n\n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n\n      invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n            args1.push(paramName + \"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n\n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n      } else {}\n\n      invokerFnBody += \"}\\n\";\n      args1.push(invokerFnBody);\n      return newFunc(Function, args1).apply(null, args2);\n    }\n\n    var __embind_register_class_constructor = (rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n        classType = classType[0];\n        var humanName = `constructor ${classType.name}`;\n\n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\n        }\n\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\n        };\n\n        whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n          return [];\n        });\n        return [];\n      });\n    };\n\n    var __embind_register_class_function = (rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual, isAsync) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n      whenDependentTypesAreResolved([], [rawClassType], function (classType) {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n\n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n\n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n\n        function unboundTypesHandler() {\n          throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n        }\n\n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n\n        if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n\n        whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n\n          if (undefined === proto[methodName].overloadTable) {\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n\n          return [];\n        });\n        return [];\n      });\n    };\n\n    var validateThis = (this_, classType, humanName) => {\n      if (!(this_ instanceof Object)) {\n        throwBindingError(`${humanName} with invalid \"this\": ${this_}`);\n      }\n\n      if (!(this_ instanceof classType.registeredClass.constructor)) {\n        throwBindingError(`${humanName} incompatible with \"this\" of type ${this_.constructor.name}`);\n      }\n\n      if (!this_.$$.ptr) {\n        throwBindingError(`cannot call emscripten binding method ${humanName} on deleted object`);\n      }\n\n      return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n    };\n\n    var __embind_register_class_property = (classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\n      fieldName = readLatin1String(fieldName);\n      getter = embind__requireFunction(getterSignature, getter);\n      whenDependentTypesAreResolved([], [classType], function (classType) {\n        classType = classType[0];\n        var humanName = `${classType.name}.${fieldName}`;\n        var desc = {\n          get() {\n            throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [getterReturnType, setterArgumentType]);\n          },\n\n          enumerable: true,\n          configurable: true\n        };\n\n        if (setter) {\n          desc.set = () => throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [getterReturnType, setterArgumentType]);\n        } else {\n          desc.set = v => throwBindingError(humanName + \" is a read-only property\");\n        }\n\n        Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n        whenDependentTypesAreResolved([], setter ? [getterReturnType, setterArgumentType] : [getterReturnType], function (types) {\n          var getterReturnType = types[0];\n          var desc = {\n            get() {\n              var ptr = validateThis(this, classType, humanName + \" getter\");\n              return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n            },\n\n            enumerable: true\n          };\n\n          if (setter) {\n            setter = embind__requireFunction(setterSignature, setter);\n            var setterArgumentType = types[1];\n\n            desc.set = function (v) {\n              var ptr = validateThis(this, classType, humanName + \" setter\");\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n              runDestructors(destructors);\n            };\n          }\n\n          Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n          return [];\n        });\n        return [];\n      });\n    };\n\n    function handleAllocatorInit() {\n      Object.assign(HandleAllocator.prototype, {\n        get(id) {\n          return this.allocated[id];\n        },\n\n        has(id) {\n          return this.allocated[id] !== undefined;\n        },\n\n        allocate(handle) {\n          var id = this.freelist.pop() || this.allocated.length;\n          this.allocated[id] = handle;\n          return id;\n        },\n\n        free(id) {\n          this.allocated[id] = undefined;\n          this.freelist.push(id);\n        }\n\n      });\n    }\n\n    function HandleAllocator() {\n      this.allocated = [undefined];\n      this.freelist = [];\n    }\n\n    var emval_handles = new HandleAllocator();\n\n    var __emval_decref = handle => {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    };\n\n    var count_emval_handles = () => {\n      var count = 0;\n\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n\n      return count;\n    };\n\n    var init_emval = () => {\n      emval_handles.allocated.push({\n        value: undefined\n      }, {\n        value: null\n      }, {\n        value: true\n      }, {\n        value: false\n      });\n      emval_handles.reserved = emval_handles.allocated.length;\n      Module[\"count_emval_handles\"] = count_emval_handles;\n    };\n\n    var Emval = {\n      toValue: handle => {\n        if (!handle) {\n          throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n        }\n\n        return emval_handles.get(handle).value;\n      },\n      toHandle: value => {\n        switch (value) {\n          case undefined:\n            return 1;\n\n          case null:\n            return 2;\n\n          case true:\n            return 3;\n\n          case false:\n            return 4;\n\n          default:\n            {\n              return emval_handles.allocate({\n                refcount: 1,\n                value: value\n              });\n            }\n        }\n      }\n    };\n\n    var __embind_register_emval = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": handle => {\n          var rv = Emval.toValue(handle);\n\n          __emval_decref(handle);\n\n          return rv;\n        },\n        \"toWireType\": (destructors, value) => Emval.toHandle(value),\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: null\n      });\n    };\n\n    var enumReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed ? function (pointer) {\n            return this[\"fromWireType\"](HEAP8[pointer >> 0]);\n          } : function (pointer) {\n            return this[\"fromWireType\"](HEAPU8[pointer >> 0]);\n          };\n\n        case 2:\n          return signed ? function (pointer) {\n            return this[\"fromWireType\"](HEAP16[pointer >> 1]);\n          } : function (pointer) {\n            return this[\"fromWireType\"](HEAPU16[pointer >> 1]);\n          };\n\n        case 4:\n          return signed ? function (pointer) {\n            return this[\"fromWireType\"](HEAP32[pointer >> 2]);\n          } : function (pointer) {\n            return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n          };\n\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n\n    var __embind_register_enum = (rawType, name, size, isSigned) => {\n      name = readLatin1String(name);\n\n      function ctor() {}\n\n      ctor.values = {};\n      registerType(rawType, {\n        name: name,\n        constructor: ctor,\n        \"fromWireType\": function (c) {\n          return this.constructor.values[c];\n        },\n        \"toWireType\": (destructors, c) => c.value,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": enumReadValueFromPointer(name, size, isSigned),\n        destructorFunction: null\n      });\n      exposePublicSymbol(name, ctor);\n    };\n\n    var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n\n      if (undefined === impl) {\n        throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n\n      return impl;\n    };\n\n    var __embind_register_enum_value = (rawEnumType, name, enumValue) => {\n      var enumType = requireRegisteredType(rawEnumType, \"enum\");\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {\n          value: enumValue\n        },\n        constructor: {\n          value: createNamedFunction(`${enumType.name}_${name}`, function () {})\n        }\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    };\n\n    var embindRepr = v => {\n      if (v === null) {\n        return \"null\";\n      }\n\n      var t = typeof v;\n\n      if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString();\n      } else {\n        return \"\" + v;\n      }\n    };\n\n    var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n        case 4:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n\n        case 8:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n\n        default:\n          throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n\n    var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": value => value,\n        \"toWireType\": (destructors, value) => value,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": floatReadValueFromPointer(name, size),\n        destructorFunction: null\n      });\n    };\n\n    var __embind_register_function = (name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) => {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n      exposePublicSymbol(name, function () {\n        throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\n      }, argCount - 1);\n      whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync), argCount - 1);\n        return [];\n      });\n    };\n\n    var integerReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed ? pointer => HEAP8[pointer >> 0] : pointer => HEAPU8[pointer >> 0];\n\n        case 2:\n          return signed ? pointer => HEAP16[pointer >> 1] : pointer => HEAPU16[pointer >> 1];\n\n        case 4:\n          return signed ? pointer => HEAP32[pointer >> 2] : pointer => HEAPU32[pointer >> 2];\n\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n\n    var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n\n      var fromWireType = value => value;\n\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n\n        fromWireType = value => value << bitshift >>> bitshift;\n      }\n\n      var isUnsignedType = name.includes(\"unsigned\");\n\n      var checkAssertions = (value, toTypeName) => {};\n\n      var toWireType;\n\n      if (isUnsignedType) {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        };\n      } else {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value;\n        };\n      }\n\n      registerType(primitiveType, {\n        name: name,\n        \"fromWireType\": fromWireType,\n        \"toWireType\": toWireType,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": integerReadValueFromPointer(name, size, minRange !== 0),\n        destructorFunction: null\n      });\n    };\n\n    var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n      var TA = typeMapping[dataTypeIndex];\n\n      function decodeMemoryView(handle) {\n        var size = HEAPU32[handle >> 2];\n        var data = HEAPU32[handle + 4 >> 2];\n        return new TA(HEAP8.buffer, data, size);\n      }\n\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": decodeMemoryView,\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": decodeMemoryView\n      }, {\n        ignoreDuplicateRegistrations: true\n      });\n    };\n\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | u >> 6;\n          heap[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | u >> 12;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | u >> 18;\n          heap[outIdx++] = 128 | u >> 12 & 63;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n\n    var lengthBytesUTF8 = str => {\n      var len = 0;\n\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n\n        if (c <= 127) {\n          len++;\n        } else if (c <= 2047) {\n          len += 2;\n        } else if (c >= 55296 && c <= 57343) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n\n      return len;\n    };\n\n    var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n    var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n\n      var str = \"\";\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n\n        var u1 = heapOrArray[idx++] & 63;\n\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode((u0 & 31) << 6 | u1);\n          continue;\n        }\n\n        var u2 = heapOrArray[idx++] & 63;\n\n        if ((u0 & 240) == 224) {\n          u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n        } else {\n          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n        }\n\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        }\n      }\n\n      return str;\n    };\n\n    var UTF8ToString = (ptr, maxBytesToRead) => ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n\n    var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === \"std::string\";\n      registerType(rawType, {\n        name: name,\n\n        \"fromWireType\"(value) {\n          var length = HEAPU32[value >> 2];\n          var payload = value + 4;\n          var str;\n\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n\n            str = a.join(\"\");\n          }\n\n          _free(value);\n\n          return str;\n        },\n\n        \"toWireType\"(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n\n          var length;\n          var valueIsOfTypeString = typeof value == \"string\";\n\n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n\n          var base = _malloc(4 + length + 1);\n\n          var ptr = base + 4;\n          HEAPU32[base >> 2] = length;\n\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n\n                if (charCode > 255) {\n                  _free(ptr);\n\n                  throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                }\n\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n\n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n\n          return base;\n        },\n\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": readPointer,\n\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n\n      });\n    };\n\n    var UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n    var UTF16ToString = (ptr, maxBytesToRead) => {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n\n      endPtr = idx << 1;\n      if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      var str = \"\";\n\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[ptr + i * 2 >> 1];\n        if (codeUnit == 0) break;\n        str += String.fromCharCode(codeUnit);\n      }\n\n      return str;\n    };\n\n    var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    };\n\n    var lengthBytesUTF16 = str => str.length * 2;\n\n    var UTF32ToString = (ptr, maxBytesToRead) => {\n      var i = 0;\n      var str = \"\";\n\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[ptr + i * 4 >> 2];\n        if (utf32 == 0) break;\n        ++i;\n\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n\n      return str;\n    };\n\n    var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n        }\n\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    };\n\n    var lengthBytesUTF32 = str => {\n      var len = 0;\n\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n\n      return len;\n    };\n\n    var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n\n        getHeap = () => HEAPU16;\n\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n\n        getHeap = () => HEAPU32;\n\n        shift = 2;\n      }\n\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": value => {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n\n          _free(value);\n\n          return str;\n        },\n        \"toWireType\": (destructors, value) => {\n          if (!(typeof value == \"string\")) {\n            throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n          }\n\n          var length = lengthBytesUTF(value);\n\n          var ptr = _malloc(4 + length + charSize);\n\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n\n          return ptr;\n        },\n        \"argPackAdvance\": GenericWireTypeSize,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n\n      });\n    };\n\n    var __embind_register_value_array = (rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) => {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        elements: []\n      };\n    };\n\n    var __embind_register_value_array_element = (rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    };\n\n    var __embind_register_value_object = (rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) => {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        fields: []\n      };\n    };\n\n    var __embind_register_value_object_field = (structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    };\n\n    var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        \"argPackAdvance\": 0,\n        \"fromWireType\": () => undefined,\n        \"toWireType\": (destructors, o) => undefined\n      });\n    };\n\n    var __emval_incref = handle => {\n      if (handle > 4) {\n        emval_handles.get(handle).refcount += 1;\n      }\n    };\n\n    var __emval_take_value = (type, arg) => {\n      type = requireRegisteredType(type, \"_emval_take_value\");\n      var v = type[\"readValueFromPointer\"](arg);\n      return Emval.toHandle(v);\n    };\n\n    var _abort = () => {\n      abort(\"\");\n    };\n\n    var _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n    var getHeapMax = () => 2147483648;\n\n    var growMemory = size => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n\n    var _emscripten_resize_heap = requestedSize => {\n      var oldSize = HEAPU8.length;\n      requestedSize >>>= 0;\n      var maxHeapSize = getHeapMax();\n\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = growMemory(newSize);\n\n        if (replacement) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    var ENV = {};\n\n    var getExecutableName = () => thisProgram || \"./this.program\";\n\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          \"USER\": \"web_user\",\n          \"LOGNAME\": \"web_user\",\n          \"PATH\": \"/\",\n          \"PWD\": \"/\",\n          \"HOME\": \"/home/web_user\",\n          \"LANG\": lang,\n          \"_\": getExecutableName()\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n        }\n\n        var strings = [];\n\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n\n        getEnvStrings.strings = strings;\n      }\n\n      return getEnvStrings.strings;\n    };\n\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      HEAP8[buffer >> 0] = 0;\n    };\n\n    var PATH = {\n      isAbs: path => path.charAt(0) === \"/\",\n      splitPath: filename => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n\n        return parts;\n      },\n      normalize: path => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), !isAbsolute).join(\"/\");\n\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: path => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n\n        if (!root && !dir) {\n          return \".\";\n        }\n\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n\n        return root + dir;\n      },\n      basename: path => {\n        if (path === \"/\") return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: (l, r) => PATH.normalize(l + \"/\" + r)\n    };\n\n    var initRandomFill = () => {\n      if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\n        return view => crypto.getRandomValues(view);\n      } else abort(\"initRandomDevice\");\n    };\n\n    var randomFill = view => (randomFill = initRandomFill())(view);\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = \"\",\n            resolvedAbsolute = false;\n\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(p => !!p), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n\n        function trim(arr) {\n          var start = 0;\n\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n\n          var end = arr.length - 1;\n\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n\n        var outputParts = [];\n\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      }\n    };\n    var FS_stdin_getChar_buffer = [];\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n\n        if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n          result = window.prompt(\"Input: \");\n\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        } else if (typeof readline == \"function\") {\n          result = readline();\n\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        }\n\n        if (!result) {\n          return null;\n        }\n\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n\n      return FS_stdin_getChar_buffer.shift();\n    };\n\n    var TTY = {\n      ttys: [],\n\n      init() {},\n\n      shutdown() {},\n\n      register(dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n\n          var bytesRead = 0;\n\n          for (var i = 0; i < length; i++) {\n            var result;\n\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n\n          return bytesRead;\n        },\n\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n\n          return i;\n        }\n\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n          };\n        },\n\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        }\n\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n\n      }\n    };\n\n    var mmapAlloc = size => {\n      abort();\n    };\n\n    var MEMFS = {\n      ops_table: null,\n\n      mount(mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n\n        var node = FS.createNode(parent, name, mode, dev);\n\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n\n        return node;\n      },\n\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n          }\n\n          node.usedBytes = newSize;\n        }\n      },\n\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n\n        readdir(node) {\n          var entries = [\".\", \"..\"];\n\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n\n            entries.push(key);\n          }\n\n          return entries;\n        },\n\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return node.link;\n        }\n\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n\n          return size;\n        },\n\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n\n        llseek(stream, offset, whence) {\n          var position = offset;\n\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n\n          return position;\n        },\n\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n\n            allocated = true;\n            ptr = mmapAlloc(length);\n\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n\n            HEAP8.set(contents, ptr);\n          }\n\n          return {\n            ptr: ptr,\n            allocated: allocated\n          };\n        },\n\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n\n      }\n    };\n\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : \"\";\n      readAsync(url, arrayBuffer => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, event => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n\n    var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n\n    var preloadPlugins = Module[\"preloadPlugins\"] || [];\n\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != \"undefined\") Browser.init();\n      var handled = false;\n      preloadPlugins.forEach(plugin => {\n        if (handled) return;\n\n        if (plugin[\"canHandle\"](fullname)) {\n          plugin[\"handle\"](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n\n    var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n\n      function processData(byteArray) {\n        function finish(byteArray) {\n          if (preFinish) preFinish();\n\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n\n          if (onload) onload();\n          removeRunDependency(dep);\n        }\n\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          if (onerror) onerror();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n\n        finish(byteArray);\n      }\n\n      addRunDependency(dep);\n\n      if (typeof url == \"string\") {\n        asyncLoad(url, byteArray => processData(byteArray), onerror);\n      } else {\n        processData(url);\n      }\n    };\n\n    var FS_modeStringToFlags = str => {\n      var flagModes = {\n        \"r\": 0,\n        \"r+\": 2,\n        \"w\": 512 | 64 | 1,\n        \"w+\": 512 | 64 | 2,\n        \"a\": 1024 | 64 | 1,\n        \"a+\": 1024 | 64 | 2\n      };\n      var flags = flagModes[str];\n\n      if (typeof flags == \"undefined\") {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n\n      return flags;\n    };\n\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n\n      lookupPath(path) {\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        path = PATH_FS.resolve(path);\n        if (!path) return {\n          path: \"\",\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split(\"/\").filter(p => !!p);\n        var current = FS.root;\n        var current_path = \"/\";\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n\n      getPath(node) {\n        var path;\n\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\" ? `${mount}/${path}` : mount + path;\n          }\n\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n\n      hashName(parentid, name) {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n\n            current = current.name_next;\n          }\n        }\n      },\n\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n\n        var hash = FS.hashName(parent.id, name);\n\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n\n      isRoot(node) {\n        return node === node.parent;\n      },\n\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n\n      flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n\n        if (flag & 512) {\n          perms += \"w\";\n        }\n\n        return perms;\n      },\n\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n\n        return 0;\n      },\n\n      mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n\n        return FS.nodePermissions(dir, \"wx\");\n      },\n\n      mayDelete(dir, name, isdir) {\n        var node;\n\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n\n        var errCode = FS.nodePermissions(dir, \"wx\");\n\n        if (errCode) {\n          return errCode;\n        }\n\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n\n        return 0;\n      },\n\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n\n      MAX_OPEN_FDS: 4096,\n\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n\n        throw new FS.ErrnoError(33);\n      },\n\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n\n        return stream;\n      },\n\n      getStream: fd => FS.streams[fd],\n\n      createStream(stream) {\n        let fd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get() {\n                return this.node;\n              },\n\n              set(val) {\n                this.node = val;\n              }\n\n            },\n            isRead: {\n              get() {\n                return (this.flags & 2097155) !== 1;\n              }\n\n            },\n            isWrite: {\n              get() {\n                return (this.flags & 2097155) !== 0;\n              }\n\n            },\n            isAppend: {\n              get() {\n                return this.flags & 1024;\n              }\n\n            },\n            flags: {\n              get() {\n                return this.shared.flags;\n              },\n\n              set(val) {\n                this.shared.flags = val;\n              }\n\n            },\n            position: {\n              get() {\n                return this.shared.position;\n              },\n\n              set(val) {\n                this.shared.position = val;\n              }\n\n            }\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n\n        llseek() {\n          throw new FS.ErrnoError(70);\n        }\n\n      },\n      major: dev => dev >> 8,\n      minor: dev => dev & 255,\n      makedev: (ma, mi) => ma << 8 | mi,\n\n      registerDevice(dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n\n      getDevice: dev => FS.devices[dev],\n\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n\n      syncfs(populate, callback) {\n        if (typeof populate == \"function\") {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n\n            return;\n          }\n\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach(mount => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(hash => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n\n        var errCode = FS.mayCreate(parent, name);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n\n      mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n\n      mkdev(path, mode, dev) {\n        if (typeof dev == \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, {\n          parent: true\n        });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, {\n          parent: true\n        });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n\n      readdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n\n        return node.node_ops.readdir(node);\n      },\n\n      unlink(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        return node.node_ops.getattr(node);\n      },\n\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n\n      chmod(path, mode, dontFollow) {\n        var node;\n\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n\n      chown(path, uid, gid, dontFollow) {\n        var node;\n\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n        });\n      },\n\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node;\n\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var errCode = FS.nodePermissions(node, \"w\");\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        FS.truncate(stream.node, len);\n      },\n\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n\n      open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n\n        flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == \"undefined\" ? 438 : mode;\n\n        if (flags & 64) {\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n\n        var node;\n\n        if (typeof path == \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          ungotten: [],\n          error: false\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n\n        return stream;\n      },\n\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (stream.getdents) stream.getdents = null;\n\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n\n        stream.fd = null;\n      },\n\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var seeking = typeof position != \"undefined\";\n\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n\n        var seeking = typeof position != \"undefined\";\n\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n\n      mmap(stream, length, position, prot, flags) {\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n\n      munmap: stream => 0,\n\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n\n      readFile(path) {\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n\n        FS.close(stream);\n        return ret;\n      },\n\n      writeFile(path, data) {\n        let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n\n        if (typeof data == \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n\n        FS.close(stream);\n      },\n\n      cwd: () => FS.currentPath,\n\n      chdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        FS.currentPath = lookup.path;\n      },\n\n      createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n\n      createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var randomBuffer = new Uint8Array(1024),\n            randomLeft = 0;\n\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n\n          return randomBuffer[--randomLeft];\n        };\n\n        FS.createDevice(\"/dev\", \"random\", randomByte);\n        FS.createDevice(\"/dev\", \"urandom\", randomByte);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n\n      createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: \"fake\"\n                  },\n                  node_ops: {\n                    readlink: () => stream.path\n                  }\n                };\n                ret.parent = ret;\n                return ret;\n              }\n\n            };\n            return node;\n          }\n\n        }, {}, \"/proc/self/fd\");\n      },\n\n      createStandardStreams() {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n\n      ensureErrnoError() {\n        if (FS.ErrnoError) return;\n\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.name = \"ErrnoError\";\n          this.node = node;\n\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(code => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n\n      staticInit() {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          \"MEMFS\": MEMFS\n        };\n      },\n\n      init(input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n\n      quit() {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n\n          if (!stream) {\n            continue;\n          }\n\n          FS.close(stream);\n        }\n      },\n\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n\n        if (!ret.exists) {\n          return null;\n        }\n\n        return ret.object;\n      },\n\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n\n        return ret;\n      },\n\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n\n          parent = current;\n        }\n\n        return current;\n      },\n\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n\n        if (parent) {\n          parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n\n        if (data) {\n          if (typeof data == \"string\") {\n            var arr = new Array(data.length);\n\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n\n        return node;\n      },\n\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n\n          close(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n\n            for (var i = 0; i < length; i++) {\n              var result;\n\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n\n            return bytesRead;\n          },\n\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n\n            return i;\n          }\n\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n\n        if (typeof XMLHttpRequest != \"undefined\") {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n      },\n\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = idx / this.chunkSize | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"HEAD\", url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n          var chunkSize = 1024 * 1024;\n          if (!hasByteServing) chunkSize = datalength;\n\n          var doXHR = (from, to) => {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n            xhr.responseType = \"arraybuffer\";\n\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n            }\n\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            }\n\n            return intArrayFromString(xhr.responseText || \"\", true);\n          };\n\n          var lazyArray = this;\n          lazyArray.setDataGetter(chunkNum => {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum + 1) * chunkSize - 1;\n            end = Math.min(end, datalength - 1);\n\n            if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n\n            if (typeof lazyArray.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n\n          if (usesGzip || !datalength) {\n            chunkSize = datalength = 1;\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n\n        if (typeof XMLHttpRequest != \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n\n                return this._chunkSize;\n              }\n            }\n          });\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            }\n          }\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(key => {\n          var fn = node.stream_ops[key];\n\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return {\n            ptr: ptr,\n            allocated: true\n          };\n        };\n\n        node.stream_ops = stream_ops;\n        return node;\n      }\n\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n\n          return dir;\n        }\n\n        return PATH.join2(dir, path);\n      },\n\n      doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            return -54;\n          }\n\n          throw e;\n        }\n\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = stat.mode;\n        HEAPU32[buf + 8 >> 2] = stat.nlink;\n        HEAP32[buf + 12 >> 2] = stat.uid;\n        HEAP32[buf + 16 >> 2] = stat.gid;\n        HEAP32[buf + 20 >> 2] = stat.rdev;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 24 >> 2] = tempI64[0], HEAP32[buf + 28 >> 2] = tempI64[1];\n        HEAP32[buf + 32 >> 2] = 4096;\n        HEAP32[buf + 36 >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        tempI64 = [Math.floor(atime / 1e3) >>> 0, (tempDouble = Math.floor(atime / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAPU32[buf + 48 >> 2] = atime % 1e3 * 1e3;\n        tempI64 = [Math.floor(mtime / 1e3) >>> 0, (tempDouble = Math.floor(mtime / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 56 >> 2] = tempI64[0], HEAP32[buf + 60 >> 2] = tempI64[1];\n        HEAPU32[buf + 64 >> 2] = mtime % 1e3 * 1e3;\n        tempI64 = [Math.floor(ctime / 1e3) >>> 0, (tempDouble = Math.floor(ctime / 1e3), +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 72 >> 2] = tempI64[0], HEAP32[buf + 76 >> 2] = tempI64[1];\n        HEAPU32[buf + 80 >> 2] = ctime % 1e3 * 1e3;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 88 >> 2] = tempI64[0], HEAP32[buf + 92 >> 2] = tempI64[1];\n        return 0;\n      },\n\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n\n        if (flags & 2) {\n          return 0;\n        }\n\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n\n      varargs: undefined,\n\n      get() {\n        var ret = HEAP32[+SYSCALLS.varargs >> 2];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n\n      getp() {\n        return SYSCALLS.get();\n      },\n\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      }\n\n    };\n\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[__environ + i * 4 >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(string => bufSize += string.length + 1);\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n\n        if (typeof offset !== \"undefined\") {\n          offset += curr;\n        }\n      }\n\n      return ret;\n    };\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n\n    var convertI32PairToI53Checked = (lo, hi) => hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      var offset = convertI32PairToI53Checked(offset_low, offset_high);\n\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n\n        if (typeof offset !== \"undefined\") {\n          offset += curr;\n        }\n      }\n\n      return ret;\n    };\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n\n    var isLeapYear = year => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\n    var arraySum = (array, index) => {\n      var sum = 0;\n\n      for (var i = 0; i <= index; sum += array[i++]) {}\n\n      return sum;\n    };\n\n    var MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n\n      return newDate;\n    };\n\n    var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n\n    var _strftime = (s, maxsize, format, tm) => {\n      var tm_zone = HEAPU32[tm + 40 >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[tm + 4 >> 2],\n        tm_hour: HEAP32[tm + 8 >> 2],\n        tm_mday: HEAP32[tm + 12 >> 2],\n        tm_mon: HEAP32[tm + 16 >> 2],\n        tm_year: HEAP32[tm + 20 >> 2],\n        tm_wday: HEAP32[tm + 24 >> 2],\n        tm_yday: HEAP32[tm + 28 >> 2],\n        tm_isdst: HEAP32[tm + 32 >> 2],\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\"\n      };\n\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n      }\n\n      var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n      function leadingSomething(value, digits, character) {\n        var str = typeof value == \"number\" ? value.toString() : value || \"\";\n\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n\n        return str;\n      }\n\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n\n        var compare;\n\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n\n        return compare;\n      }\n\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n          case 1:\n            return janFourth;\n\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n\n      function getWeekBasedYear(date) {\n        var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          }\n\n          return thisDate.getFullYear();\n        }\n\n        return thisDate.getFullYear() - 1;\n      }\n\n      var EXPANSION_RULES_2 = {\n        \"%a\": date => WEEKDAYS[date.tm_wday].substring(0, 3),\n        \"%A\": date => WEEKDAYS[date.tm_wday],\n        \"%b\": date => MONTHS[date.tm_mon].substring(0, 3),\n        \"%B\": date => MONTHS[date.tm_mon],\n        \"%C\": date => {\n          var year = date.tm_year + 1900;\n          return leadingNulls(year / 100 | 0, 2);\n        },\n        \"%d\": date => leadingNulls(date.tm_mday, 2),\n        \"%e\": date => leadingSomething(date.tm_mday, 2, \" \"),\n        \"%g\": date => getWeekBasedYear(date).toString().substring(2),\n        \"%G\": date => getWeekBasedYear(date),\n        \"%H\": date => leadingNulls(date.tm_hour, 2),\n        \"%I\": date => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": date => leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3),\n        \"%m\": date => leadingNulls(date.tm_mon + 1, 2),\n        \"%M\": date => leadingNulls(date.tm_min, 2),\n        \"%n\": () => \"\\n\",\n        \"%p\": date => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          }\n\n          return \"PM\";\n        },\n        \"%S\": date => leadingNulls(date.tm_sec, 2),\n        \"%t\": () => \"\\t\",\n        \"%u\": date => date.tm_wday || 7,\n        \"%U\": date => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        \"%V\": date => {\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n\n          if (!val) {\n            val = 52;\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n\n            if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n              val++;\n            }\n          } else if (val == 53) {\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n          }\n\n          return leadingNulls(val, 2);\n        },\n        \"%w\": date => date.tm_wday,\n        \"%W\": date => {\n          var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        \"%y\": date => (date.tm_year + 1900).toString().substring(2),\n        \"%Y\": date => date.tm_year + 1900,\n        \"%z\": date => {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = off / 60 * 100 + off % 60;\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": date => date.tm_zone,\n        \"%%\": () => \"%\"\n      };\n      pattern = pattern.replace(/%%/g, \"\\0\\0\");\n\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n        }\n      }\n\n      pattern = pattern.replace(/\\0\\0/g, \"%\");\n      var bytes = intArrayFromString(pattern, false);\n\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    };\n\n    var _strftime_l = (s, maxsize, format, tm, loc) => _strftime(s, maxsize, format, tm);\n\n    var getCFunc = ident => {\n      var func = Module[\"_\" + ident];\n      return func;\n    };\n\n    var stringToUTF8OnStack = str => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n\n    var ccall = (ident, returnType, argTypes, args, opts) => {\n      var toC = {\n        \"string\": str => {\n          var ret = 0;\n\n          if (str !== null && str !== undefined && str !== 0) {\n            ret = stringToUTF8OnStack(str);\n          }\n\n          return ret;\n        },\n        \"array\": arr => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") {\n          return UTF8ToString(ret);\n        }\n\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n\n      var ret = func.apply(null, cArgs);\n\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n\n      ret = onDone(ret);\n      return ret;\n    };\n\n    InternalError = Module[\"InternalError\"] = class InternalError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n      }\n\n    };\n    embind_init_charCodes();\n    BindingError = Module[\"BindingError\"] = class BindingError extends Error {\n      constructor(message) {\n        super(message);\n        this.name = \"BindingError\";\n      }\n\n    };\n    init_ClassHandle();\n    init_embind();\n    init_RegisteredPointer();\n    UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n    handleAllocatorInit();\n    init_emval();\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        }\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        }\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        }\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        }\n      }\n    });\n    FS.FSNode = FSNode;\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n    var wasmImports = {\n      d: ___cxa_throw,\n      n: __embind_finalize_value_array,\n      l: __embind_finalize_value_object,\n      w: __embind_register_bigint,\n      G: __embind_register_bool,\n      h: __embind_register_class,\n      g: __embind_register_class_constructor,\n      c: __embind_register_class_function,\n      q: __embind_register_class_property,\n      F: __embind_register_emval,\n      p: __embind_register_enum,\n      i: __embind_register_enum_value,\n      t: __embind_register_float,\n      a: __embind_register_function,\n      j: __embind_register_integer,\n      e: __embind_register_memory_view,\n      u: __embind_register_std_string,\n      r: __embind_register_std_wstring,\n      o: __embind_register_value_array,\n      b: __embind_register_value_array_element,\n      m: __embind_register_value_object,\n      f: __embind_register_value_object_field,\n      H: __embind_register_void,\n      I: __emval_decref,\n      J: __emval_incref,\n      k: __emval_take_value,\n      s: _abort,\n      E: _emscripten_memcpy_js,\n      y: _emscripten_resize_heap,\n      z: _environ_get,\n      A: _environ_sizes_get,\n      B: _fd_close,\n      D: _fd_read,\n      v: _fd_seek,\n      C: _fd_write,\n      x: _strftime_l\n    };\n    var wasmExports = createWasm();\n\n    var ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports[\"L\"])();\n\n    var _malloc = Module[\"_malloc\"] = a0 => (_malloc = Module[\"_malloc\"] = wasmExports[\"M\"])(a0);\n\n    var _free = Module[\"_free\"] = a0 => (_free = Module[\"_free\"] = wasmExports[\"N\"])(a0);\n\n    var ___getTypeName = a0 => (___getTypeName = wasmExports[\"P\"])(a0);\n\n    var __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = () => (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = wasmExports[\"Q\"])();\n\n    var ___errno_location = () => (___errno_location = wasmExports[\"__errno_location\"])();\n\n    var stackSave = () => (stackSave = wasmExports[\"R\"])();\n\n    var stackRestore = a0 => (stackRestore = wasmExports[\"S\"])(a0);\n\n    var stackAlloc = a0 => (stackAlloc = wasmExports[\"T\"])(a0);\n\n    var ___cxa_increment_exception_refcount = a0 => (___cxa_increment_exception_refcount = wasmExports[\"__cxa_increment_exception_refcount\"])(a0);\n\n    var ___cxa_is_pointer_type = a0 => (___cxa_is_pointer_type = wasmExports[\"U\"])(a0);\n\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module[\"dynCall_jiji\"] = wasmExports[\"V\"])(a0, a1, a2, a3, a4);\n\n    var dynCall_viijii = Module[\"dynCall_viijii\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viijii = Module[\"dynCall_viijii\"] = wasmExports[\"W\"])(a0, a1, a2, a3, a4, a5, a6);\n\n    var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = wasmExports[\"X\"])(a0, a1, a2, a3, a4, a5, a6);\n\n    var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = wasmExports[\"Y\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n\n    var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = wasmExports[\"Z\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n\n    Module[\"ccall\"] = ccall;\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n\n    run();\n    return moduleArg.ready;\n  };\n})();\n\nexport default Module;","map":{"version":3,"sources":["C:/Users/91843/OneDrive/desktop2.0/PortfolioWebsite/node_modules/@splinetool/runtime/build/process.js"],"names":["Module","_scriptDir","document","currentScript","src","undefined","moduleArg","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","moduleOverrides","Object","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","locateFile","path","read_","readAsync","readBinary","self","location","href","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","response","onload","onerror","out","console","log","bind","err","error","wasmBinary","noExitRuntime","WebAssembly","abort","wasmMemory","ABORT","EXITSTATUS","assert","condition","text","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","buffer","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","length","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","FS","init","initialized","ignorePermissions","TTY","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","clearInterval","callback","what","e","RuntimeError","dataURIPrefix","isDataURI","filename","startsWith","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","fetch","credentials","then","catch","instantiateArrayBuffer","imports","receiver","binary","instantiate","instance","reason","instantiateAsync","instantiateStreaming","result","createWasm","info","wasmImports","receiveInstance","module","wasmExports","exports","wasmTable","receiveInstantiationResult","tempDouble","tempI64","callbacks","ExceptionInfo","excPtr","ptr","set_type","type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","isPointer","___cxa_is_pointer_type","adjusted","exceptionLast","uncaughtExceptionCount","___cxa_throw","tupleRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","message","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","i","registerType","Array","unregisteredTypes","registered","dt","hasOwnProperty","push","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","map","elt","getterReturnType","concat","setterArgumentType","rawConstructor","rawDestructor","getter","getterContext","setter","setterContext","read","write","o","name","rv","TypeError","GenericWireTypeSize","destructorFunction","structRegistrations","__embind_finalize_value_object","structType","fieldRecords","fields","fieldTypes","field","fieldName","__embind_register_bigint","primitiveType","size","minRange","maxRange","embind_init_charCodes","codes","String","fromCharCode","embind_charCodes","readLatin1String","ret","c","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","count","deleteScheduled","preservePointerOnDelete","ptrType","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","$$","registeredClass","finalizationRegistry","detachFinalizer","runDestructor","releaseClassHandle","value","toDelete","downcastPointer","ptrClass","desiredClass","baseClass","downcast","registeredPointers","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","k","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","fn","init_embind","getBasestPointer","class_","upcast","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","create","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","isSmartPointer","instancePrototype","pointeeType","actualType","getActualType","registeredPointerRecord","call","toType","isConst","constPointerType","pointerType","dp","FinalizationRegistry","register","unregister","init_ClassHandle","ClassHandle","other","leftClass","left","rightClass","right","clone","getPrototypeOf","char_0","char_9","makeLegalFunctionName","f","charCodeAt","createNamedFunction","body","apply","arguments","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","constructor","pureVirtualFunctions","upcastPointer","constNoSmartPtrRawPointerToWireType","isReference","embindRepr","handleClass","genericPointerToWireType","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","readPointer","init_RegisteredPointer","RegisteredPointer","rawGetPointee","replacePublicSymbol","dynCallLegacy","sig","args","wasmTableMirror","getWasmTableEntry","funcPtr","func","get","dynCall","includes","rtn","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","extendError","baseErrorType","errorName","errorClass","stack","Error","toString","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","__derivedClasses","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","newFunc","argumentList","Function","dummy","r","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isAsync","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","splice","__embind_register_class_function","rawInvoker","context","isPureVirtual","Symbol","substring","unboundTypesHandler","method","className","memberFunction","validateThis","this_","__embind_register_class_property","getterSignature","setterSignature","desc","enumerable","configurable","set","v","defineProperty","handleAllocatorInit","HandleAllocator","allocated","has","allocate","freelist","free","emval_handles","__emval_decref","reserved","refcount","count_emval_handles","init_emval","toValue","__embind_register_emval","enumReadValueFromPointer","width","signed","__embind_register_enum","isSigned","ctor","values","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","invokerArgsArray","slice","integerReadValueFromPointer","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","stringToUTF8Array","str","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u","u1","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","decode","subarray","u0","u2","ch","UTF8ToString","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_value_array","constructorSignature","__embind_register_value_array_element","__embind_register_value_object","__embind_register_value_object_field","__embind_register_void","isVoid","__emval_incref","__emval_take_value","arg","_abort","_emscripten_memcpy_js","dest","num","copyWithin","getHeapMax","growMemory","pages","byteLength","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","Math","min","newSize","max","replacement","ENV","getExecutableName","getEnvStrings","strings","lang","navigator","languages","env","stringToAscii","PATH","isAbs","charAt","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","normalize","isAbsolute","trailingSlash","split","filter","p","dirname","root","dir","basename","lastSlash","paths","join2","l","initRandomFill","crypto","view","getRandomValues","randomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","relative","from","to","trim","arr","start","end","fromParts","toParts","samePartsLength","outputParts","FS_stdin_getChar_buffer","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","FS_stdin_getChar","window","prompt","readline","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","fsync","offset","pos","get_char","bytesRead","timestamp","Date","now","put_char","default_tty_ops","val","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","optional_actions","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","resizeFileStorage","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","newname","oldpath","position","canOwn","whence","prot","flags","byteOffset","mmapFlags","asyncLoad","noRunDep","dep","arrayBuffer","event","FS_createDataFile","fileData","canRead","canWrite","createDataFile","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","finish","Browser","handled","plugin","FS_createPreloadedFile","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","FSStream","shared","defineProperties","object","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","buf","writeFile","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","stdin","stdout","stderr","ensureErrnoError","setErrno","code","staticInit","quit","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","LazyUint8Array_get","chunkOffset","chunkSize","chunkNum","setDataGetter","LazyUint8Array_setDataGetter","cacheLength","LazyUint8Array_cacheLength","datalength","Number","getResponseHeader","header","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","lazyArray","_length","_chunkSize","forceLoadLazyFile","writeChunks","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","getStreamFromFD","doStat","abs","floor","getTime","doMsync","addr","varargs","getp","getStr","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","doReadv","iov","iovcnt","curr","_fd_read","pnum","convertI32PairToI53Checked","lo","hi","NaN","_fd_seek","offset_low","offset_high","newOffset","isNaN","doWritev","_fd_write","isLeapYear","year","arraySum","index","sum","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","writeArrayToMemory","_strftime","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","dec31","jan1","off","ahead","bytes","_strftime_l","loc","getCFunc","ident","stringToUTF8OnStack","stackAlloc","ccall","returnType","toC","convertReturnValue","Boolean","cArgs","converter","stackSave","onDone","stackRestore","readMode","writeMode","createPreloadedFile","n","w","G","h","g","q","F","j","H","I","J","E","y","z","A","B","D","C","___wasm_call_ctors","a0","__embind_initialize_bindings","___errno_location","___cxa_increment_exception_refcount","dynCall_jiji","a1","a2","a3","a4","dynCall_viijii","a5","a6","dynCall_iiiiij","dynCall_iiiiijj","a7","a8","dynCall_iiiiiijj","a9","calledRun","runCaller","run","doRun","setTimeout","ready"],"mappings":"AACA,IAAIA,MAAM,GAAG,CAAC,MAAM;AAClB,MAAIC,UAAU,GAAG,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACC,aAA5C,GAA4DD,QAAQ,CAACC,aAAT,CAAuBC,GAAnF,GAAyFC,SAA1G;;AAEA,SACF,YAAyB;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;AAEzB,QAAIN,MAAM,GAACM,SAAX;AAAqB,QAAIC,mBAAJ,EAAwBC,kBAAxB;AAA2CR,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAgB,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AAACJ,MAAAA,mBAAmB,GAACG,OAApB;AAA4BF,MAAAA,kBAAkB,GAACG,MAAnB;AAA0B,KAArF,CAAhB;AAAuG,QAAIC,eAAe,GAACC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBd,MAAjB,CAApB;AAA6C,QAAIe,UAAU,GAAC,EAAf;AAAkB,QAAIC,WAAW,GAAC,gBAAhB;;AAAiC,QAAIC,KAAK,GAAC,CAACC,MAAD,EAAQC,OAAR,KAAkB;AAAC,YAAMA,OAAN;AAAc,KAA3C;;AAA4C,QAAIC,kBAAkB,GAAC,IAAvB;AAA4B,QAAIC,qBAAqB,GAAC,KAA1B;AAAgC,QAAIC,eAAe,GAAC,EAApB;;AAAuB,aAASC,UAAT,CAAoBC,IAApB,EAAyB;AAAC,UAAGxB,MAAM,CAAC,YAAD,CAAT,EAAwB;AAAC,eAAOA,MAAM,CAAC,YAAD,CAAN,CAAqBwB,IAArB,EAA0BF,eAA1B,CAAP;AAAkD;;AAAA,aAAOA,eAAe,GAACE,IAAvB;AAA4B;;AAAA,QAAIC,KAAJ,EAAUC,SAAV,EAAoBC,UAApB;;AAA+B,QAAGP,kBAAkB,IAAEC,qBAAvB,EAA6C;AAAC,UAAGA,qBAAH,EAAyB;AAACC,QAAAA,eAAe,GAACM,IAAI,CAACC,QAAL,CAAcC,IAA9B;AAAmC,OAA7D,MAAkE,IAAG,OAAO5B,QAAP,IAAiB,WAAjB,IAA8BA,QAAQ,CAACC,aAA1C,EAAwD;AAACmB,QAAAA,eAAe,GAACpB,QAAQ,CAACC,aAAT,CAAuBC,GAAvC;AAA2C;;AAAA,UAAGH,UAAH,EAAc;AAACqB,QAAAA,eAAe,GAACrB,UAAhB;AAA2B;;AAAA,UAAGqB,eAAe,CAACS,OAAhB,CAAwB,OAAxB,MAAmC,CAAtC,EAAwC;AAACT,QAAAA,eAAe,GAACA,eAAe,CAACU,MAAhB,CAAuB,CAAvB,EAAyBV,eAAe,CAACW,OAAhB,CAAwB,QAAxB,EAAiC,EAAjC,EAAqCC,WAArC,CAAiD,GAAjD,IAAsD,CAA/E,CAAhB;AAAkG,OAA3I,MAA+I;AAACZ,QAAAA,eAAe,GAAC,EAAhB;AAAmB;;AAAA;AAACG,QAAAA,KAAK,GAACU,GAAG,IAAE;AAAC,cAAIC,GAAG,GAAC,IAAIC,cAAJ,EAAR;AAA2BD,UAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAeH,GAAf,EAAmB,KAAnB;AAA0BC,UAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AAAe,iBAAOH,GAAG,CAACI,YAAX;AAAwB,SAAxG;;AAAyG,YAAGnB,qBAAH,EAAyB;AAACM,UAAAA,UAAU,GAACQ,GAAG,IAAE;AAAC,gBAAIC,GAAG,GAAC,IAAIC,cAAJ,EAAR;AAA2BD,YAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAeH,GAAf,EAAmB,KAAnB;AAA0BC,YAAAA,GAAG,CAACK,YAAJ,GAAiB,aAAjB;AAA+BL,YAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AAAe,mBAAO,IAAIG,UAAJ,CAAeN,GAAG,CAACO,QAAnB,CAAP;AAAoC,WAAxJ;AAAyJ;;AAAAjB,QAAAA,SAAS,GAAC,CAACS,GAAD,EAAKS,MAAL,EAAYC,OAAZ,KAAsB;AAAC,cAAIT,GAAG,GAAC,IAAIC,cAAJ,EAAR;AAA2BD,UAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAeH,GAAf,EAAmB,IAAnB;AAAyBC,UAAAA,GAAG,CAACK,YAAJ,GAAiB,aAAjB;;AAA+BL,UAAAA,GAAG,CAACQ,MAAJ,GAAW,MAAI;AAAC,gBAAGR,GAAG,CAAClB,MAAJ,IAAY,GAAZ,IAAiBkB,GAAG,CAAClB,MAAJ,IAAY,CAAZ,IAAekB,GAAG,CAACO,QAAvC,EAAgD;AAACC,cAAAA,MAAM,CAACR,GAAG,CAACO,QAAL,CAAN;AAAqB;AAAO;;AAAAE,YAAAA,OAAO;AAAG,WAAvG;;AAAwGT,UAAAA,GAAG,CAACS,OAAJ,GAAYA,OAAZ;AAAoBT,UAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AAAe,SAA/P;AAAgQ;AAAC,KAA/7B,MAAm8B,CAAE;;AAAA,QAAIO,GAAG,GAAC9C,MAAM,CAAC,OAAD,CAAN,IAAiB+C,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAiBF,OAAjB,CAAzB;AAAmD,QAAIG,GAAG,GAAClD,MAAM,CAAC,UAAD,CAAN,IAAoB+C,OAAO,CAACI,KAAR,CAAcF,IAAd,CAAmBF,OAAnB,CAA5B;AAAwDlC,IAAAA,MAAM,CAACC,MAAP,CAAcd,MAAd,EAAqBY,eAArB;AAAsCA,IAAAA,eAAe,GAAC,IAAhB;AAAqB,QAAGZ,MAAM,CAAC,WAAD,CAAT,EAAuBe,UAAU,GAACf,MAAM,CAAC,WAAD,CAAjB;AAA+B,QAAGA,MAAM,CAAC,aAAD,CAAT,EAAyBgB,WAAW,GAAChB,MAAM,CAAC,aAAD,CAAlB;AAAkC,QAAGA,MAAM,CAAC,MAAD,CAAT,EAAkBiB,KAAK,GAACjB,MAAM,CAAC,MAAD,CAAZ;AAAqB,QAAIoD,UAAJ;AAAe,QAAGpD,MAAM,CAAC,YAAD,CAAT,EAAwBoD,UAAU,GAACpD,MAAM,CAAC,YAAD,CAAjB;AAAgC,QAAIqD,aAAa,GAACrD,MAAM,CAAC,eAAD,CAAN,IAAyB,IAA3C;;AAAgD,QAAG,OAAOsD,WAAP,IAAoB,QAAvB,EAAgC;AAACC,MAAAA,KAAK,CAAC,iCAAD,CAAL;AAAyC;;AAAA,QAAIC,UAAJ;AAAe,QAAIC,KAAK,GAAC,KAAV;AAAgB,QAAIC,UAAJ;;AAAe,aAASC,MAAT,CAAgBC,SAAhB,EAA0BC,IAA1B,EAA+B;AAAC,UAAG,CAACD,SAAJ,EAAc;AAACL,QAAAA,KAAK,CAACM,IAAD,CAAL;AAAY;AAAC;;AAAA,QAAIC,KAAJ,EAAUC,MAAV,EAAiBC,MAAjB,EAAwBC,OAAxB,EAAgCC,MAAhC,EAAuCC,OAAvC,EAA+CC,OAA/C,EAAuDC,OAAvD;;AAA+D,aAASC,iBAAT,GAA4B;AAAC,UAAIC,CAAC,GAACf,UAAU,CAACgB,MAAjB;AAAwBxE,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAgB8D,KAAK,GAAC,IAAIW,SAAJ,CAAcF,CAAd,CAAtB;AAAuCvE,MAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBgE,MAAM,GAAC,IAAIU,UAAJ,CAAeH,CAAf,CAAxB;AAA0CvE,MAAAA,MAAM,CAAC,QAAD,CAAN,GAAiB+D,MAAM,GAAC,IAAIrB,UAAJ,CAAe6B,CAAf,CAAxB;AAA0CvE,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBiE,OAAO,GAAC,IAAIU,WAAJ,CAAgBJ,CAAhB,CAA1B;AAA6CvE,MAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBkE,MAAM,GAAC,IAAIU,UAAJ,CAAeL,CAAf,CAAxB;AAA0CvE,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBmE,OAAO,GAAC,IAAIU,WAAJ,CAAgBN,CAAhB,CAA1B;AAA6CvE,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBoE,OAAO,GAAC,IAAIU,YAAJ,CAAiBP,CAAjB,CAA1B;AAA8CvE,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAkBqE,OAAO,GAAC,IAAIU,YAAJ,CAAiBR,CAAjB,CAA1B;AAA8C;;AAAA,QAAIS,YAAY,GAAC,EAAjB;AAAoB,QAAIC,UAAU,GAAC,EAAf;AAAkB,QAAIC,aAAa,GAAC,EAAlB;AAAqB,QAAIC,kBAAkB,GAAC,KAAvB;;AAA6B,aAASC,MAAT,GAAiB;AAAC,UAAGpF,MAAM,CAAC,QAAD,CAAT,EAAoB;AAAC,YAAG,OAAOA,MAAM,CAAC,QAAD,CAAb,IAAyB,UAA5B,EAAuCA,MAAM,CAAC,QAAD,CAAN,GAAiB,CAACA,MAAM,CAAC,QAAD,CAAP,CAAjB;;AAAoC,eAAMA,MAAM,CAAC,QAAD,CAAN,CAAiBqF,MAAvB,EAA8B;AAACC,UAAAA,WAAW,CAACtF,MAAM,CAAC,QAAD,CAAN,CAAiBuF,KAAjB,EAAD,CAAX;AAAsC;AAAC;;AAAAC,MAAAA,oBAAoB,CAACR,YAAD,CAApB;AAAmC;;AAAA,aAASS,WAAT,GAAsB;AAACN,MAAAA,kBAAkB,GAAC,IAAnB;AAAwB,UAAG,CAACnF,MAAM,CAAC,UAAD,CAAP,IAAqB,CAAC0F,EAAE,CAACC,IAAH,CAAQC,WAAjC,EAA6CF,EAAE,CAACC,IAAH;AAAUD,MAAAA,EAAE,CAACG,iBAAH,GAAqB,KAArB;AAA2BC,MAAAA,GAAG,CAACH,IAAJ;AAAWH,MAAAA,oBAAoB,CAACP,UAAD,CAApB;AAAiC;;AAAA,aAASc,OAAT,GAAkB;AAAC,UAAG/F,MAAM,CAAC,SAAD,CAAT,EAAqB;AAAC,YAAG,OAAOA,MAAM,CAAC,SAAD,CAAb,IAA0B,UAA7B,EAAwCA,MAAM,CAAC,SAAD,CAAN,GAAkB,CAACA,MAAM,CAAC,SAAD,CAAP,CAAlB;;AAAsC,eAAMA,MAAM,CAAC,SAAD,CAAN,CAAkBqF,MAAxB,EAA+B;AAACW,UAAAA,YAAY,CAAChG,MAAM,CAAC,SAAD,CAAN,CAAkBuF,KAAlB,EAAD,CAAZ;AAAwC;AAAC;;AAAAC,MAAAA,oBAAoB,CAACN,aAAD,CAApB;AAAoC;;AAAA,aAASI,WAAT,CAAqBW,EAArB,EAAwB;AAACjB,MAAAA,YAAY,CAACkB,OAAb,CAAqBD,EAArB;AAAyB;;AAAA,aAASE,SAAT,CAAmBF,EAAnB,EAAsB;AAAChB,MAAAA,UAAU,CAACiB,OAAX,CAAmBD,EAAnB;AAAuB;;AAAA,aAASD,YAAT,CAAsBC,EAAtB,EAAyB;AAACf,MAAAA,aAAa,CAACgB,OAAd,CAAsBD,EAAtB;AAA0B;;AAAA,QAAIG,eAAe,GAAC,CAApB;AAAsB,QAAIC,oBAAoB,GAAC,IAAzB;AAA8B,QAAIC,qBAAqB,GAAC,IAA1B;;AAA+B,aAASC,sBAAT,CAAgCC,EAAhC,EAAmC;AAAC,aAAOA,EAAP;AAAU;;AAAA,aAASC,gBAAT,CAA0BD,EAA1B,EAA6B;AAACJ,MAAAA,eAAe;;AAAG,UAAGpG,MAAM,CAAC,wBAAD,CAAT,EAAoC;AAACA,QAAAA,MAAM,CAAC,wBAAD,CAAN,CAAiCoG,eAAjC;AAAkD;AAAC;;AAAA,aAASM,mBAAT,CAA6BF,EAA7B,EAAgC;AAACJ,MAAAA,eAAe;;AAAG,UAAGpG,MAAM,CAAC,wBAAD,CAAT,EAAoC;AAACA,QAAAA,MAAM,CAAC,wBAAD,CAAN,CAAiCoG,eAAjC;AAAkD;;AAAA,UAAGA,eAAe,IAAE,CAApB,EAAsB;AAAC,YAAGC,oBAAoB,KAAG,IAA1B,EAA+B;AAACM,UAAAA,aAAa,CAACN,oBAAD,CAAb;AAAoCA,UAAAA,oBAAoB,GAAC,IAArB;AAA0B;;AAAA,YAAGC,qBAAH,EAAyB;AAAC,cAAIM,QAAQ,GAACN,qBAAb;AAAmCA,UAAAA,qBAAqB,GAAC,IAAtB;AAA2BM,UAAAA,QAAQ;AAAG;AAAC;AAAC;;AAAA,aAASrD,KAAT,CAAesD,IAAf,EAAoB;AAAC,UAAG7G,MAAM,CAAC,SAAD,CAAT,EAAqB;AAACA,QAAAA,MAAM,CAAC,SAAD,CAAN,CAAkB6G,IAAlB;AAAwB;;AAAAA,MAAAA,IAAI,GAAC,aAAWA,IAAX,GAAgB,GAArB;AAAyB3D,MAAAA,GAAG,CAAC2D,IAAD,CAAH;AAAUpD,MAAAA,KAAK,GAAC,IAAN;AAAWC,MAAAA,UAAU,GAAC,CAAX;AAAamD,MAAAA,IAAI,IAAE,0CAAN;AAAiD,UAAIC,CAAC,GAAC,IAAIxD,WAAW,CAACyD,YAAhB,CAA6BF,IAA7B,CAAN;AAAyCrG,MAAAA,kBAAkB,CAACsG,CAAD,CAAlB;AAAsB,YAAMA,CAAN;AAAQ;;AAAA,QAAIE,aAAa,GAAC,uCAAlB;;AAA0D,aAASC,SAAT,CAAmBC,QAAnB,EAA4B;AAAC,aAAOA,QAAQ,CAACC,UAAT,CAAoBH,aAApB,CAAP;AAA0C;;AAAA,QAAII,cAAJ;AAAmBA,IAAAA,cAAc,GAAC,cAAf;;AAA8B,QAAG,CAACH,SAAS,CAACG,cAAD,CAAb,EAA8B;AAACA,MAAAA,cAAc,GAAC7F,UAAU,CAAC6F,cAAD,CAAzB;AAA0C;;AAAA,aAASC,aAAT,CAAuBC,IAAvB,EAA4B;AAAC,UAAGA,IAAI,IAAEF,cAAN,IAAsBhE,UAAzB,EAAoC;AAAC,eAAO,IAAIV,UAAJ,CAAeU,UAAf,CAAP;AAAkC;;AAAA,UAAGzB,UAAH,EAAc;AAAC,eAAOA,UAAU,CAAC2F,IAAD,CAAjB;AAAwB;;AAAA,YAAK,iDAAL;AAAuD;;AAAA,aAASC,gBAAT,CAA0BC,UAA1B,EAAqC;AAAC,UAAG,CAACpE,UAAD,KAAchC,kBAAkB,IAAEC,qBAAlC,CAAH,EAA4D;AAAC,YAAG,OAAOoG,KAAP,IAAc,UAAjB,EAA4B;AAAC,iBAAOA,KAAK,CAACD,UAAD,EAAY;AAACE,YAAAA,WAAW,EAAC;AAAb,WAAZ,CAAL,CAA8CC,IAA9C,CAAmDhF,QAAQ,IAAE;AAAC,gBAAG,CAACA,QAAQ,CAAC,IAAD,CAAZ,EAAmB;AAAC,oBAAK,yCAAuC6E,UAAvC,GAAkD,GAAvD;AAA2D;;AAAA,mBAAO7E,QAAQ,CAAC,aAAD,CAAR,EAAP;AAAiC,WAA9K,EAAgLiF,KAAhL,CAAsL,MAAIP,aAAa,CAACG,UAAD,CAAvM,CAAP;AAA4N;AAAC;;AAAA,aAAO/G,OAAO,CAACC,OAAR,GAAkBiH,IAAlB,CAAuB,MAAIN,aAAa,CAACG,UAAD,CAAxC,CAAP;AAA6D;;AAAA,aAASK,sBAAT,CAAgCL,UAAhC,EAA2CM,OAA3C,EAAmDC,QAAnD,EAA4D;AAAC,aAAOR,gBAAgB,CAACC,UAAD,CAAhB,CAA6BG,IAA7B,CAAkCK,MAAM,IAAE1E,WAAW,CAAC2E,WAAZ,CAAwBD,MAAxB,EAA+BF,OAA/B,CAA1C,EAAmFH,IAAnF,CAAwFO,QAAQ,IAAEA,QAAlG,EAA4GP,IAA5G,CAAiHI,QAAjH,EAA0HI,MAAM,IAAE;AAACjF,QAAAA,GAAG,CAAE,0CAAyCiF,MAAO,EAAlD,CAAH;AAAwD5E,QAAAA,KAAK,CAAC4E,MAAD,CAAL;AAAc,OAAzM,CAAP;AAAkN;;AAAA,aAASC,gBAAT,CAA0BJ,MAA1B,EAAiCR,UAAjC,EAA4CM,OAA5C,EAAoDlB,QAApD,EAA6D;AAAC,UAAG,CAACoB,MAAD,IAAS,OAAO1E,WAAW,CAAC+E,oBAAnB,IAAyC,UAAlD,IAA8D,CAACpB,SAAS,CAACO,UAAD,CAAxE,IAAsF,OAAOC,KAAP,IAAc,UAAvG,EAAkH;AAAC,eAAOA,KAAK,CAACD,UAAD,EAAY;AAACE,UAAAA,WAAW,EAAC;AAAb,SAAZ,CAAL,CAA8CC,IAA9C,CAAmDhF,QAAQ,IAAE;AAAC,cAAI2F,MAAM,GAAChF,WAAW,CAAC+E,oBAAZ,CAAiC1F,QAAjC,EAA0CmF,OAA1C,CAAX;AAA8D,iBAAOQ,MAAM,CAACX,IAAP,CAAYf,QAAZ,EAAqB,UAASuB,MAAT,EAAgB;AAACjF,YAAAA,GAAG,CAAE,kCAAiCiF,MAAO,EAA1C,CAAH;AAAgDjF,YAAAA,GAAG,CAAC,2CAAD,CAAH;AAAiD,mBAAO2E,sBAAsB,CAACL,UAAD,EAAYM,OAAZ,EAAoBlB,QAApB,CAA7B;AAA2D,WAAlM,CAAP;AAA2M,SAAvU,CAAP;AAAgV;;AAAA,aAAOiB,sBAAsB,CAACL,UAAD,EAAYM,OAAZ,EAAoBlB,QAApB,CAA7B;AAA2D;;AAAA,aAAS2B,UAAT,GAAqB;AAAC,UAAIC,IAAI,GAAC;AAAC,aAAIC;AAAL,OAAT;;AAA2B,eAASC,eAAT,CAAyBR,QAAzB,EAAkCS,MAAlC,EAAyC;AAACC,QAAAA,WAAW,GAACV,QAAQ,CAACW,OAArB;AAA6BrF,QAAAA,UAAU,GAACoF,WAAW,CAAC,GAAD,CAAtB;AAA4BtE,QAAAA,iBAAiB;AAAGwE,QAAAA,SAAS,GAACF,WAAW,CAAC,GAAD,CAArB;AAA2BzC,QAAAA,SAAS,CAACyC,WAAW,CAAC,GAAD,CAAZ,CAAT;AAA4BlC,QAAAA,mBAAmB,CAAC,kBAAD,CAAnB;AAAwC,eAAOkC,WAAP;AAAmB;;AAAAnC,MAAAA,gBAAgB,CAAC,kBAAD,CAAhB;;AAAqC,eAASsC,0BAAT,CAAoCT,MAApC,EAA2C;AAACI,QAAAA,eAAe,CAACJ,MAAM,CAAC,UAAD,CAAP,CAAf;AAAoC;;AAAA,UAAGtI,MAAM,CAAC,iBAAD,CAAT,EAA6B;AAAC,YAAG;AAAC,iBAAOA,MAAM,CAAC,iBAAD,CAAN,CAA0BwI,IAA1B,EAA+BE,eAA/B,CAAP;AAAuD,SAA3D,CAA2D,OAAM5B,CAAN,EAAQ;AAAC5D,UAAAA,GAAG,CAAE,sDAAqD4D,CAAE,EAAzD,CAAH;AAA+DtG,UAAAA,kBAAkB,CAACsG,CAAD,CAAlB;AAAsB;AAAC;;AAAAsB,MAAAA,gBAAgB,CAAChF,UAAD,EAAYgE,cAAZ,EAA2BoB,IAA3B,EAAgCO,0BAAhC,CAAhB,CAA4EnB,KAA5E,CAAkFpH,kBAAlF;AAAsG,aAAM,EAAN;AAAS;;AAAA,QAAIwI,UAAJ;AAAe,QAAIC,OAAJ;;AAAY,QAAIzD,oBAAoB,GAAC0D,SAAS,IAAE;AAAC,aAAMA,SAAS,CAAC7D,MAAV,GAAiB,CAAvB,EAAyB;AAAC6D,QAAAA,SAAS,CAAC3D,KAAV,GAAkBvF,MAAlB;AAA0B;AAAC,KAA1F;;AAA2F,aAASmJ,aAAT,CAAuBC,MAAvB,EAA8B;AAAC,WAAKA,MAAL,GAAYA,MAAZ;AAAmB,WAAKC,GAAL,GAASD,MAAM,GAAC,EAAhB;;AAAmB,WAAKE,QAAL,GAAc,UAASC,IAAT,EAAc;AAACpF,QAAAA,OAAO,CAAC,KAAKkF,GAAL,GAAS,CAAT,IAAY,CAAb,CAAP,GAAuBE,IAAvB;AAA4B,OAAzD;;AAA0D,WAAKC,QAAL,GAAc,YAAU;AAAC,eAAOrF,OAAO,CAAC,KAAKkF,GAAL,GAAS,CAAT,IAAY,CAAb,CAAd;AAA8B,OAAvD;;AAAwD,WAAKI,cAAL,GAAoB,UAASC,UAAT,EAAoB;AAACvF,QAAAA,OAAO,CAAC,KAAKkF,GAAL,GAAS,CAAT,IAAY,CAAb,CAAP,GAAuBK,UAAvB;AAAkC,OAA3E;;AAA4E,WAAKC,cAAL,GAAoB,YAAU;AAAC,eAAOxF,OAAO,CAAC,KAAKkF,GAAL,GAAS,CAAT,IAAY,CAAb,CAAd;AAA8B,OAA7D;;AAA8D,WAAKO,UAAL,GAAgB,UAASC,MAAT,EAAgB;AAACA,QAAAA,MAAM,GAACA,MAAM,GAAC,CAAD,GAAG,CAAhB;AAAkB/F,QAAAA,KAAK,CAAC,KAAKuF,GAAL,GAAS,EAAT,IAAa,CAAd,CAAL,GAAsBQ,MAAtB;AAA6B,OAAhF;;AAAiF,WAAKC,UAAL,GAAgB,YAAU;AAAC,eAAOhG,KAAK,CAAC,KAAKuF,GAAL,GAAS,EAAT,IAAa,CAAd,CAAL,IAAuB,CAA9B;AAAgC,OAA3D;;AAA4D,WAAKU,YAAL,GAAkB,UAASC,QAAT,EAAkB;AAACA,QAAAA,QAAQ,GAACA,QAAQ,GAAC,CAAD,GAAG,CAApB;AAAsBlG,QAAAA,KAAK,CAAC,KAAKuF,GAAL,GAAS,EAAT,IAAa,CAAd,CAAL,GAAsBW,QAAtB;AAA+B,OAA1F;;AAA2F,WAAKC,YAAL,GAAkB,YAAU;AAAC,eAAOnG,KAAK,CAAC,KAAKuF,GAAL,GAAS,EAAT,IAAa,CAAd,CAAL,IAAuB,CAA9B;AAAgC,OAA7D;;AAA8D,WAAK1D,IAAL,GAAU,UAAS4D,IAAT,EAAcG,UAAd,EAAyB;AAAC,aAAKQ,gBAAL,CAAsB,CAAtB;AAAyB,aAAKZ,QAAL,CAAcC,IAAd;AAAoB,aAAKE,cAAL,CAAoBC,UAApB;AAAgC,OAAjH;;AAAkH,WAAKQ,gBAAL,GAAsB,UAASC,WAAT,EAAqB;AAAChG,QAAAA,OAAO,CAAC,KAAKkF,GAAL,GAAS,EAAT,IAAa,CAAd,CAAP,GAAwBc,WAAxB;AAAoC,OAAhF;;AAAiF,WAAKC,gBAAL,GAAsB,YAAU;AAAC,eAAOjG,OAAO,CAAC,KAAKkF,GAAL,GAAS,EAAT,IAAa,CAAd,CAAd;AAA+B,OAAhE;;AAAiE,WAAKgB,iBAAL,GAAuB,YAAU;AAAC,YAAIC,SAAS,GAACC,sBAAsB,CAAC,KAAKf,QAAL,EAAD,CAApC;;AAAsD,YAAGc,SAAH,EAAa;AAAC,iBAAOnG,OAAO,CAAC,KAAKiF,MAAL,IAAa,CAAd,CAAd;AAA+B;;AAAA,YAAIoB,QAAQ,GAAC,KAAKJ,gBAAL,EAAb;AAAqC,YAAGI,QAAQ,KAAG,CAAd,EAAgB,OAAOA,QAAP;AAAgB,eAAO,KAAKpB,MAAZ;AAAmB,OAA7N;AAA8N;;AAAA,QAAIqB,aAAa,GAAC,CAAlB;AAAoB,QAAIC,sBAAsB,GAAC,CAA3B;;AAA6B,QAAIC,YAAY,GAAC,CAACtB,GAAD,EAAKE,IAAL,EAAUG,UAAV,KAAuB;AAAC,UAAIlB,IAAI,GAAC,IAAIW,aAAJ,CAAkBE,GAAlB,CAAT;AAAgCb,MAAAA,IAAI,CAAC7C,IAAL,CAAU4D,IAAV,EAAeG,UAAf;AAA2Be,MAAAA,aAAa,GAACpB,GAAd;AAAkBqB,MAAAA,sBAAsB;AAAG,YAAMD,aAAN;AAAoB,KAAnK;;AAAoK,QAAIG,kBAAkB,GAAC,EAAvB;;AAA0B,QAAIC,cAAc,GAACC,WAAW,IAAE;AAAC,aAAMA,WAAW,CAACzF,MAAlB,EAAyB;AAAC,YAAIgE,GAAG,GAACyB,WAAW,CAACC,GAAZ,EAAR;AAA0B,YAAIC,GAAG,GAACF,WAAW,CAACC,GAAZ,EAAR;AAA0BC,QAAAA,GAAG,CAAC3B,GAAD,CAAH;AAAS;AAAC,KAAzH;;AAA0H,aAAS4B,0BAAT,CAAoCC,OAApC,EAA4C;AAAC,aAAO,KAAK,cAAL,EAAqBhH,MAAM,CAACgH,OAAO,IAAE,CAAV,CAA3B,CAAP;AAAgD;;AAAA,QAAIC,oBAAoB,GAAC,EAAzB;AAA4B,QAAIC,eAAe,GAAC,EAApB;AAAuB,QAAIC,gBAAgB,GAAC,EAArB;AAAwB,QAAIC,aAAJ;;AAAkB,QAAIC,kBAAkB,GAACC,OAAO,IAAE;AAAC,YAAM,IAAIF,aAAJ,CAAkBE,OAAlB,CAAN;AAAiC,KAAlE;;AAAmE,QAAIC,6BAA6B,GAAC,CAACC,OAAD,EAASC,cAAT,EAAwBC,iBAAxB,KAA4C;AAACF,MAAAA,OAAO,CAACG,OAAR,CAAgB,UAAStC,IAAT,EAAc;AAAC8B,QAAAA,gBAAgB,CAAC9B,IAAD,CAAhB,GAAuBoC,cAAvB;AAAsC,OAArE;;AAAuE,eAASG,UAAT,CAAoBC,cAApB,EAAmC;AAAC,YAAIC,gBAAgB,GAACJ,iBAAiB,CAACG,cAAD,CAAtC;;AAAuD,YAAGC,gBAAgB,CAAC3G,MAAjB,KAA0BqG,OAAO,CAACrG,MAArC,EAA4C;AAACkG,UAAAA,kBAAkB,CAAC,iCAAD,CAAlB;AAAsD;;AAAA,aAAI,IAAIU,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,OAAO,CAACrG,MAAtB,EAA6B,EAAE4G,CAA/B,EAAiC;AAACC,UAAAA,YAAY,CAACR,OAAO,CAACO,CAAD,CAAR,EAAYD,gBAAgB,CAACC,CAAD,CAA5B,CAAZ;AAA6C;AAAC;;AAAA,UAAIF,cAAc,GAAC,IAAII,KAAJ,CAAUR,cAAc,CAACtG,MAAzB,CAAnB;AAAoD,UAAI+G,iBAAiB,GAAC,EAAtB;AAAyB,UAAIC,UAAU,GAAC,CAAf;AAAiBV,MAAAA,cAAc,CAACE,OAAf,CAAuB,CAACS,EAAD,EAAIL,CAAJ,KAAQ;AAAC,YAAGb,eAAe,CAACmB,cAAhB,CAA+BD,EAA/B,CAAH,EAAsC;AAACP,UAAAA,cAAc,CAACE,CAAD,CAAd,GAAkBb,eAAe,CAACkB,EAAD,CAAjC;AAAsC,SAA7E,MAAiF;AAACF,UAAAA,iBAAiB,CAACI,IAAlB,CAAuBF,EAAvB;;AAA2B,cAAG,CAACnB,oBAAoB,CAACoB,cAArB,CAAoCD,EAApC,CAAJ,EAA4C;AAACnB,YAAAA,oBAAoB,CAACmB,EAAD,CAApB,GAAyB,EAAzB;AAA4B;;AAAAnB,UAAAA,oBAAoB,CAACmB,EAAD,CAApB,CAAyBE,IAAzB,CAA8B,MAAI;AAACT,YAAAA,cAAc,CAACE,CAAD,CAAd,GAAkBb,eAAe,CAACkB,EAAD,CAAjC;AAAsC,cAAED,UAAF;;AAAa,gBAAGA,UAAU,KAAGD,iBAAiB,CAAC/G,MAAlC,EAAyC;AAACyG,cAAAA,UAAU,CAACC,cAAD,CAAV;AAA2B;AAAC,WAA5J;AAA8J;AAAC,OAArX;;AAAuX,UAAG,MAAIK,iBAAiB,CAAC/G,MAAzB,EAAgC;AAACyG,QAAAA,UAAU,CAACC,cAAD,CAAV;AAA2B;AAAC,KAAt7B;;AAAu7B,QAAIU,6BAA6B,GAACC,YAAY,IAAE;AAAC,UAAIC,GAAG,GAAC/B,kBAAkB,CAAC8B,YAAD,CAA1B;AAAyC,aAAO9B,kBAAkB,CAAC8B,YAAD,CAAzB;AAAwC,UAAIE,QAAQ,GAACD,GAAG,CAACC,QAAjB;AAA0B,UAAIC,cAAc,GAACD,QAAQ,CAACvH,MAA5B;AAAmC,UAAIyH,YAAY,GAACF,QAAQ,CAACG,GAAT,CAAaC,GAAG,IAAEA,GAAG,CAACC,gBAAtB,EAAwCC,MAAxC,CAA+CN,QAAQ,CAACG,GAAT,CAAaC,GAAG,IAAEA,GAAG,CAACG,kBAAtB,CAA/C,CAAjB;AAA2G,UAAIC,cAAc,GAACT,GAAG,CAACS,cAAvB;AAAsC,UAAIC,aAAa,GAACV,GAAG,CAACU,aAAtB;AAAoC5B,MAAAA,6BAA6B,CAAC,CAACiB,YAAD,CAAD,EAAgBI,YAAhB,EAA6B,UAASA,YAAT,EAAsB;AAACF,QAAAA,QAAQ,CAACf,OAAT,CAAiB,CAACmB,GAAD,EAAKf,CAAL,KAAS;AAAC,cAAIgB,gBAAgB,GAACH,YAAY,CAACb,CAAD,CAAjC;AAAqC,cAAIqB,MAAM,GAACN,GAAG,CAACM,MAAf;AAAsB,cAAIC,aAAa,GAACP,GAAG,CAACO,aAAtB;AAAoC,cAAIJ,kBAAkB,GAACL,YAAY,CAACb,CAAC,GAACY,cAAH,CAAnC;AAAsD,cAAIW,MAAM,GAACR,GAAG,CAACQ,MAAf;AAAsB,cAAIC,aAAa,GAACT,GAAG,CAACS,aAAtB;;AAAoCT,UAAAA,GAAG,CAACU,IAAJ,GAASrE,GAAG,IAAE4D,gBAAgB,CAAC,cAAD,CAAhB,CAAiCK,MAAM,CAACC,aAAD,EAAelE,GAAf,CAAvC,CAAd;;AAA0E2D,UAAAA,GAAG,CAACW,KAAJ,GAAU,CAACtE,GAAD,EAAKuE,CAAL,KAAS;AAAC,gBAAI9C,WAAW,GAAC,EAAhB;AAAmB0C,YAAAA,MAAM,CAACC,aAAD,EAAepE,GAAf,EAAmB8D,kBAAkB,CAAC,YAAD,CAAlB,CAAiCrC,WAAjC,EAA6C8C,CAA7C,CAAnB,CAAN;AAA0E/C,YAAAA,cAAc,CAACC,WAAD,CAAd;AAA4B,WAA7I;AAA8I,SAAlc;AAAoc,eAAM,CAAC;AAAC+C,UAAAA,IAAI,EAAClB,GAAG,CAACkB,IAAV;AAAe,0BAAexE,GAAG,IAAE;AAAC,gBAAIyE,EAAE,GAAC,IAAI3B,KAAJ,CAAUU,cAAV,CAAP;;AAAiC,iBAAI,IAAIZ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACY,cAAd,EAA6B,EAAEZ,CAA/B,EAAiC;AAAC6B,cAAAA,EAAE,CAAC7B,CAAD,CAAF,GAAMW,QAAQ,CAACX,CAAD,CAAR,CAAYyB,IAAZ,CAAiBrE,GAAjB,CAAN;AAA4B;;AAAAgE,YAAAA,aAAa,CAAChE,GAAD,CAAb;AAAmB,mBAAOyE,EAAP;AAAU,WAAhK;AAAiK,wBAAa,CAAChD,WAAD,EAAa8C,CAAb,KAAiB;AAAC,gBAAGf,cAAc,KAAGe,CAAC,CAACvI,MAAtB,EAA6B;AAAC,oBAAM,IAAI0I,SAAJ,CAAe,0CAAyCpB,GAAG,CAACkB,IAAK,cAAahB,cAAe,YAAWe,CAAC,CAACvI,MAAO,EAAjH,CAAN;AAA0H;;AAAA,gBAAIgE,GAAG,GAAC+D,cAAc,EAAtB;;AAAyB,iBAAI,IAAInB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACY,cAAd,EAA6B,EAAEZ,CAA/B,EAAiC;AAACW,cAAAA,QAAQ,CAACX,CAAD,CAAR,CAAY0B,KAAZ,CAAkBtE,GAAlB,EAAsBuE,CAAC,CAAC3B,CAAD,CAAvB;AAA4B;;AAAA,gBAAGnB,WAAW,KAAG,IAAjB,EAAsB;AAACA,cAAAA,WAAW,CAAC0B,IAAZ,CAAiBa,aAAjB,EAA+BhE,GAA/B;AAAoC;;AAAA,mBAAOA,GAAP;AAAW,WAArf;AAAsf,4BAAiB2E,mBAAvgB;AAA2hB,kCAAuB/C,0BAAljB;AAA6kBgD,UAAAA,kBAAkB,EAACZ;AAAhmB,SAAD,CAAN;AAAunB,OAA/mC,CAA7B;AAA8oC,KAAlgD;;AAAmgD,QAAIa,mBAAmB,GAAC,EAAxB;;AAA2B,QAAIC,8BAA8B,GAACC,UAAU,IAAE;AAAC,UAAIzB,GAAG,GAACuB,mBAAmB,CAACE,UAAD,CAA3B;AAAwC,aAAOF,mBAAmB,CAACE,UAAD,CAA1B;AAAuC,UAAIhB,cAAc,GAACT,GAAG,CAACS,cAAvB;AAAsC,UAAIC,aAAa,GAACV,GAAG,CAACU,aAAtB;AAAoC,UAAIgB,YAAY,GAAC1B,GAAG,CAAC2B,MAArB;AAA4B,UAAIC,UAAU,GAACF,YAAY,CAACtB,GAAb,CAAiByB,KAAK,IAAEA,KAAK,CAACvB,gBAA9B,EAAgDC,MAAhD,CAAuDmB,YAAY,CAACtB,GAAb,CAAiByB,KAAK,IAAEA,KAAK,CAACrB,kBAA9B,CAAvD,CAAf;AAAyH1B,MAAAA,6BAA6B,CAAC,CAAC2C,UAAD,CAAD,EAAcG,UAAd,EAAyBA,UAAU,IAAE;AAAC,YAAID,MAAM,GAAC,EAAX;AAAcD,QAAAA,YAAY,CAACxC,OAAb,CAAqB,CAAC2C,KAAD,EAAOvC,CAAP,KAAW;AAAC,cAAIwC,SAAS,GAACD,KAAK,CAACC,SAApB;AAA8B,cAAIxB,gBAAgB,GAACsB,UAAU,CAACtC,CAAD,CAA/B;AAAmC,cAAIqB,MAAM,GAACkB,KAAK,CAAClB,MAAjB;AAAwB,cAAIC,aAAa,GAACiB,KAAK,CAACjB,aAAxB;AAAsC,cAAIJ,kBAAkB,GAACoB,UAAU,CAACtC,CAAC,GAACoC,YAAY,CAAChJ,MAAhB,CAAjC;AAAyD,cAAImI,MAAM,GAACgB,KAAK,CAAChB,MAAjB;AAAwB,cAAIC,aAAa,GAACe,KAAK,CAACf,aAAxB;AAAsCa,UAAAA,MAAM,CAACG,SAAD,CAAN,GAAkB;AAACf,YAAAA,IAAI,EAACrE,GAAG,IAAE4D,gBAAgB,CAAC,cAAD,CAAhB,CAAiCK,MAAM,CAACC,aAAD,EAAelE,GAAf,CAAvC,CAAX;AAAuEsE,YAAAA,KAAK,EAAC,CAACtE,GAAD,EAAKuE,CAAL,KAAS;AAAC,kBAAI9C,WAAW,GAAC,EAAhB;AAAmB0C,cAAAA,MAAM,CAACC,aAAD,EAAepE,GAAf,EAAmB8D,kBAAkB,CAAC,YAAD,CAAlB,CAAiCrC,WAAjC,EAA6C8C,CAA7C,CAAnB,CAAN;AAA0E/C,cAAAA,cAAc,CAACC,WAAD,CAAd;AAA4B;AAAhN,WAAlB;AAAoO,SAA3f;AAA6f,eAAM,CAAC;AAAC+C,UAAAA,IAAI,EAAClB,GAAG,CAACkB,IAAV;AAAe,0BAAexE,GAAG,IAAE;AAAC,gBAAIyE,EAAE,GAAC,EAAP;;AAAU,iBAAI,IAAI7B,CAAR,IAAaqC,MAAb,EAAoB;AAACR,cAAAA,EAAE,CAAC7B,CAAD,CAAF,GAAMqC,MAAM,CAACrC,CAAD,CAAN,CAAUyB,IAAV,CAAerE,GAAf,CAAN;AAA0B;;AAAAgE,YAAAA,aAAa,CAAChE,GAAD,CAAb;AAAmB,mBAAOyE,EAAP;AAAU,WAA1H;AAA2H,wBAAa,CAAChD,WAAD,EAAa8C,CAAb,KAAiB;AAAC,iBAAI,IAAIa,SAAR,IAAqBH,MAArB,EAA4B;AAAC,kBAAG,EAAEG,SAAS,IAAIb,CAAf,CAAH,EAAqB;AAAC,sBAAM,IAAIG,SAAJ,CAAe,mBAAkBU,SAAU,GAA3C,CAAN;AAAqD;AAAC;;AAAA,gBAAIpF,GAAG,GAAC+D,cAAc,EAAtB;;AAAyB,iBAAIqB,SAAJ,IAAiBH,MAAjB,EAAwB;AAACA,cAAAA,MAAM,CAACG,SAAD,CAAN,CAAkBd,KAAlB,CAAwBtE,GAAxB,EAA4BuE,CAAC,CAACa,SAAD,CAA7B;AAA0C;;AAAA,gBAAG3D,WAAW,KAAG,IAAjB,EAAsB;AAACA,cAAAA,WAAW,CAAC0B,IAAZ,CAAiBa,aAAjB,EAA+BhE,GAA/B;AAAoC;;AAAA,mBAAOA,GAAP;AAAW,WAAra;AAAsa,4BAAiB2E,mBAAvb;AAA2c,kCAAuB/C,0BAAle;AAA6fgD,UAAAA,kBAAkB,EAACZ;AAAhhB,SAAD,CAAN;AAAuiB,OAAxlC,CAA7B;AAAunC,KAAr9C;;AAAs9C,QAAIqB,wBAAwB,GAAC,CAACC,aAAD,EAAed,IAAf,EAAoBe,IAApB,EAAyBC,QAAzB,EAAkCC,QAAlC,KAA6C,CAAE,CAA5E;;AAA6E,QAAIC,qBAAqB,GAAC,MAAI;AAAC,UAAIC,KAAK,GAAC,IAAI7C,KAAJ,CAAU,GAAV,CAAV;;AAAyB,WAAI,IAAIF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkB,EAAEA,CAApB,EAAsB;AAAC+C,QAAAA,KAAK,CAAC/C,CAAD,CAAL,GAASgD,MAAM,CAACC,YAAP,CAAoBjD,CAApB,CAAT;AAAgC;;AAAAkD,MAAAA,gBAAgB,GAACH,KAAjB;AAAuB,KAAtI;;AAAuI,QAAIG,gBAAJ;;AAAqB,QAAIC,gBAAgB,GAAC/F,GAAG,IAAE;AAAC,UAAIgG,GAAG,GAAC,EAAR;AAAW,UAAIC,CAAC,GAACjG,GAAN;;AAAU,aAAMtF,MAAM,CAACuL,CAAD,CAAZ,EAAgB;AAACD,QAAAA,GAAG,IAAEF,gBAAgB,CAACpL,MAAM,CAACuL,CAAC,EAAF,CAAP,CAArB;AAAmC;;AAAA,aAAOD,GAAP;AAAW,KAA/G;;AAAgH,QAAIE,YAAJ;;AAAiB,QAAIC,iBAAiB,GAAChE,OAAO,IAAE;AAAC,YAAM,IAAI+D,YAAJ,CAAiB/D,OAAjB,CAAN;AAAgC,KAAhE;;AAAiE,aAASiE,kBAAT,CAA4BC,OAA5B,EAAoCC,kBAApC,EAAkE;AAAA,UAAXC,OAAW,uEAAH,EAAG;AAAC,UAAI/B,IAAI,GAAC8B,kBAAkB,CAAC9B,IAA5B;;AAAiC,UAAG,CAAC6B,OAAJ,EAAY;AAACF,QAAAA,iBAAiB,CAAE,SAAQ3B,IAAK,+CAAf,CAAjB;AAAgF;;AAAA,UAAGzC,eAAe,CAACmB,cAAhB,CAA+BmD,OAA/B,CAAH,EAA2C;AAAC,YAAGE,OAAO,CAACC,4BAAX,EAAwC;AAAC;AAAO,SAAhD,MAAoD;AAACL,UAAAA,iBAAiB,CAAE,yBAAwB3B,IAAK,SAA/B,CAAjB;AAA0D;AAAC;;AAAAzC,MAAAA,eAAe,CAACsE,OAAD,CAAf,GAAyBC,kBAAzB;AAA4C,aAAOtE,gBAAgB,CAACqE,OAAD,CAAvB;;AAAiC,UAAGvE,oBAAoB,CAACoB,cAArB,CAAoCmD,OAApC,CAAH,EAAgD;AAAC,YAAIxG,SAAS,GAACiC,oBAAoB,CAACuE,OAAD,CAAlC;AAA4C,eAAOvE,oBAAoB,CAACuE,OAAD,CAA3B;AAAqCxG,QAAAA,SAAS,CAAC2C,OAAV,CAAkB5F,EAAE,IAAEA,EAAE,EAAxB;AAA4B;AAAC;;AAAA,aAASiG,YAAT,CAAsBwD,OAAtB,EAA8BC,kBAA9B,EAA4D;AAAA,UAAXC,OAAW,uEAAH,EAAG;;AAAC,UAAG,EAAE,oBAAmBD,kBAArB,CAAH,EAA4C;AAAC,cAAM,IAAI5B,SAAJ,CAAc,yDAAd,CAAN;AAA+E;;AAAA,aAAO0B,kBAAkB,CAACC,OAAD,EAASC,kBAAT,EAA4BC,OAA5B,CAAzB;AAA8D;;AAAA,QAAI5B,mBAAmB,GAAC,CAAxB;;AAA0B,QAAI8B,sBAAsB,GAAC,CAACJ,OAAD,EAAS7B,IAAT,EAAckC,SAAd,EAAwBC,UAAxB,KAAqC;AAACnC,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B3B,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;AAAW,wBAAe,UAASoC,EAAT,EAAY;AAAC,iBAAM,CAAC,CAACA,EAAR;AAAW,SAAlD;AAAmD,sBAAa,UAASnF,WAAT,EAAqB8C,CAArB,EAAuB;AAAC,iBAAOA,CAAC,GAACmC,SAAD,GAAWC,UAAnB;AAA8B,SAAtH;AAAuH,0BAAiBhC,mBAAxI;AAA4J,gCAAuB,UAAS9C,OAAT,EAAiB;AAAC,iBAAO,KAAK,cAAL,EAAqBnH,MAAM,CAACmH,OAAD,CAA3B,CAAP;AAA6C,SAAlP;AAAmP+C,QAAAA,kBAAkB,EAAC;AAAtQ,OAAT,CAAZ;AAAkS,KAA/X;;AAAgY,QAAIiC,0BAA0B,GAACtC,CAAC,KAAG;AAACuC,MAAAA,KAAK,EAACvC,CAAC,CAACuC,KAAT;AAAeC,MAAAA,eAAe,EAACxC,CAAC,CAACwC,eAAjC;AAAiDC,MAAAA,uBAAuB,EAACzC,CAAC,CAACyC,uBAA3E;AAAmGhH,MAAAA,GAAG,EAACuE,CAAC,CAACvE,GAAzG;AAA6GiH,MAAAA,OAAO,EAAC1C,CAAC,CAAC0C,OAAvH;AAA+HC,MAAAA,QAAQ,EAAC3C,CAAC,CAAC2C,QAA1I;AAAmJC,MAAAA,YAAY,EAAC5C,CAAC,CAAC4C;AAAlK,KAAH,CAAhC;;AAAoN,QAAIC,2BAA2B,GAACC,GAAG,IAAE;AAAC,eAASC,mBAAT,CAA6BC,MAA7B,EAAoC;AAAC,eAAOA,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBQ,eAAlB,CAAkCjD,IAAzC;AAA8C;;AAAA2B,MAAAA,iBAAiB,CAACmB,mBAAmB,CAACD,GAAD,CAAnB,GAAyB,2BAA1B,CAAjB;AAAwE,KAAjM;;AAAkM,QAAIK,oBAAoB,GAAC,KAAzB;;AAA+B,QAAIC,eAAe,GAACJ,MAAM,IAAE,CAAE,CAA9B;;AAA+B,QAAIK,aAAa,GAACJ,EAAE,IAAE;AAAC,UAAGA,EAAE,CAACN,QAAN,EAAe;AAACM,QAAAA,EAAE,CAACL,YAAH,CAAgBnD,aAAhB,CAA8BwD,EAAE,CAACN,QAAjC;AAA2C,OAA3D,MAA+D;AAACM,QAAAA,EAAE,CAACP,OAAH,CAAWQ,eAAX,CAA2BzD,aAA3B,CAAyCwD,EAAE,CAACxH,GAA5C;AAAiD;AAAC,KAAzI;;AAA0I,QAAI6H,kBAAkB,GAACL,EAAE,IAAE;AAACA,MAAAA,EAAE,CAACV,KAAH,CAASgB,KAAT,IAAgB,CAAhB;AAAkB,UAAIC,QAAQ,GAAC,MAAIP,EAAE,CAACV,KAAH,CAASgB,KAA1B;;AAAgC,UAAGC,QAAH,EAAY;AAACH,QAAAA,aAAa,CAACJ,EAAD,CAAb;AAAkB;AAAC,KAA9G;;AAA+G,QAAIQ,eAAe,GAAC,CAAChI,GAAD,EAAKiI,QAAL,EAAcC,YAAd,KAA6B;AAAC,UAAGD,QAAQ,KAAGC,YAAd,EAA2B;AAAC,eAAOlI,GAAP;AAAW;;AAAA,UAAGhJ,SAAS,KAAGkR,YAAY,CAACC,SAA5B,EAAsC;AAAC,eAAO,IAAP;AAAY;;AAAA,UAAI1D,EAAE,GAACuD,eAAe,CAAChI,GAAD,EAAKiI,QAAL,EAAcC,YAAY,CAACC,SAA3B,CAAtB;;AAA4D,UAAG1D,EAAE,KAAG,IAAR,EAAa;AAAC,eAAO,IAAP;AAAY;;AAAA,aAAOyD,YAAY,CAACE,QAAb,CAAsB3D,EAAtB,CAAP;AAAiC,KAAnQ;;AAAoQ,QAAI4D,kBAAkB,GAAC,EAAvB;;AAA0B,QAAIC,yBAAyB,GAAC,MAAI9Q,MAAM,CAAC+Q,IAAP,CAAYC,mBAAZ,EAAiCxM,MAAnE;;AAA0E,QAAIyM,yBAAyB,GAAC,MAAI;AAAC,UAAIhE,EAAE,GAAC,EAAP;;AAAU,WAAI,IAAIiE,CAAR,IAAaF,mBAAb,EAAiC;AAAC,YAAGA,mBAAmB,CAACtF,cAApB,CAAmCwF,CAAnC,CAAH,EAAyC;AAACjE,UAAAA,EAAE,CAACtB,IAAH,CAAQqF,mBAAmB,CAACE,CAAD,CAA3B;AAAgC;AAAC;;AAAA,aAAOjE,EAAP;AAAU,KAApK;;AAAqK,QAAIkE,aAAa,GAAC,EAAlB;;AAAqB,QAAIC,mBAAmB,GAAC,MAAI;AAAC,aAAMD,aAAa,CAAC3M,MAApB,EAA2B;AAAC,YAAIqL,GAAG,GAACsB,aAAa,CAACjH,GAAd,EAAR;AAA4B2F,QAAAA,GAAG,CAACG,EAAJ,CAAOT,eAAP,GAAuB,KAAvB;AAA6BM,QAAAA,GAAG,CAAC,QAAD,CAAH;AAAgB;AAAC,KAAnI;;AAAoI,QAAIwB,aAAJ;;AAAkB,QAAIC,gBAAgB,GAACC,EAAE,IAAE;AAACF,MAAAA,aAAa,GAACE,EAAd;;AAAiB,UAAGJ,aAAa,CAAC3M,MAAd,IAAsB6M,aAAzB,EAAuC;AAACA,QAAAA,aAAa,CAACD,mBAAD,CAAb;AAAmC;AAAC,KAAvH;;AAAwH,QAAII,WAAW,GAAC,MAAI;AAACrS,MAAAA,MAAM,CAAC,2BAAD,CAAN,GAAoC2R,yBAApC;AAA8D3R,MAAAA,MAAM,CAAC,2BAAD,CAAN,GAAoC8R,yBAApC;AAA8D9R,MAAAA,MAAM,CAAC,qBAAD,CAAN,GAA8BiS,mBAA9B;AAAkDjS,MAAAA,MAAM,CAAC,kBAAD,CAAN,GAA2BmS,gBAA3B;AAA4C,KAA/O;;AAAgP,QAAIN,mBAAmB,GAAC,EAAxB;;AAA2B,QAAIS,gBAAgB,GAAC,CAACC,MAAD,EAAQlJ,GAAR,KAAc;AAAC,UAAGA,GAAG,KAAGhJ,SAAT,EAAmB;AAACmP,QAAAA,iBAAiB,CAAC,6BAAD,CAAjB;AAAiD;;AAAA,aAAM+C,MAAM,CAACf,SAAb,EAAuB;AAACnI,QAAAA,GAAG,GAACkJ,MAAM,CAACC,MAAP,CAAcnJ,GAAd,CAAJ;AAAuBkJ,QAAAA,MAAM,GAACA,MAAM,CAACf,SAAd;AAAwB;;AAAA,aAAOnI,GAAP;AAAW,KAA3L;;AAA4L,QAAIoJ,oBAAoB,GAAC,CAACF,MAAD,EAAQlJ,GAAR,KAAc;AAACA,MAAAA,GAAG,GAACiJ,gBAAgB,CAACC,MAAD,EAAQlJ,GAAR,CAApB;AAAiC,aAAOwI,mBAAmB,CAACxI,GAAD,CAA1B;AAAgC,KAAzG;;AAA0G,QAAIqJ,eAAe,GAAC,CAACC,SAAD,EAAWC,MAAX,KAAoB;AAAC,UAAG,CAACA,MAAM,CAACtC,OAAR,IAAiB,CAACsC,MAAM,CAACvJ,GAA5B,EAAgC;AAACkC,QAAAA,kBAAkB,CAAC,0CAAD,CAAlB;AAA+D;;AAAA,UAAIsH,eAAe,GAAC,CAAC,CAACD,MAAM,CAACpC,YAA7B;AAA0C,UAAIsC,WAAW,GAAC,CAAC,CAACF,MAAM,CAACrC,QAAzB;;AAAkC,UAAGsC,eAAe,KAAGC,WAArB,EAAiC;AAACvH,QAAAA,kBAAkB,CAAC,kDAAD,CAAlB;AAAuE;;AAAAqH,MAAAA,MAAM,CAACzC,KAAP,GAAa;AAACgB,QAAAA,KAAK,EAAC;AAAP,OAAb;AAAuB,aAAO4B,eAAe,CAAClS,MAAM,CAACmS,MAAP,CAAcL,SAAd,EAAwB;AAAC9B,QAAAA,EAAE,EAAC;AAACM,UAAAA,KAAK,EAACyB;AAAP;AAAJ,OAAxB,CAAD,CAAtB;AAAqE,KAA1Z;;AAA2Z,aAASK,8BAAT,CAAwC5J,GAAxC,EAA4C;AAAC,UAAI6J,UAAU,GAAC,KAAKC,UAAL,CAAgB9J,GAAhB,CAAf;;AAAoC,UAAG,CAAC6J,UAAJ,EAAe;AAAC,aAAKxJ,UAAL,CAAgBL,GAAhB;AAAqB,eAAO,IAAP;AAAY;;AAAA,UAAIsG,kBAAkB,GAAC8C,oBAAoB,CAAC,KAAK3B,eAAN,EAAsBoC,UAAtB,CAA3C;;AAA6E,UAAG7S,SAAS,KAAGsP,kBAAf,EAAkC;AAAC,YAAG,MAAIA,kBAAkB,CAACkB,EAAnB,CAAsBV,KAAtB,CAA4BgB,KAAnC,EAAyC;AAACxB,UAAAA,kBAAkB,CAACkB,EAAnB,CAAsBxH,GAAtB,GAA0B6J,UAA1B;AAAqCvD,UAAAA,kBAAkB,CAACkB,EAAnB,CAAsBN,QAAtB,GAA+BlH,GAA/B;AAAmC,iBAAOsG,kBAAkB,CAAC,OAAD,CAAlB,EAAP;AAAqC,SAAvJ,MAA2J;AAAC,cAAI7B,EAAE,GAAC6B,kBAAkB,CAAC,OAAD,CAAlB,EAAP;AAAqC,eAAKjG,UAAL,CAAgBL,GAAhB;AAAqB,iBAAOyE,EAAP;AAAU;AAAC;;AAAA,eAASsF,iBAAT,GAA4B;AAAC,YAAG,KAAKC,cAAR,EAAuB;AAAC,iBAAOX,eAAe,CAAC,KAAK5B,eAAL,CAAqBwC,iBAAtB,EAAwC;AAAChD,YAAAA,OAAO,EAAC,KAAKiD,WAAd;AAA0BlK,YAAAA,GAAG,EAAC6J,UAA9B;AAAyC1C,YAAAA,YAAY,EAAC,IAAtD;AAA2DD,YAAAA,QAAQ,EAAClH;AAApE,WAAxC,CAAtB;AAAwI,SAAhK,MAAoK;AAAC,iBAAOqJ,eAAe,CAAC,KAAK5B,eAAL,CAAqBwC,iBAAtB,EAAwC;AAAChD,YAAAA,OAAO,EAAC,IAAT;AAAcjH,YAAAA,GAAG,EAACA;AAAlB,WAAxC,CAAtB;AAAsF;AAAC;;AAAA,UAAImK,UAAU,GAAC,KAAK1C,eAAL,CAAqB2C,aAArB,CAAmCP,UAAnC,CAAf;AAA8D,UAAIQ,uBAAuB,GAAChC,kBAAkB,CAAC8B,UAAD,CAA9C;;AAA2D,UAAG,CAACE,uBAAJ,EAA4B;AAAC,eAAON,iBAAiB,CAACO,IAAlB,CAAuB,IAAvB,CAAP;AAAoC;;AAAA,UAAIC,MAAJ;;AAAW,UAAG,KAAKC,OAAR,EAAgB;AAACD,QAAAA,MAAM,GAACF,uBAAuB,CAACI,gBAA/B;AAAgD,OAAjE,MAAqE;AAACF,QAAAA,MAAM,GAACF,uBAAuB,CAACK,WAA/B;AAA2C;;AAAA,UAAIC,EAAE,GAAC3C,eAAe,CAAC6B,UAAD,EAAY,KAAKpC,eAAjB,EAAiC8C,MAAM,CAAC9C,eAAxC,CAAtB;;AAA+E,UAAGkD,EAAE,KAAG,IAAR,EAAa;AAAC,eAAOZ,iBAAiB,CAACO,IAAlB,CAAuB,IAAvB,CAAP;AAAoC;;AAAA,UAAG,KAAKN,cAAR,EAAuB;AAAC,eAAOX,eAAe,CAACkB,MAAM,CAAC9C,eAAP,CAAuBwC,iBAAxB,EAA0C;AAAChD,UAAAA,OAAO,EAACsD,MAAT;AAAgBvK,UAAAA,GAAG,EAAC2K,EAApB;AAAuBxD,UAAAA,YAAY,EAAC,IAApC;AAAyCD,UAAAA,QAAQ,EAAClH;AAAlD,SAA1C,CAAtB;AAAwH,OAAhJ,MAAoJ;AAAC,eAAOqJ,eAAe,CAACkB,MAAM,CAAC9C,eAAP,CAAuBwC,iBAAxB,EAA0C;AAAChD,UAAAA,OAAO,EAACsD,MAAT;AAAgBvK,UAAAA,GAAG,EAAC2K;AAApB,SAA1C,CAAtB;AAAyF;AAAC;;AAAA,QAAIjB,eAAe,GAACnC,MAAM,IAAE;AAAC,UAAG,gBAAc,OAAOqD,oBAAxB,EAA6C;AAAClB,QAAAA,eAAe,GAACnC,MAAM,IAAEA,MAAxB;;AAA+B,eAAOA,MAAP;AAAc;;AAAAG,MAAAA,oBAAoB,GAAC,IAAIkD,oBAAJ,CAAyBzL,IAAI,IAAE;AAAC0I,QAAAA,kBAAkB,CAAC1I,IAAI,CAACqI,EAAN,CAAlB;AAA4B,OAA5D,CAArB;;AAAmFkC,MAAAA,eAAe,GAACnC,MAAM,IAAE;AAAC,YAAIC,EAAE,GAACD,MAAM,CAACC,EAAd;AAAiB,YAAIiC,WAAW,GAAC,CAAC,CAACjC,EAAE,CAACN,QAArB;;AAA8B,YAAGuC,WAAH,EAAe;AAAC,cAAItK,IAAI,GAAC;AAACqI,YAAAA,EAAE,EAACA;AAAJ,WAAT;AAAiBE,UAAAA,oBAAoB,CAACmD,QAArB,CAA8BtD,MAA9B,EAAqCpI,IAArC,EAA0CoI,MAA1C;AAAkD;;AAAA,eAAOA,MAAP;AAAc,OAAzK;;AAA0KI,MAAAA,eAAe,GAACJ,MAAM,IAAEG,oBAAoB,CAACoD,UAArB,CAAgCvD,MAAhC,CAAxB;;AAAgE,aAAOmC,eAAe,CAACnC,MAAD,CAAtB;AAA+B,KAApd;;AAAqd,QAAIwD,gBAAgB,GAAC,MAAI;AAACvT,MAAAA,MAAM,CAACC,MAAP,CAAcuT,WAAW,CAAC1B,SAA1B,EAAoC;AAAC,oBAAY2B,KAAZ,EAAkB;AAAC,cAAG,EAAE,gBAAgBD,WAAlB,CAAH,EAAkC;AAAC,mBAAO,KAAP;AAAa;;AAAA,cAAG,EAAEC,KAAK,YAAYD,WAAnB,CAAH,EAAmC;AAAC,mBAAO,KAAP;AAAa;;AAAA,cAAIE,SAAS,GAAC,KAAK1D,EAAL,CAAQP,OAAR,CAAgBQ,eAA9B;AAA8C,cAAI0D,IAAI,GAAC,KAAK3D,EAAL,CAAQxH,GAAjB;AAAqBiL,UAAAA,KAAK,CAACzD,EAAN,GAASyD,KAAK,CAACzD,EAAf;AAAkB,cAAI4D,UAAU,GAACH,KAAK,CAACzD,EAAN,CAASP,OAAT,CAAiBQ,eAAhC;AAAgD,cAAI4D,KAAK,GAACJ,KAAK,CAACzD,EAAN,CAASxH,GAAnB;;AAAuB,iBAAMkL,SAAS,CAAC/C,SAAhB,EAA0B;AAACgD,YAAAA,IAAI,GAACD,SAAS,CAAC/B,MAAV,CAAiBgC,IAAjB,CAAL;AAA4BD,YAAAA,SAAS,GAACA,SAAS,CAAC/C,SAApB;AAA8B;;AAAA,iBAAMiD,UAAU,CAACjD,SAAjB,EAA2B;AAACkD,YAAAA,KAAK,GAACD,UAAU,CAACjC,MAAX,CAAkBkC,KAAlB,CAAN;AAA+BD,YAAAA,UAAU,GAACA,UAAU,CAACjD,SAAtB;AAAgC;;AAAA,iBAAO+C,SAAS,KAAGE,UAAZ,IAAwBD,IAAI,KAAGE,KAAtC;AAA4C,SAA7e;;AAA8e,kBAAS;AAAC,cAAG,CAAC,KAAK7D,EAAL,CAAQxH,GAAZ,EAAgB;AAACoH,YAAAA,2BAA2B,CAAC,IAAD,CAA3B;AAAkC;;AAAA,cAAG,KAAKI,EAAL,CAAQR,uBAAX,EAAmC;AAAC,iBAAKQ,EAAL,CAAQV,KAAR,CAAcgB,KAAd,IAAqB,CAArB;AAAuB,mBAAO,IAAP;AAAY,WAAvE,MAA2E;AAAC,gBAAIwD,KAAK,GAAC5B,eAAe,CAAClS,MAAM,CAACmS,MAAP,CAAcnS,MAAM,CAAC+T,cAAP,CAAsB,IAAtB,CAAd,EAA0C;AAAC/D,cAAAA,EAAE,EAAC;AAACM,gBAAAA,KAAK,EAACjB,0BAA0B,CAAC,KAAKW,EAAN;AAAjC;AAAJ,aAA1C,CAAD,CAAzB;AAAuH8D,YAAAA,KAAK,CAAC9D,EAAN,CAASV,KAAT,CAAegB,KAAf,IAAsB,CAAtB;AAAwBwD,YAAAA,KAAK,CAAC9D,EAAN,CAAST,eAAT,GAAyB,KAAzB;AAA+B,mBAAOuE,KAAP;AAAa;AAAC,SAAnzB;;AAAozB,mBAAU;AAAC,cAAG,CAAC,KAAK9D,EAAL,CAAQxH,GAAZ,EAAgB;AAACoH,YAAAA,2BAA2B,CAAC,IAAD,CAA3B;AAAkC;;AAAA,cAAG,KAAKI,EAAL,CAAQT,eAAR,IAAyB,CAAC,KAAKS,EAAL,CAAQR,uBAArC,EAA6D;AAACb,YAAAA,iBAAiB,CAAC,uCAAD,CAAjB;AAA2D;;AAAAwB,UAAAA,eAAe,CAAC,IAAD,CAAf;AAAsBE,UAAAA,kBAAkB,CAAC,KAAKL,EAAN,CAAlB;;AAA4B,cAAG,CAAC,KAAKA,EAAL,CAAQR,uBAAZ,EAAoC;AAAC,iBAAKQ,EAAL,CAAQN,QAAR,GAAiBlQ,SAAjB;AAA2B,iBAAKwQ,EAAL,CAAQxH,GAAR,GAAYhJ,SAAZ;AAAsB;AAAC,SAApnC;;AAAqnC,sBAAa;AAAC,iBAAM,CAAC,KAAKwQ,EAAL,CAAQxH,GAAf;AAAmB,SAAtpC;;AAAupC,wBAAe;AAAC,cAAG,CAAC,KAAKwH,EAAL,CAAQxH,GAAZ,EAAgB;AAACoH,YAAAA,2BAA2B,CAAC,IAAD,CAA3B;AAAkC;;AAAA,cAAG,KAAKI,EAAL,CAAQT,eAAR,IAAyB,CAAC,KAAKS,EAAL,CAAQR,uBAArC,EAA6D;AAACb,YAAAA,iBAAiB,CAAC,uCAAD,CAAjB;AAA2D;;AAAAwC,UAAAA,aAAa,CAACxF,IAAd,CAAmB,IAAnB;;AAAyB,cAAGwF,aAAa,CAAC3M,MAAd,KAAuB,CAAvB,IAA0B6M,aAA7B,EAA2C;AAACA,YAAAA,aAAa,CAACD,mBAAD,CAAb;AAAmC;;AAAA,eAAKpB,EAAL,CAAQT,eAAR,GAAwB,IAAxB;AAA6B,iBAAO,IAAP;AAAY;;AAAp+C,OAApC;AAA2gD,KAAriD;;AAAsiD,aAASiE,WAAT,GAAsB,CAAE;;AAAA,QAAIQ,MAAM,GAAC,EAAX;AAAc,QAAIC,MAAM,GAAC,EAAX;;AAAc,QAAIC,qBAAqB,GAAClH,IAAI,IAAE;AAAC,UAAGxN,SAAS,KAAGwN,IAAf,EAAoB;AAAC,eAAM,UAAN;AAAiB;;AAAAA,MAAAA,IAAI,GAACA,IAAI,CAAC5L,OAAL,CAAa,gBAAb,EAA8B,GAA9B,CAAL;AAAwC,UAAI+S,CAAC,GAACnH,IAAI,CAACoH,UAAL,CAAgB,CAAhB,CAAN;;AAAyB,UAAGD,CAAC,IAAEH,MAAH,IAAWG,CAAC,IAAEF,MAAjB,EAAwB;AAAC,eAAO,IAAGjH,IAAK,EAAf;AAAiB;;AAAA,aAAOA,IAAP;AAAY,KAA9L;;AAA+L,aAASqH,mBAAT,CAA6BrH,IAA7B,EAAkCsH,IAAlC,EAAuC;AAACtH,MAAAA,IAAI,GAACkH,qBAAqB,CAAClH,IAAD,CAA1B;AAAiC,aAAM;AAAC,SAACA,IAAD,GAAO,YAAU;AAAC,iBAAOsH,IAAI,CAACC,KAAL,CAAW,IAAX,EAAgBC,SAAhB,CAAP;AAAkC;AAArD,QAAuDxH,IAAvD,CAAN;AAAmE;;AAAA,QAAIyH,mBAAmB,GAAC,CAACC,KAAD,EAAOC,UAAP,EAAkBC,SAAlB,KAA8B;AAAC,UAAGpV,SAAS,KAAGkV,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAjC,EAA+C;AAAC,YAAIC,QAAQ,GAACJ,KAAK,CAACC,UAAD,CAAlB;;AAA+BD,QAAAA,KAAK,CAACC,UAAD,CAAL,GAAkB,YAAU;AAAC,cAAG,CAACD,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAlB,CAAgCnJ,cAAhC,CAA+C8I,SAAS,CAAChQ,MAAzD,CAAJ,EAAqE;AAACmK,YAAAA,iBAAiB,CAAE,aAAYiG,SAAU,iDAAgDJ,SAAS,CAAChQ,MAAO,uBAAsBkQ,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAc,IAA/I,CAAjB;AAAqK;;AAAA,iBAAOH,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAlB,CAAgCL,SAAS,CAAChQ,MAA1C,EAAkD+P,KAAlD,CAAwD,IAAxD,EAA6DC,SAA7D,CAAP;AAA+E,SAAvV;;AAAwVE,QAAAA,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAlB,GAAgC,EAAhC;AAAmCH,QAAAA,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAlB,CAAgCC,QAAQ,CAACC,QAAzC,IAAmDD,QAAnD;AAA4D;AAAC,KAA9jB;;AAA+jB,QAAIE,kBAAkB,GAAC,CAAChI,IAAD,EAAMsD,KAAN,EAAY2E,YAAZ,KAA2B;AAAC,UAAG9V,MAAM,CAACuM,cAAP,CAAsBsB,IAAtB,CAAH,EAA+B;AAAC,YAAGxN,SAAS,KAAGyV,YAAZ,IAA0BzV,SAAS,KAAGL,MAAM,CAAC6N,IAAD,CAAN,CAAa6H,aAAzB,IAAwCrV,SAAS,KAAGL,MAAM,CAAC6N,IAAD,CAAN,CAAa6H,aAAb,CAA2BI,YAA3B,CAAjF,EAA0H;AAACtG,UAAAA,iBAAiB,CAAE,gCAA+B3B,IAAK,SAAtC,CAAjB;AAAiE;;AAAAyH,QAAAA,mBAAmB,CAACtV,MAAD,EAAQ6N,IAAR,EAAaA,IAAb,CAAnB;;AAAsC,YAAG7N,MAAM,CAACuM,cAAP,CAAsBuJ,YAAtB,CAAH,EAAuC;AAACtG,UAAAA,iBAAiB,CAAE,uFAAsFsG,YAAa,IAArG,CAAjB;AAA2H;;AAAA9V,QAAAA,MAAM,CAAC6N,IAAD,CAAN,CAAa6H,aAAb,CAA2BI,YAA3B,IAAyC3E,KAAzC;AAA+C,OAApd,MAAwd;AAACnR,QAAAA,MAAM,CAAC6N,IAAD,CAAN,GAAasD,KAAb;;AAAmB,YAAG9Q,SAAS,KAAGyV,YAAf,EAA4B;AAAC9V,UAAAA,MAAM,CAAC6N,IAAD,CAAN,CAAaiI,YAAb,GAA0BA,YAA1B;AAAuC;AAAC;AAAC,KAArmB;;AAAsmB,aAASC,eAAT,CAAyBlI,IAAzB,EAA8BmI,WAA9B,EAA0C1C,iBAA1C,EAA4DjG,aAA5D,EAA0EmE,SAA1E,EAAoFiC,aAApF,EAAkGjB,MAAlG,EAAyGf,QAAzG,EAAkH;AAAC,WAAK5D,IAAL,GAAUA,IAAV;AAAe,WAAKmI,WAAL,GAAiBA,WAAjB;AAA6B,WAAK1C,iBAAL,GAAuBA,iBAAvB;AAAyC,WAAKjG,aAAL,GAAmBA,aAAnB;AAAiC,WAAKmE,SAAL,GAAeA,SAAf;AAAyB,WAAKiC,aAAL,GAAmBA,aAAnB;AAAiC,WAAKjB,MAAL,GAAYA,MAAZ;AAAmB,WAAKf,QAAL,GAAcA,QAAd;AAAuB,WAAKwE,oBAAL,GAA0B,EAA1B;AAA6B;;AAAA,QAAIC,aAAa,GAAC,CAAC7M,GAAD,EAAKiI,QAAL,EAAcC,YAAd,KAA6B;AAAC,aAAMD,QAAQ,KAAGC,YAAjB,EAA8B;AAAC,YAAG,CAACD,QAAQ,CAACkB,MAAb,EAAoB;AAAChD,UAAAA,iBAAiB,CAAE,gCAA+B+B,YAAY,CAAC1D,IAAK,wBAAuByD,QAAQ,CAACzD,IAAK,EAAxF,CAAjB;AAA4G;;AAAAxE,QAAAA,GAAG,GAACiI,QAAQ,CAACkB,MAAT,CAAgBnJ,GAAhB,CAAJ;AAAyBiI,QAAAA,QAAQ,GAACA,QAAQ,CAACE,SAAlB;AAA4B;;AAAA,aAAOnI,GAAP;AAAW,KAAhR;;AAAiR,aAAS8M,mCAAT,CAA6CrL,WAA7C,EAAyD8F,MAAzD,EAAgE;AAAC,UAAGA,MAAM,KAAG,IAAZ,EAAiB;AAAC,YAAG,KAAKwF,WAAR,EAAoB;AAAC5G,UAAAA,iBAAiB,CAAE,uBAAsB,KAAK3B,IAAK,EAAlC,CAAjB;AAAsD;;AAAA,eAAO,CAAP;AAAS;;AAAA,UAAG,CAAC+C,MAAM,CAACC,EAAX,EAAc;AAACrB,QAAAA,iBAAiB,CAAE,gBAAe6G,UAAU,CAACzF,MAAD,CAAS,UAAS,KAAK/C,IAAK,EAAvD,CAAjB;AAA2E;;AAAA,UAAG,CAAC+C,MAAM,CAACC,EAAP,CAAUxH,GAAd,EAAkB;AAACmG,QAAAA,iBAAiB,CAAE,mDAAkD,KAAK3B,IAAK,EAA9D,CAAjB;AAAkF;;AAAA,UAAIyI,WAAW,GAAC1F,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBQ,eAAlC;AAAkD,UAAIzH,GAAG,GAAC6M,aAAa,CAACtF,MAAM,CAACC,EAAP,CAAUxH,GAAX,EAAeiN,WAAf,EAA2B,KAAKxF,eAAhC,CAArB;AAAsE,aAAOzH,GAAP;AAAW;;AAAA,aAASkN,wBAAT,CAAkCzL,WAAlC,EAA8C8F,MAA9C,EAAqD;AAAC,UAAIvH,GAAJ;;AAAQ,UAAGuH,MAAM,KAAG,IAAZ,EAAiB;AAAC,YAAG,KAAKwF,WAAR,EAAoB;AAAC5G,UAAAA,iBAAiB,CAAE,uBAAsB,KAAK3B,IAAK,EAAlC,CAAjB;AAAsD;;AAAA,YAAG,KAAKwF,cAAR,EAAuB;AAAChK,UAAAA,GAAG,GAAC,KAAK+D,cAAL,EAAJ;;AAA0B,cAAGtC,WAAW,KAAG,IAAjB,EAAsB;AAACA,YAAAA,WAAW,CAAC0B,IAAZ,CAAiB,KAAKa,aAAtB,EAAoChE,GAApC;AAAyC;;AAAA,iBAAOA,GAAP;AAAW,SAA7H,MAAiI;AAAC,iBAAO,CAAP;AAAS;AAAC;;AAAA,UAAG,CAACuH,MAAM,CAACC,EAAX,EAAc;AAACrB,QAAAA,iBAAiB,CAAE,gBAAe6G,UAAU,CAACzF,MAAD,CAAS,UAAS,KAAK/C,IAAK,EAAvD,CAAjB;AAA2E;;AAAA,UAAG,CAAC+C,MAAM,CAACC,EAAP,CAAUxH,GAAd,EAAkB;AAACmG,QAAAA,iBAAiB,CAAE,mDAAkD,KAAK3B,IAAK,EAA9D,CAAjB;AAAkF;;AAAA,UAAG,CAAC,KAAKgG,OAAN,IAAejD,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBuD,OAApC,EAA4C;AAACrE,QAAAA,iBAAiB,CAAE,mCAAkCoB,MAAM,CAACC,EAAP,CAAUL,YAAV,GAAuBI,MAAM,CAACC,EAAP,CAAUL,YAAV,CAAuB3C,IAA9C,GAAmD+C,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBzC,IAAK,sBAAqB,KAAKA,IAAK,EAA7I,CAAjB;AAAiK;;AAAA,UAAIyI,WAAW,GAAC1F,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBQ,eAAlC;AAAkDzH,MAAAA,GAAG,GAAC6M,aAAa,CAACtF,MAAM,CAACC,EAAP,CAAUxH,GAAX,EAAeiN,WAAf,EAA2B,KAAKxF,eAAhC,CAAjB;;AAAkE,UAAG,KAAKuC,cAAR,EAAuB;AAAC,YAAGhT,SAAS,KAAGuQ,MAAM,CAACC,EAAP,CAAUN,QAAzB,EAAkC;AAACf,UAAAA,iBAAiB,CAAC,iDAAD,CAAjB;AAAqE;;AAAA,gBAAO,KAAKgH,aAAZ;AAA2B,eAAK,CAAL;AAAO,gBAAG5F,MAAM,CAACC,EAAP,CAAUL,YAAV,KAAyB,IAA5B,EAAiC;AAACnH,cAAAA,GAAG,GAACuH,MAAM,CAACC,EAAP,CAAUN,QAAd;AAAuB,aAAzD,MAA6D;AAACf,cAAAA,iBAAiB,CAAE,mCAAkCoB,MAAM,CAACC,EAAP,CAAUL,YAAV,GAAuBI,MAAM,CAACC,EAAP,CAAUL,YAAV,CAAuB3C,IAA9C,GAAmD+C,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBzC,IAAK,sBAAqB,KAAKA,IAAK,EAA7I,CAAjB;AAAiK;;AAAA;;AAAM,eAAK,CAAL;AAAOxE,YAAAA,GAAG,GAACuH,MAAM,CAACC,EAAP,CAAUN,QAAd;AAAuB;;AAAM,eAAK,CAAL;AAAO,gBAAGK,MAAM,CAACC,EAAP,CAAUL,YAAV,KAAyB,IAA5B,EAAiC;AAACnH,cAAAA,GAAG,GAACuH,MAAM,CAACC,EAAP,CAAUN,QAAd;AAAuB,aAAzD,MAA6D;AAAC,kBAAIkG,YAAY,GAAC7F,MAAM,CAAC,OAAD,CAAN,EAAjB;AAAmCvH,cAAAA,GAAG,GAAC,KAAKqN,QAAL,CAAcrN,GAAd,EAAkBsN,KAAK,CAACC,QAAN,CAAe,MAAIH,YAAY,CAAC,QAAD,CAAZ,EAAnB,CAAlB,CAAJ;;AAAoE,kBAAG3L,WAAW,KAAG,IAAjB,EAAsB;AAACA,gBAAAA,WAAW,CAAC0B,IAAZ,CAAiB,KAAKa,aAAtB,EAAoChE,GAApC;AAAyC;AAAC;;AAAA;;AAAM;AAAQmG,YAAAA,iBAAiB,CAAC,6BAAD,CAAjB;AAAtiB;AAAwlB;;AAAA,aAAOnG,GAAP;AAAW;;AAAA,aAASwN,sCAAT,CAAgD/L,WAAhD,EAA4D8F,MAA5D,EAAmE;AAAC,UAAGA,MAAM,KAAG,IAAZ,EAAiB;AAAC,YAAG,KAAKwF,WAAR,EAAoB;AAAC5G,UAAAA,iBAAiB,CAAE,uBAAsB,KAAK3B,IAAK,EAAlC,CAAjB;AAAsD;;AAAA,eAAO,CAAP;AAAS;;AAAA,UAAG,CAAC+C,MAAM,CAACC,EAAX,EAAc;AAACrB,QAAAA,iBAAiB,CAAE,gBAAe6G,UAAU,CAACzF,MAAD,CAAS,UAAS,KAAK/C,IAAK,EAAvD,CAAjB;AAA2E;;AAAA,UAAG,CAAC+C,MAAM,CAACC,EAAP,CAAUxH,GAAd,EAAkB;AAACmG,QAAAA,iBAAiB,CAAE,mDAAkD,KAAK3B,IAAK,EAA9D,CAAjB;AAAkF;;AAAA,UAAG+C,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBuD,OAArB,EAA6B;AAACrE,QAAAA,iBAAiB,CAAE,mCAAkCoB,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBzC,IAAK,sBAAqB,KAAKA,IAAK,EAA1F,CAAjB;AAA8G;;AAAA,UAAIyI,WAAW,GAAC1F,MAAM,CAACC,EAAP,CAAUP,OAAV,CAAkBQ,eAAlC;AAAkD,UAAIzH,GAAG,GAAC6M,aAAa,CAACtF,MAAM,CAACC,EAAP,CAAUxH,GAAX,EAAeiN,WAAf,EAA2B,KAAKxF,eAAhC,CAArB;AAAsE,aAAOzH,GAAP;AAAW;;AAAA,aAASyN,WAAT,CAAqB5L,OAArB,EAA6B;AAAC,aAAO,KAAK,cAAL,EAAqB/G,OAAO,CAAC+G,OAAO,IAAE,CAAV,CAA5B,CAAP;AAAiD;;AAAA,QAAI6L,sBAAsB,GAAC,MAAI;AAAClW,MAAAA,MAAM,CAACC,MAAP,CAAckW,iBAAiB,CAACrE,SAAhC,EAA0C;AAACQ,QAAAA,UAAU,CAAC9J,GAAD,EAAK;AAAC,cAAG,KAAK4N,aAAR,EAAsB;AAAC5N,YAAAA,GAAG,GAAC,KAAK4N,aAAL,CAAmB5N,GAAnB,CAAJ;AAA4B;;AAAA,iBAAOA,GAAP;AAAW,SAA/E;;AAAgFK,QAAAA,UAAU,CAACL,GAAD,EAAK;AAAC,cAAG,KAAKgE,aAAR,EAAsB;AAAC,iBAAKA,aAAL,CAAmBhE,GAAnB;AAAwB;AAAC,SAAhJ;;AAAiJ,0BAAiB2E,mBAAlK;AAAsL,gCAAuB8I,WAA7M;;AAAyN,uBAAelG,MAAf,EAAsB;AAAC,cAAGA,MAAM,KAAG,IAAZ,EAAiB;AAACA,YAAAA,MAAM,CAAC,QAAD,CAAN;AAAmB;AAAC,SAAtR;;AAAuR,wBAAeqC;AAAtS,OAA1C;AAAiX,KAAjZ;;AAAkZ,aAAS+D,iBAAT,CAA2BnJ,IAA3B,EAAgCiD,eAAhC,EAAgDsF,WAAhD,EAA4DvC,OAA5D,EAAoER,cAApE,EAAmFE,WAAnF,EAA+FiD,aAA/F,EAA6GS,aAA7G,EAA2H7J,cAA3H,EAA0IsJ,QAA1I,EAAmJrJ,aAAnJ,EAAiK;AAAC,WAAKQ,IAAL,GAAUA,IAAV;AAAe,WAAKiD,eAAL,GAAqBA,eAArB;AAAqC,WAAKsF,WAAL,GAAiBA,WAAjB;AAA6B,WAAKvC,OAAL,GAAaA,OAAb;AAAqB,WAAKR,cAAL,GAAoBA,cAApB;AAAmC,WAAKE,WAAL,GAAiBA,WAAjB;AAA6B,WAAKiD,aAAL,GAAmBA,aAAnB;AAAiC,WAAKS,aAAL,GAAmBA,aAAnB;AAAiC,WAAK7J,cAAL,GAAoBA,cAApB;AAAmC,WAAKsJ,QAAL,GAAcA,QAAd;AAAuB,WAAKrJ,aAAL,GAAmBA,aAAnB;;AAAiC,UAAG,CAACgG,cAAD,IAAiBvC,eAAe,CAACU,SAAhB,KAA4BnR,SAAhD,EAA0D;AAAC,YAAGwT,OAAH,EAAW;AAAC,eAAK,YAAL,IAAmBsC,mCAAnB;AAAuD,eAAKlI,kBAAL,GAAwB,IAAxB;AAA6B,SAAhG,MAAoG;AAAC,eAAK,YAAL,IAAmB4I,sCAAnB;AAA0D,eAAK5I,kBAAL,GAAwB,IAAxB;AAA6B;AAAC,OAAxP,MAA4P;AAAC,aAAK,YAAL,IAAmBsI,wBAAnB;AAA4C;AAAC;;AAAA,QAAIW,mBAAmB,GAAC,CAACrJ,IAAD,EAAMsD,KAAN,EAAY2E,YAAZ,KAA2B;AAAC,UAAG,CAAC9V,MAAM,CAACuM,cAAP,CAAsBsB,IAAtB,CAAJ,EAAgC;AAACtC,QAAAA,kBAAkB,CAAC,qCAAD,CAAlB;AAA0D;;AAAA,UAAGlL,SAAS,KAAGL,MAAM,CAAC6N,IAAD,CAAN,CAAa6H,aAAzB,IAAwCrV,SAAS,KAAGyV,YAAvD,EAAoE;AAAC9V,QAAAA,MAAM,CAAC6N,IAAD,CAAN,CAAa6H,aAAb,CAA2BI,YAA3B,IAAyC3E,KAAzC;AAA+C,OAApH,MAAwH;AAACnR,QAAAA,MAAM,CAAC6N,IAAD,CAAN,GAAasD,KAAb;AAAmBnR,QAAAA,MAAM,CAAC6N,IAAD,CAAN,CAAa+H,QAAb,GAAsBE,YAAtB;AAAmC;AAAC,KAA/T;;AAAgU,QAAIqB,aAAa,GAAC,CAACC,GAAD,EAAK/N,GAAL,EAASgO,IAAT,KAAgB;AAAC,UAAIrC,CAAC,GAAChV,MAAM,CAAC,aAAWoX,GAAZ,CAAZ;AAA6B,aAAOC,IAAI,IAAEA,IAAI,CAAChS,MAAX,GAAkB2P,CAAC,CAACI,KAAF,CAAQ,IAAR,EAAa,CAAC/L,GAAD,EAAM6D,MAAN,CAAamK,IAAb,CAAb,CAAlB,GAAmDrC,CAAC,CAACrB,IAAF,CAAO,IAAP,EAAYtK,GAAZ,CAA1D;AAA2E,KAA3I;;AAA4I,QAAIiO,eAAe,GAAC,EAApB;AAAuB,QAAIxO,SAAJ;;AAAc,QAAIyO,iBAAiB,GAACC,OAAO,IAAE;AAAC,UAAIC,IAAI,GAACH,eAAe,CAACE,OAAD,CAAxB;;AAAkC,UAAG,CAACC,IAAJ,EAAS;AAAC,YAAGD,OAAO,IAAEF,eAAe,CAACjS,MAA5B,EAAmCiS,eAAe,CAACjS,MAAhB,GAAuBmS,OAAO,GAAC,CAA/B;AAAiCF,QAAAA,eAAe,CAACE,OAAD,CAAf,GAAyBC,IAAI,GAAC3O,SAAS,CAAC4O,GAAV,CAAcF,OAAd,CAA9B;AAAqD;;AAAA,aAAOC,IAAP;AAAY,KAAjN;;AAAkN,QAAIE,OAAO,GAAC,CAACP,GAAD,EAAK/N,GAAL,EAASgO,IAAT,KAAgB;AAAC,UAAGD,GAAG,CAACQ,QAAJ,CAAa,GAAb,CAAH,EAAqB;AAAC,eAAOT,aAAa,CAACC,GAAD,EAAK/N,GAAL,EAASgO,IAAT,CAApB;AAAmC;;AAAA,UAAIQ,GAAG,GAACN,iBAAiB,CAAClO,GAAD,CAAjB,CAAuB+L,KAAvB,CAA6B,IAA7B,EAAkCiC,IAAlC,CAAR;AAAgD,aAAOQ,GAAP;AAAW,KAAjJ;;AAAkJ,QAAIC,YAAY,GAAC,CAACV,GAAD,EAAK/N,GAAL,KAAW;AAAC,UAAI0O,QAAQ,GAAC,EAAb;AAAgB,aAAO,YAAU;AAACA,QAAAA,QAAQ,CAAC1S,MAAT,GAAgB,CAAhB;AAAkBxE,QAAAA,MAAM,CAACC,MAAP,CAAciX,QAAd,EAAuB1C,SAAvB;AAAkC,eAAOsC,OAAO,CAACP,GAAD,EAAK/N,GAAL,EAAS0O,QAAT,CAAd;AAAiC,OAAvG;AAAwG,KAArJ;;AAAsJ,QAAIC,uBAAuB,GAAC,CAACC,SAAD,EAAWC,WAAX,KAAyB;AAACD,MAAAA,SAAS,GAAC7I,gBAAgB,CAAC6I,SAAD,CAA1B;;AAAsC,eAASE,aAAT,GAAwB;AAAC,YAAGF,SAAS,CAACL,QAAV,CAAmB,GAAnB,CAAH,EAA2B;AAAC,iBAAOE,YAAY,CAACG,SAAD,EAAWC,WAAX,CAAnB;AAA2C;;AAAA,eAAOX,iBAAiB,CAACW,WAAD,CAAxB;AAAsC;;AAAA,UAAIE,EAAE,GAACD,aAAa,EAApB;;AAAuB,UAAG,OAAOC,EAAP,IAAW,UAAd,EAAyB;AAAC5I,QAAAA,iBAAiB,CAAE,2CAA0CyI,SAAU,KAAIC,WAAY,EAAtE,CAAjB;AAA0F;;AAAA,aAAOE,EAAP;AAAU,KAAvX;;AAAwX,QAAIC,WAAW,GAAC,CAACC,aAAD,EAAeC,SAAf,KAA2B;AAAC,UAAIC,UAAU,GAACtD,mBAAmB,CAACqD,SAAD,EAAW,UAAS/M,OAAT,EAAiB;AAAC,aAAKqC,IAAL,GAAU0K,SAAV;AAAoB,aAAK/M,OAAL,GAAaA,OAAb;AAAqB,YAAIiN,KAAK,GAAC,IAAIC,KAAJ,CAAUlN,OAAV,EAAmBiN,KAA7B;;AAAmC,YAAGA,KAAK,KAAGpY,SAAX,EAAqB;AAAC,eAAKoY,KAAL,GAAW,KAAKE,QAAL,KAAgB,IAAhB,GAAqBF,KAAK,CAACxW,OAAN,CAAc,oBAAd,EAAmC,EAAnC,CAAhC;AAAuE;AAAC,OAAvM,CAAlC;AAA2OuW,MAAAA,UAAU,CAAC7F,SAAX,GAAqB9R,MAAM,CAACmS,MAAP,CAAcsF,aAAa,CAAC3F,SAA5B,CAArB;AAA4D6F,MAAAA,UAAU,CAAC7F,SAAX,CAAqBqD,WAArB,GAAiCwC,UAAjC;;AAA4CA,MAAAA,UAAU,CAAC7F,SAAX,CAAqBgG,QAArB,GAA8B,YAAU;AAAC,YAAG,KAAKnN,OAAL,KAAenL,SAAlB,EAA4B;AAAC,iBAAO,KAAKwN,IAAZ;AAAiB,SAA9C,MAAkD;AAAC,iBAAO,GAAE,KAAKA,IAAK,KAAI,KAAKrC,OAAQ,EAApC;AAAsC;AAAC,OAAnI;;AAAoI,aAAOgN,UAAP;AAAkB,KAArhB;;AAAshB,QAAII,gBAAJ;;AAAqB,QAAIC,WAAW,GAACtP,IAAI,IAAE;AAAC,UAAIF,GAAG,GAACyP,cAAc,CAACvP,IAAD,CAAtB;;AAA6B,UAAIuE,EAAE,GAACsB,gBAAgB,CAAC/F,GAAD,CAAvB;;AAA6B0P,MAAAA,KAAK,CAAC1P,GAAD,CAAL;;AAAW,aAAOyE,EAAP;AAAU,KAAtG;;AAAuG,QAAIkL,qBAAqB,GAAC,CAACxN,OAAD,EAASyN,KAAT,KAAiB;AAAC,UAAIC,YAAY,GAAC,EAAjB;AAAoB,UAAIC,IAAI,GAAC,EAAT;;AAAY,eAASC,KAAT,CAAe7P,IAAf,EAAoB;AAAC,YAAG4P,IAAI,CAAC5P,IAAD,CAAP,EAAc;AAAC;AAAO;;AAAA,YAAG6B,eAAe,CAAC7B,IAAD,CAAlB,EAAyB;AAAC;AAAO;;AAAA,YAAG8B,gBAAgB,CAAC9B,IAAD,CAAnB,EAA0B;AAAC8B,UAAAA,gBAAgB,CAAC9B,IAAD,CAAhB,CAAuBsC,OAAvB,CAA+BuN,KAA/B;AAAsC;AAAO;;AAAAF,QAAAA,YAAY,CAAC1M,IAAb,CAAkBjD,IAAlB;AAAwB4P,QAAAA,IAAI,CAAC5P,IAAD,CAAJ,GAAW,IAAX;AAAgB;;AAAA0P,MAAAA,KAAK,CAACpN,OAAN,CAAcuN,KAAd;AAAqB,YAAM,IAAIR,gBAAJ,CAAsB,GAAEpN,OAAQ,IAAX,GAAe0N,YAAY,CAACnM,GAAb,CAAiB8L,WAAjB,EAA8BQ,IAA9B,CAAmC,CAAC,IAAD,CAAnC,CAApC,CAAN;AAAsF,KAAnX;;AAAoX,QAAIC,uBAAuB,GAAC,CAAC5J,OAAD,EAAS6J,cAAT,EAAwBC,mBAAxB,EAA4CC,gBAA5C,EAA6DC,sBAA7D,EAAoFjG,aAApF,EAAkGkG,eAAlG,EAAkHnH,MAAlH,EAAyHoH,iBAAzH,EAA2InI,QAA3I,EAAoJ5D,IAApJ,EAAyJgM,mBAAzJ,EAA6KxM,aAA7K,KAA6L;AAACQ,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B4F,MAAAA,aAAa,GAACuE,uBAAuB,CAAC0B,sBAAD,EAAwBjG,aAAxB,CAArC;;AAA4E,UAAGjB,MAAH,EAAU;AAACA,QAAAA,MAAM,GAACwF,uBAAuB,CAAC2B,eAAD,EAAiBnH,MAAjB,CAA9B;AAAuD;;AAAA,UAAGf,QAAH,EAAY;AAACA,QAAAA,QAAQ,GAACuG,uBAAuB,CAAC4B,iBAAD,EAAmBnI,QAAnB,CAAhC;AAA6D;;AAAApE,MAAAA,aAAa,GAAC2K,uBAAuB,CAAC6B,mBAAD,EAAqBxM,aAArB,CAArC;AAAyE,UAAIyM,iBAAiB,GAAC/E,qBAAqB,CAAClH,IAAD,CAA3C;AAAkDgI,MAAAA,kBAAkB,CAACiE,iBAAD,EAAmB,YAAU;AAACd,QAAAA,qBAAqB,CAAE,oBAAmBnL,IAAK,uBAA1B,EAAiD,CAAC4L,gBAAD,CAAjD,CAArB;AAA0F,OAAxH,CAAlB;AAA4IhO,MAAAA,6BAA6B,CAAC,CAACiE,OAAD,EAAS6J,cAAT,EAAwBC,mBAAxB,CAAD,EAA8CC,gBAAgB,GAAC,CAACA,gBAAD,CAAD,GAAoB,EAAlF,EAAqF,UAASM,IAAT,EAAc;AAACA,QAAAA,IAAI,GAACA,IAAI,CAAC,CAAD,CAAT;AAAa,YAAIvI,SAAJ;AAAc,YAAIwI,aAAJ;;AAAkB,YAAGP,gBAAH,EAAoB;AAACjI,UAAAA,SAAS,GAACuI,IAAI,CAACjJ,eAAf;AAA+BkJ,UAAAA,aAAa,GAACxI,SAAS,CAAC8B,iBAAxB;AAA0C,SAA9F,MAAkG;AAAC0G,UAAAA,aAAa,GAAC3F,WAAW,CAAC1B,SAA1B;AAAoC;;AAAA,YAAIqD,WAAW,GAACd,mBAAmB,CAAC4E,iBAAD,EAAmB,YAAU;AAAC,cAAGjZ,MAAM,CAAC+T,cAAP,CAAsB,IAAtB,MAA8BtB,iBAAjC,EAAmD;AAAC,kBAAM,IAAI/D,YAAJ,CAAiB,4BAA0B1B,IAA3C,CAAN;AAAuD;;AAAA,cAAGxN,SAAS,KAAGyQ,eAAe,CAACmJ,gBAA/B,EAAgD;AAAC,kBAAM,IAAI1K,YAAJ,CAAiB1B,IAAI,GAAC,gCAAtB,CAAN;AAA8D;;AAAA,cAAIsH,IAAI,GAACrE,eAAe,CAACmJ,gBAAhB,CAAiC5E,SAAS,CAAChQ,MAA3C,CAAT;;AAA4D,cAAGhF,SAAS,KAAG8U,IAAf,EAAoB;AAAC,kBAAM,IAAI5F,YAAJ,CAAkB,2BAA0B1B,IAAK,uCAAsCwH,SAAS,CAAChQ,MAAO,iBAAgBxE,MAAM,CAAC+Q,IAAP,CAAYd,eAAe,CAACmJ,gBAA5B,EAA8CtB,QAA9C,EAAyD,uBAAjL,CAAN;AAA+M;;AAAA,iBAAOxD,IAAI,CAACC,KAAL,CAAW,IAAX,EAAgBC,SAAhB,CAAP;AAAkC,SAA1jB,CAAnC;AAA+lB,YAAI/B,iBAAiB,GAACzS,MAAM,CAACmS,MAAP,CAAcgH,aAAd,EAA4B;AAAChE,UAAAA,WAAW,EAAC;AAAC7E,YAAAA,KAAK,EAAC6E;AAAP;AAAb,SAA5B,CAAtB;AAAqFA,QAAAA,WAAW,CAACrD,SAAZ,GAAsBW,iBAAtB;AAAwC,YAAIxC,eAAe,GAAC,IAAIiF,eAAJ,CAAoBlI,IAApB,EAAyBmI,WAAzB,EAAqC1C,iBAArC,EAAuDjG,aAAvD,EAAqEmE,SAArE,EAA+EiC,aAA/E,EAA6FjB,MAA7F,EAAoGf,QAApG,CAApB;;AAAkI,YAAGX,eAAe,CAACU,SAAnB,EAA6B;AAAC,cAAGV,eAAe,CAACU,SAAhB,CAA0B0I,gBAA1B,KAA6C7Z,SAAhD,EAA0D;AAACyQ,YAAAA,eAAe,CAACU,SAAhB,CAA0B0I,gBAA1B,GAA2C,EAA3C;AAA8C;;AAAApJ,UAAAA,eAAe,CAACU,SAAhB,CAA0B0I,gBAA1B,CAA2C1N,IAA3C,CAAgDsE,eAAhD;AAAiE;;AAAA,YAAIqJ,kBAAkB,GAAC,IAAInD,iBAAJ,CAAsBnJ,IAAtB,EAA2BiD,eAA3B,EAA2C,IAA3C,EAAgD,KAAhD,EAAsD,KAAtD,CAAvB;AAAoF,YAAIsJ,gBAAgB,GAAC,IAAIpD,iBAAJ,CAAsBnJ,IAAI,GAAC,GAA3B,EAA+BiD,eAA/B,EAA+C,KAA/C,EAAqD,KAArD,EAA2D,KAA3D,CAArB;AAAuF,YAAIuJ,qBAAqB,GAAC,IAAIrD,iBAAJ,CAAsBnJ,IAAI,GAAC,SAA3B,EAAqCiD,eAArC,EAAqD,KAArD,EAA2D,IAA3D,EAAgE,KAAhE,CAA1B;AAAiGY,QAAAA,kBAAkB,CAAChC,OAAD,CAAlB,GAA4B;AAACqE,UAAAA,WAAW,EAACqG,gBAAb;AAA8BtG,UAAAA,gBAAgB,EAACuG;AAA/C,SAA5B;AAAkGnD,QAAAA,mBAAmB,CAAC4C,iBAAD,EAAmB9D,WAAnB,CAAnB;AAAmD,eAAM,CAACmE,kBAAD,EAAoBC,gBAApB,EAAqCC,qBAArC,CAAN;AAAkE,OAAjyD,CAA7B;AAAg0D,KAArhF;;AAAshF,QAAIC,mBAAmB,GAAC,CAACnK,KAAD,EAAOoK,YAAP,KAAsB;AAAC,UAAIC,KAAK,GAAC,EAAV;;AAAa,WAAI,IAAIvO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACkE,KAAd,EAAoBlE,CAAC,EAArB,EAAwB;AAACuO,QAAAA,KAAK,CAAChO,IAAN,CAAWrI,OAAO,CAACoW,YAAY,GAACtO,CAAC,GAAC,CAAf,IAAkB,CAAnB,CAAlB;AAAyC;;AAAA,aAAOuO,KAAP;AAAa,KAA3I;;AAA4I,aAASC,OAAT,CAAiBzE,WAAjB,EAA6B0E,YAA7B,EAA0C;AAAC,UAAG,EAAE1E,WAAW,YAAY2E,QAAzB,CAAH,EAAsC;AAAC,cAAM,IAAI5M,SAAJ,CAAe,qCAAoC,OAAOiI,WAAY,0BAAtE,CAAN;AAAuG;;AAAA,UAAI4E,KAAK,GAAC1F,mBAAmB,CAACc,WAAW,CAACnI,IAAZ,IAAkB,qBAAnB,EAAyC,YAAU,CAAE,CAArD,CAA7B;AAAoF+M,MAAAA,KAAK,CAACjI,SAAN,GAAgBqD,WAAW,CAACrD,SAA5B;AAAsC,UAAIjC,GAAG,GAAC,IAAIkK,KAAJ,EAAR;AAAkB,UAAIC,CAAC,GAAC7E,WAAW,CAACZ,KAAZ,CAAkB1E,GAAlB,EAAsBgK,YAAtB,CAAN;AAA0C,aAAOG,CAAC,YAAYha,MAAb,GAAoBga,CAApB,GAAsBnK,GAA7B;AAAiC;;AAAA,aAASoK,oBAAT,CAA8BrF,SAA9B,EAAwCsF,QAAxC,EAAiDC,SAAjD,EAA2DC,cAA3D,EAA0EC,aAA1E,EAAwFC,OAAxF,EAAgG;AAAC,UAAIvF,QAAQ,GAACmF,QAAQ,CAAC1V,MAAtB;;AAA6B,UAAGuQ,QAAQ,GAAC,CAAZ,EAAc;AAACpG,QAAAA,iBAAiB,CAAC,gFAAD,CAAjB;AAAoG;;AAAA,UAAI4L,iBAAiB,GAACL,QAAQ,CAAC,CAAD,CAAR,KAAc,IAAd,IAAoBC,SAAS,KAAG,IAAtD;AAA2D,UAAIK,oBAAoB,GAAC,KAAzB;;AAA+B,WAAI,IAAIpP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC8O,QAAQ,CAAC1V,MAAvB,EAA8B,EAAE4G,CAAhC,EAAkC;AAAC,YAAG8O,QAAQ,CAAC9O,CAAD,CAAR,KAAc,IAAd,IAAoB8O,QAAQ,CAAC9O,CAAD,CAAR,CAAYgC,kBAAZ,KAAiC5N,SAAxD,EAAkE;AAACgb,UAAAA,oBAAoB,GAAC,IAArB;AAA0B;AAAM;AAAC;;AAAA,UAAIC,OAAO,GAACP,QAAQ,CAAC,CAAD,CAAR,CAAYlN,IAAZ,KAAmB,MAA/B;AAAsC,UAAI0N,QAAQ,GAAC,EAAb;AAAgB,UAAIC,aAAa,GAAC,EAAlB;;AAAqB,WAAI,IAAIvP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC2J,QAAQ,GAAC,CAAvB,EAAyB,EAAE3J,CAA3B,EAA6B;AAACsP,QAAAA,QAAQ,IAAE,CAACtP,CAAC,KAAG,CAAJ,GAAM,IAAN,GAAW,EAAZ,IAAgB,KAAhB,GAAsBA,CAAhC;AAAkCuP,QAAAA,aAAa,IAAE,CAACvP,CAAC,KAAG,CAAJ,GAAM,IAAN,GAAW,EAAZ,IAAgB,KAAhB,GAAsBA,CAAtB,GAAwB,OAAvC;AAA+C;;AAAA,UAAIwP,aAAa,GAAE,6BAA4B1G,qBAAqB,CAACU,SAAD,CAAY,IAAG8F,QAAS,yCAAwC3F,QAAQ,GAAC,CAAE,8CAA6CH,SAAU,6DAA4DG,QAAQ,GAAC,CAAE,gBAA7Q;;AAA6R,UAAGyF,oBAAH,EAAwB;AAACI,QAAAA,aAAa,IAAE,yBAAf;AAAyC;;AAAA,UAAIC,SAAS,GAACL,oBAAoB,GAAC,aAAD,GAAe,MAAjD;AAAwD,UAAIM,KAAK,GAAC,CAAC,mBAAD,EAAqB,SAArB,EAA+B,IAA/B,EAAoC,gBAApC,EAAqD,SAArD,EAA+D,YAA/D,CAAV;AAAuF,UAAIC,KAAK,GAAC,CAACpM,iBAAD,EAAmByL,cAAnB,EAAkCC,aAAlC,EAAgDrQ,cAAhD,EAA+DkQ,QAAQ,CAAC,CAAD,CAAvE,EAA2EA,QAAQ,CAAC,CAAD,CAAnF,CAAV;;AAAkG,UAAGK,iBAAH,EAAqB;AAACK,QAAAA,aAAa,IAAE,2CAAyCC,SAAzC,GAAmD,YAAlE;AAA+E;;AAAA,WAAI,IAAIzP,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC2J,QAAQ,GAAC,CAAvB,EAAyB,EAAE3J,CAA3B,EAA6B;AAACwP,QAAAA,aAAa,IAAE,YAAUxP,CAAV,GAAY,iBAAZ,GAA8BA,CAA9B,GAAgC,cAAhC,GAA+CyP,SAA/C,GAAyD,OAAzD,GAAiEzP,CAAjE,GAAmE,QAAnE,GAA4E8O,QAAQ,CAAC9O,CAAC,GAAC,CAAH,CAAR,CAAc4B,IAA1F,GAA+F,IAA9G;AAAmH8N,QAAAA,KAAK,CAACnP,IAAN,CAAW,YAAUP,CAArB;AAAwB2P,QAAAA,KAAK,CAACpP,IAAN,CAAWuO,QAAQ,CAAC9O,CAAC,GAAC,CAAH,CAAnB;AAA0B;;AAAA,UAAGmP,iBAAH,EAAqB;AAACI,QAAAA,aAAa,GAAC,eAAaA,aAAa,CAACnW,MAAd,GAAqB,CAArB,GAAuB,IAAvB,GAA4B,EAAzC,IAA6CmW,aAA3D;AAAyE;;AAAAC,MAAAA,aAAa,IAAE,CAACH,OAAO,IAAEH,OAAT,GAAiB,WAAjB,GAA6B,EAA9B,IAAkC,YAAlC,IAAgDK,aAAa,CAACnW,MAAd,GAAqB,CAArB,GAAuB,IAAvB,GAA4B,EAA5E,IAAgFmW,aAAhF,GAA8F,MAA7G;;AAAoH,UAAGH,oBAAH,EAAwB;AAACI,QAAAA,aAAa,IAAE,gCAAf;AAAgD,OAAzE,MAA6E;AAAC,aAAI,IAAIxP,CAAC,GAACmP,iBAAiB,GAAC,CAAD,GAAG,CAA9B,EAAgCnP,CAAC,GAAC8O,QAAQ,CAAC1V,MAA3C,EAAkD,EAAE4G,CAApD,EAAsD;AAAC,cAAI4P,SAAS,GAAC5P,CAAC,KAAG,CAAJ,GAAM,WAAN,GAAkB,SAAOA,CAAC,GAAC,CAAT,IAAY,OAA5C;;AAAoD,cAAG8O,QAAQ,CAAC9O,CAAD,CAAR,CAAYgC,kBAAZ,KAAiC,IAApC,EAAyC;AAACwN,YAAAA,aAAa,IAAEI,SAAS,GAAC,QAAV,GAAmBA,SAAnB,GAA6B,QAA7B,GAAsCd,QAAQ,CAAC9O,CAAD,CAAR,CAAY4B,IAAlD,GAAuD,IAAtE;AAA2E8N,YAAAA,KAAK,CAACnP,IAAN,CAAWqP,SAAS,GAAC,OAArB;AAA8BD,YAAAA,KAAK,CAACpP,IAAN,CAAWuO,QAAQ,CAAC9O,CAAD,CAAR,CAAYgC,kBAAvB;AAA2C;AAAC;AAAC;;AAAA,UAAGqN,OAAH,EAAW;AAACG,QAAAA,aAAa,IAAE,0CAAwC,eAAvD;AAAuE,OAAnF,MAAuF,CAAE;;AAAAA,MAAAA,aAAa,IAAE,KAAf;AAAqBE,MAAAA,KAAK,CAACnP,IAAN,CAAWiP,aAAX;AAA0B,aAAOhB,OAAO,CAACE,QAAD,EAAUgB,KAAV,CAAP,CAAwBvG,KAAxB,CAA8B,IAA9B,EAAmCwG,KAAnC,CAAP;AAAiD;;AAAA,QAAIE,mCAAmC,GAAC,CAACC,YAAD,EAAcnG,QAAd,EAAuBoG,eAAvB,EAAuCC,gBAAvC,EAAwDC,OAAxD,EAAgE9O,cAAhE,KAAiF;AAAC,UAAI+O,WAAW,GAAC7B,mBAAmB,CAAC1E,QAAD,EAAUoG,eAAV,CAAnC;AAA8DE,MAAAA,OAAO,GAAClE,uBAAuB,CAACiE,gBAAD,EAAkBC,OAAlB,CAA/B;AAA0DzQ,MAAAA,6BAA6B,CAAC,EAAD,EAAI,CAACsQ,YAAD,CAAJ,EAAmB,UAASf,SAAT,EAAmB;AAACA,QAAAA,SAAS,GAACA,SAAS,CAAC,CAAD,CAAnB;AAAuB,YAAIvF,SAAS,GAAE,eAAcuF,SAAS,CAACnN,IAAK,EAA5C;;AAA8C,YAAGxN,SAAS,KAAG2a,SAAS,CAAClK,eAAV,CAA0BmJ,gBAAzC,EAA0D;AAACe,UAAAA,SAAS,CAAClK,eAAV,CAA0BmJ,gBAA1B,GAA2C,EAA3C;AAA8C;;AAAA,YAAG5Z,SAAS,KAAG2a,SAAS,CAAClK,eAAV,CAA0BmJ,gBAA1B,CAA2CrE,QAAQ,GAAC,CAApD,CAAf,EAAsE;AAAC,gBAAM,IAAIrG,YAAJ,CAAkB,8EAA6EqG,QAAQ,GAAC,CAAE,gBAAeoF,SAAS,CAACnN,IAAK,qGAAxI,CAAN;AAAoP;;AAAAmN,QAAAA,SAAS,CAAClK,eAAV,CAA0BmJ,gBAA1B,CAA2CrE,QAAQ,GAAC,CAApD,IAAuD,MAAI;AAACoD,UAAAA,qBAAqB,CAAE,oBAAmBgC,SAAS,CAACnN,IAAK,uBAApC,EAA2DsO,WAA3D,CAArB;AAA6F,SAAzJ;;AAA0J1Q,QAAAA,6BAA6B,CAAC,EAAD,EAAI0Q,WAAJ,EAAgBpB,QAAQ,IAAE;AAACA,UAAAA,QAAQ,CAACqB,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,IAApB;AAA0BpB,UAAAA,SAAS,CAAClK,eAAV,CAA0BmJ,gBAA1B,CAA2CrE,QAAQ,GAAC,CAApD,IAAuDkF,oBAAoB,CAACrF,SAAD,EAAWsF,QAAX,EAAoB,IAApB,EAAyBmB,OAAzB,EAAiC9O,cAAjC,CAA3E;AAA4H,iBAAM,EAAN;AAAS,SAA1L,CAA7B;AAAyN,eAAM,EAAN;AAAS,OAA54B,CAA7B;AAA26B,KAA7pC;;AAA8pC,QAAIiP,gCAAgC,GAAC,CAACN,YAAD,EAAcvG,UAAd,EAAyBI,QAAzB,EAAkCoG,eAAlC,EAAkDC,gBAAlD,EAAmEK,UAAnE,EAA8EC,OAA9E,EAAsFC,aAAtF,EAAoGrB,OAApG,KAA8G;AAAC,UAAIgB,WAAW,GAAC7B,mBAAmB,CAAC1E,QAAD,EAAUoG,eAAV,CAAnC;AAA8DxG,MAAAA,UAAU,GAACpG,gBAAgB,CAACoG,UAAD,CAA3B;AAAwC8G,MAAAA,UAAU,GAACtE,uBAAuB,CAACiE,gBAAD,EAAkBK,UAAlB,CAAlC;AAAgE7Q,MAAAA,6BAA6B,CAAC,EAAD,EAAI,CAACsQ,YAAD,CAAJ,EAAmB,UAASf,SAAT,EAAmB;AAACA,QAAAA,SAAS,GAACA,SAAS,CAAC,CAAD,CAAnB;AAAuB,YAAIvF,SAAS,GAAE,GAAEuF,SAAS,CAACnN,IAAK,IAAG2H,UAAW,EAA9C;;AAAgD,YAAGA,UAAU,CAACrO,UAAX,CAAsB,IAAtB,CAAH,EAA+B;AAACqO,UAAAA,UAAU,GAACiH,MAAM,CAACjH,UAAU,CAACkH,SAAX,CAAqB,CAArB,CAAD,CAAjB;AAA2C;;AAAA,YAAGF,aAAH,EAAiB;AAACxB,UAAAA,SAAS,CAAClK,eAAV,CAA0BmF,oBAA1B,CAA+CzJ,IAA/C,CAAoDgJ,UAApD;AAAgE;;AAAA,iBAASmH,mBAAT,GAA8B;AAAC3D,UAAAA,qBAAqB,CAAE,eAAcvD,SAAU,uBAA1B,EAAiD0G,WAAjD,CAArB;AAAmF;;AAAA,YAAI5G,KAAK,GAACyF,SAAS,CAAClK,eAAV,CAA0BwC,iBAApC;AAAsD,YAAIsJ,MAAM,GAACrH,KAAK,CAACC,UAAD,CAAhB;;AAA6B,YAAGnV,SAAS,KAAGuc,MAAZ,IAAoBvc,SAAS,KAAGuc,MAAM,CAAClH,aAAnB,IAAkCkH,MAAM,CAACC,SAAP,KAAmB7B,SAAS,CAACnN,IAA/D,IAAqE+O,MAAM,CAAChH,QAAP,KAAkBA,QAAQ,GAAC,CAAvH,EAAyH;AAAC+G,UAAAA,mBAAmB,CAAC/G,QAApB,GAA6BA,QAAQ,GAAC,CAAtC;AAAwC+G,UAAAA,mBAAmB,CAACE,SAApB,GAA8B7B,SAAS,CAACnN,IAAxC;AAA6C0H,UAAAA,KAAK,CAACC,UAAD,CAAL,GAAkBmH,mBAAlB;AAAsC,SAArP,MAAyP;AAACrH,UAAAA,mBAAmB,CAACC,KAAD,EAAOC,UAAP,EAAkBC,SAAlB,CAAnB;AAAgDF,UAAAA,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAlB,CAAgCE,QAAQ,GAAC,CAAzC,IAA4C+G,mBAA5C;AAAgE;;AAAAlR,QAAAA,6BAA6B,CAAC,EAAD,EAAI0Q,WAAJ,EAAgB,UAASpB,QAAT,EAAkB;AAAC,cAAI+B,cAAc,GAAChC,oBAAoB,CAACrF,SAAD,EAAWsF,QAAX,EAAoBC,SAApB,EAA8BsB,UAA9B,EAAyCC,OAAzC,EAAiDpB,OAAjD,CAAvC;;AAAiG,cAAG9a,SAAS,KAAGkV,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAjC,EAA+C;AAACoH,YAAAA,cAAc,CAAClH,QAAf,GAAwBA,QAAQ,GAAC,CAAjC;AAAmCL,YAAAA,KAAK,CAACC,UAAD,CAAL,GAAkBsH,cAAlB;AAAiC,WAApH,MAAwH;AAACvH,YAAAA,KAAK,CAACC,UAAD,CAAL,CAAkBE,aAAlB,CAAgCE,QAAQ,GAAC,CAAzC,IAA4CkH,cAA5C;AAA2D;;AAAA,iBAAM,EAAN;AAAS,SAAjU,CAA7B;AAAgW,eAAM,EAAN;AAAS,OAAnqC,CAA7B;AAAksC,KAA5/C;;AAA6/C,QAAIC,YAAY,GAAC,CAACC,KAAD,EAAOhC,SAAP,EAAiBvF,SAAjB,KAA6B;AAAC,UAAG,EAAEuH,KAAK,YAAYnc,MAAnB,CAAH,EAA8B;AAAC2O,QAAAA,iBAAiB,CAAE,GAAEiG,SAAU,yBAAwBuH,KAAM,EAA5C,CAAjB;AAAgE;;AAAA,UAAG,EAAEA,KAAK,YAAYhC,SAAS,CAAClK,eAAV,CAA0BkF,WAA7C,CAAH,EAA6D;AAACxG,QAAAA,iBAAiB,CAAE,GAAEiG,SAAU,qCAAoCuH,KAAK,CAAChH,WAAN,CAAkBnI,IAAK,EAAzE,CAAjB;AAA6F;;AAAA,UAAG,CAACmP,KAAK,CAACnM,EAAN,CAASxH,GAAb,EAAiB;AAACmG,QAAAA,iBAAiB,CAAE,yCAAwCiG,SAAU,oBAApD,CAAjB;AAA0F;;AAAA,aAAOS,aAAa,CAAC8G,KAAK,CAACnM,EAAN,CAASxH,GAAV,EAAc2T,KAAK,CAACnM,EAAN,CAASP,OAAT,CAAiBQ,eAA/B,EAA+CkK,SAAS,CAAClK,eAAzD,CAApB;AAA8F,KAAnf;;AAAof,QAAImM,gCAAgC,GAAC,CAACjC,SAAD,EAAWvM,SAAX,EAAqBxB,gBAArB,EAAsCiQ,eAAtC,EAAsD5P,MAAtD,EAA6DC,aAA7D,EAA2EJ,kBAA3E,EAA8FgQ,eAA9F,EAA8G3P,MAA9G,EAAqHC,aAArH,KAAqI;AAACgB,MAAAA,SAAS,GAACW,gBAAgB,CAACX,SAAD,CAA1B;AAAsCnB,MAAAA,MAAM,GAAC0K,uBAAuB,CAACkF,eAAD,EAAiB5P,MAAjB,CAA9B;AAAuD7B,MAAAA,6BAA6B,CAAC,EAAD,EAAI,CAACuP,SAAD,CAAJ,EAAgB,UAASA,SAAT,EAAmB;AAACA,QAAAA,SAAS,GAACA,SAAS,CAAC,CAAD,CAAnB;AAAuB,YAAIvF,SAAS,GAAE,GAAEuF,SAAS,CAACnN,IAAK,IAAGY,SAAU,EAA7C;AAA+C,YAAI2O,IAAI,GAAC;AAAC1F,UAAAA,GAAG,GAAE;AAACsB,YAAAA,qBAAqB,CAAE,iBAAgBvD,SAAU,uBAA5B,EAAmD,CAACxI,gBAAD,EAAkBE,kBAAlB,CAAnD,CAArB;AAA+G,WAAtH;;AAAuHkQ,UAAAA,UAAU,EAAC,IAAlI;AAAuIC,UAAAA,YAAY,EAAC;AAApJ,SAAT;;AAAmK,YAAG9P,MAAH,EAAU;AAAC4P,UAAAA,IAAI,CAACG,GAAL,GAAS,MAAIvE,qBAAqB,CAAE,iBAAgBvD,SAAU,uBAA5B,EAAmD,CAACxI,gBAAD,EAAkBE,kBAAlB,CAAnD,CAAlC;AAA4H,SAAvI,MAA2I;AAACiQ,UAAAA,IAAI,CAACG,GAAL,GAASC,CAAC,IAAEhO,iBAAiB,CAACiG,SAAS,GAAC,0BAAX,CAA7B;AAAoE;;AAAA5U,QAAAA,MAAM,CAAC4c,cAAP,CAAsBzC,SAAS,CAAClK,eAAV,CAA0BwC,iBAAhD,EAAkE7E,SAAlE,EAA4E2O,IAA5E;AAAkF3R,QAAAA,6BAA6B,CAAC,EAAD,EAAI+B,MAAM,GAAC,CAACP,gBAAD,EAAkBE,kBAAlB,CAAD,GAAuC,CAACF,gBAAD,CAAjD,EAAoE,UAASgM,KAAT,EAAe;AAAC,cAAIhM,gBAAgB,GAACgM,KAAK,CAAC,CAAD,CAA1B;AAA8B,cAAImE,IAAI,GAAC;AAAC1F,YAAAA,GAAG,GAAE;AAAC,kBAAIrO,GAAG,GAAC0T,YAAY,CAAC,IAAD,EAAM/B,SAAN,EAAgBvF,SAAS,GAAC,SAA1B,CAApB;AAAyD,qBAAOxI,gBAAgB,CAAC,cAAD,CAAhB,CAAiCK,MAAM,CAACC,aAAD,EAAelE,GAAf,CAAvC,CAAP;AAAmE,aAAnI;;AAAoIgU,YAAAA,UAAU,EAAC;AAA/I,WAAT;;AAA8J,cAAG7P,MAAH,EAAU;AAACA,YAAAA,MAAM,GAACwK,uBAAuB,CAACmF,eAAD,EAAiB3P,MAAjB,CAA9B;AAAuD,gBAAIL,kBAAkB,GAAC8L,KAAK,CAAC,CAAD,CAA5B;;AAAgCmE,YAAAA,IAAI,CAACG,GAAL,GAAS,UAASC,CAAT,EAAW;AAAC,kBAAInU,GAAG,GAAC0T,YAAY,CAAC,IAAD,EAAM/B,SAAN,EAAgBvF,SAAS,GAAC,SAA1B,CAApB;AAAyD,kBAAI3K,WAAW,GAAC,EAAhB;AAAmB0C,cAAAA,MAAM,CAACC,aAAD,EAAepE,GAAf,EAAmB8D,kBAAkB,CAAC,YAAD,CAAlB,CAAiCrC,WAAjC,EAA6C0S,CAA7C,CAAnB,CAAN;AAA0E3S,cAAAA,cAAc,CAACC,WAAD,CAAd;AAA4B,aAAvM;AAAwM;;AAAAjK,UAAAA,MAAM,CAAC4c,cAAP,CAAsBzC,SAAS,CAAClK,eAAV,CAA0BwC,iBAAhD,EAAkE7E,SAAlE,EAA4E2O,IAA5E;AAAkF,iBAAM,EAAN;AAAS,SAArpB,CAA7B;AAAorB,eAAM,EAAN;AAAS,OAA5uC,CAA7B;AAA2wC,KAAnhD;;AAAohD,aAASM,mBAAT,GAA8B;AAAC7c,MAAAA,MAAM,CAACC,MAAP,CAAc6c,eAAe,CAAChL,SAA9B,EAAwC;AAAC+E,QAAAA,GAAG,CAAClR,EAAD,EAAI;AAAC,iBAAO,KAAKoX,SAAL,CAAepX,EAAf,CAAP;AAA0B,SAAnC;;AAAoCqX,QAAAA,GAAG,CAACrX,EAAD,EAAI;AAAC,iBAAO,KAAKoX,SAAL,CAAepX,EAAf,MAAqBnG,SAA5B;AAAsC,SAAlF;;AAAmFyd,QAAAA,QAAQ,CAAClN,MAAD,EAAQ;AAAC,cAAIpK,EAAE,GAAC,KAAKuX,QAAL,CAAchT,GAAd,MAAqB,KAAK6S,SAAL,CAAevY,MAA3C;AAAkD,eAAKuY,SAAL,CAAepX,EAAf,IAAmBoK,MAAnB;AAA0B,iBAAOpK,EAAP;AAAU,SAA1L;;AAA2LwX,QAAAA,IAAI,CAACxX,EAAD,EAAI;AAAC,eAAKoX,SAAL,CAAepX,EAAf,IAAmBnG,SAAnB;AAA6B,eAAK0d,QAAL,CAAcvR,IAAd,CAAmBhG,EAAnB;AAAuB;;AAAxP,OAAxC;AAAmS;;AAAA,aAASmX,eAAT,GAA0B;AAAC,WAAKC,SAAL,GAAe,CAACvd,SAAD,CAAf;AAA2B,WAAK0d,QAAL,GAAc,EAAd;AAAiB;;AAAA,QAAIE,aAAa,GAAC,IAAIN,eAAJ,EAAlB;;AAAsC,QAAIO,cAAc,GAACtN,MAAM,IAAE;AAAC,UAAGA,MAAM,IAAEqN,aAAa,CAACE,QAAtB,IAAgC,MAAI,EAAEF,aAAa,CAACvG,GAAd,CAAkB9G,MAAlB,EAA0BwN,QAAnE,EAA4E;AAACH,QAAAA,aAAa,CAACD,IAAd,CAAmBpN,MAAnB;AAA2B;AAAC,KAArI;;AAAsI,QAAIyN,mBAAmB,GAAC,MAAI;AAAC,UAAIlO,KAAK,GAAC,CAAV;;AAAY,WAAI,IAAIlE,CAAC,GAACgS,aAAa,CAACE,QAAxB,EAAiClS,CAAC,GAACgS,aAAa,CAACL,SAAd,CAAwBvY,MAA3D,EAAkE,EAAE4G,CAApE,EAAsE;AAAC,YAAGgS,aAAa,CAACL,SAAd,CAAwB3R,CAAxB,MAA6B5L,SAAhC,EAA0C;AAAC,YAAE8P,KAAF;AAAQ;AAAC;;AAAA,aAAOA,KAAP;AAAa,KAAjL;;AAAkL,QAAImO,UAAU,GAAC,MAAI;AAACL,MAAAA,aAAa,CAACL,SAAd,CAAwBpR,IAAxB,CAA6B;AAAC2E,QAAAA,KAAK,EAAC9Q;AAAP,OAA7B,EAA+C;AAAC8Q,QAAAA,KAAK,EAAC;AAAP,OAA/C,EAA4D;AAACA,QAAAA,KAAK,EAAC;AAAP,OAA5D,EAAyE;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAzE;AAAwF8M,MAAAA,aAAa,CAACE,QAAd,GAAuBF,aAAa,CAACL,SAAd,CAAwBvY,MAA/C;AAAsDrF,MAAAA,MAAM,CAAC,qBAAD,CAAN,GAA8Bqe,mBAA9B;AAAkD,KAApN;;AAAqN,QAAI1H,KAAK,GAAC;AAAC4H,MAAAA,OAAO,EAAC3N,MAAM,IAAE;AAAC,YAAG,CAACA,MAAJ,EAAW;AAACpB,UAAAA,iBAAiB,CAAC,sCAAoCoB,MAArC,CAAjB;AAA8D;;AAAA,eAAOqN,aAAa,CAACvG,GAAd,CAAkB9G,MAAlB,EAA0BO,KAAjC;AAAuC,OAAnI;AAAoIyF,MAAAA,QAAQ,EAACzF,KAAK,IAAE;AAAC,gBAAOA,KAAP;AAAc,eAAK9Q,SAAL;AAAe,mBAAO,CAAP;;AAAS,eAAK,IAAL;AAAU,mBAAO,CAAP;;AAAS,eAAK,IAAL;AAAU,mBAAO,CAAP;;AAAS,eAAK,KAAL;AAAW,mBAAO,CAAP;;AAAS;AAAQ;AAAC,qBAAO4d,aAAa,CAACH,QAAd,CAAuB;AAACM,gBAAAA,QAAQ,EAAC,CAAV;AAAYjN,gBAAAA,KAAK,EAACA;AAAlB,eAAvB,CAAP;AAAwD;AAAjK;AAAmK;AAAxT,KAAV;;AAAoU,QAAIqN,uBAAuB,GAAC,CAAC9O,OAAD,EAAS7B,IAAT,KAAgB;AAACA,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B3B,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;AAAW,wBAAe+C,MAAM,IAAE;AAAC,cAAI9C,EAAE,GAAC6I,KAAK,CAAC4H,OAAN,CAAc3N,MAAd,CAAP;;AAA6BsN,UAAAA,cAAc,CAACtN,MAAD,CAAd;;AAAuB,iBAAO9C,EAAP;AAAU,SAAjG;AAAkG,sBAAa,CAAChD,WAAD,EAAaqG,KAAb,KAAqBwF,KAAK,CAACC,QAAN,CAAezF,KAAf,CAApI;AAA0J,0BAAiBnD,mBAA3K;AAA+L,gCAAuB/C,0BAAtN;AAAiPgD,QAAAA,kBAAkB,EAAC;AAApQ,OAAT,CAAZ;AAAgS,KAAzW;;AAA0W,QAAIwQ,wBAAwB,GAAC,CAAC5Q,IAAD,EAAM6Q,KAAN,EAAYC,MAAZ,KAAqB;AAAC,cAAOD,KAAP;AAAc,aAAK,CAAL;AAAO,iBAAOC,MAAM,GAAC,UAASzT,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqBpH,KAAK,CAACoH,OAAO,IAAE,CAAV,CAA1B,CAAP;AAA+C,WAAlE,GAAmE,UAASA,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqBnH,MAAM,CAACmH,OAAO,IAAE,CAAV,CAA3B,CAAP;AAAgD,WAAlJ;;AAAmJ,aAAK,CAAL;AAAO,iBAAOyT,MAAM,GAAC,UAASzT,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqBlH,MAAM,CAACkH,OAAO,IAAE,CAAV,CAA3B,CAAP;AAAgD,WAAnE,GAAoE,UAASA,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqBjH,OAAO,CAACiH,OAAO,IAAE,CAAV,CAA5B,CAAP;AAAiD,WAApJ;;AAAqJ,aAAK,CAAL;AAAO,iBAAOyT,MAAM,GAAC,UAASzT,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqBhH,MAAM,CAACgH,OAAO,IAAE,CAAV,CAA3B,CAAP;AAAgD,WAAnE,GAAoE,UAASA,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqB/G,OAAO,CAAC+G,OAAO,IAAE,CAAV,CAA5B,CAAP;AAAiD,WAApJ;;AAAqJ;AAAQ,gBAAM,IAAI6C,SAAJ,CAAe,0BAAyB2Q,KAAM,MAAK7Q,IAAK,EAAxD,CAAN;AAAxe;AAA0iB,KAA7lB;;AAA8lB,QAAI+Q,sBAAsB,GAAC,CAAClP,OAAD,EAAS7B,IAAT,EAAce,IAAd,EAAmBiQ,QAAnB,KAA8B;AAAChR,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;;AAA4B,eAASiR,IAAT,GAAe,CAAE;;AAAAA,MAAAA,IAAI,CAACC,MAAL,GAAY,EAAZ;AAAe7S,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;AAAWmI,QAAAA,WAAW,EAAC8I,IAAvB;AAA4B,wBAAe,UAASxP,CAAT,EAAW;AAAC,iBAAO,KAAK0G,WAAL,CAAiB+I,MAAjB,CAAwBzP,CAAxB,CAAP;AAAkC,SAAzF;AAA0F,sBAAa,CAACxE,WAAD,EAAawE,CAAb,KAAiBA,CAAC,CAAC6B,KAA1H;AAAgI,0BAAiBnD,mBAAjJ;AAAqK,gCAAuByQ,wBAAwB,CAAC5Q,IAAD,EAAMe,IAAN,EAAWiQ,QAAX,CAApN;AAAyO5Q,QAAAA,kBAAkB,EAAC;AAA5P,OAAT,CAAZ;AAAwR4H,MAAAA,kBAAkB,CAAChI,IAAD,EAAMiR,IAAN,CAAlB;AAA8B,KAA5a;;AAA6a,QAAIE,qBAAqB,GAAC,CAACtP,OAAD,EAAS+F,SAAT,KAAqB;AAAC,UAAIwJ,IAAI,GAAC7T,eAAe,CAACsE,OAAD,CAAxB;;AAAkC,UAAGrP,SAAS,KAAG4e,IAAf,EAAoB;AAACzP,QAAAA,iBAAiB,CAACiG,SAAS,GAAC,oBAAV,GAA+BoD,WAAW,CAACnJ,OAAD,CAA3C,CAAjB;AAAuE;;AAAA,aAAOuP,IAAP;AAAY,KAA1L;;AAA2L,QAAIC,4BAA4B,GAAC,CAACC,WAAD,EAAatR,IAAb,EAAkBuR,SAAlB,KAA8B;AAAC,UAAIC,QAAQ,GAACL,qBAAqB,CAACG,WAAD,EAAa,MAAb,CAAlC;AAAuDtR,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B,UAAIyR,IAAI,GAACD,QAAQ,CAACrJ,WAAlB;AAA8B,UAAIuJ,KAAK,GAAC1e,MAAM,CAACmS,MAAP,CAAcqM,QAAQ,CAACrJ,WAAT,CAAqBrD,SAAnC,EAA6C;AAACxB,QAAAA,KAAK,EAAC;AAACA,UAAAA,KAAK,EAACiO;AAAP,SAAP;AAAyBpJ,QAAAA,WAAW,EAAC;AAAC7E,UAAAA,KAAK,EAAC+D,mBAAmB,CAAE,GAAEmK,QAAQ,CAACxR,IAAK,IAAGA,IAAK,EAA1B,EAA4B,YAAU,CAAE,CAAxC;AAA1B;AAArC,OAA7C,CAAV;AAAmKyR,MAAAA,IAAI,CAACP,MAAL,CAAYK,SAAZ,IAAuBG,KAAvB;AAA6BD,MAAAA,IAAI,CAACzR,IAAD,CAAJ,GAAW0R,KAAX;AAAiB,KAAlY;;AAAmY,QAAIlJ,UAAU,GAACmH,CAAC,IAAE;AAAC,UAAGA,CAAC,KAAG,IAAP,EAAY;AAAC,eAAM,MAAN;AAAa;;AAAA,UAAIgC,CAAC,GAAC,OAAOhC,CAAb;;AAAe,UAAGgC,CAAC,KAAG,QAAJ,IAAcA,CAAC,KAAG,OAAlB,IAA2BA,CAAC,KAAG,UAAlC,EAA6C;AAAC,eAAOhC,CAAC,CAAC7E,QAAF,EAAP;AAAoB,OAAlE,MAAsE;AAAC,eAAM,KAAG6E,CAAT;AAAW;AAAC,KAA/I;;AAAgJ,QAAIiC,yBAAyB,GAAC,CAAC5R,IAAD,EAAM6Q,KAAN,KAAc;AAAC,cAAOA,KAAP;AAAc,aAAK,CAAL;AAAO,iBAAO,UAASxT,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqB9G,OAAO,CAAC8G,OAAO,IAAE,CAAV,CAA5B,CAAP;AAAiD,WAA1E;;AAA2E,aAAK,CAAL;AAAO,iBAAO,UAASA,OAAT,EAAiB;AAAC,mBAAO,KAAK,cAAL,EAAqB7G,OAAO,CAAC6G,OAAO,IAAE,CAAV,CAA5B,CAAP;AAAiD,WAA1E;;AAA2E;AAAQ,gBAAM,IAAI6C,SAAJ,CAAe,wBAAuB2Q,KAAM,MAAK7Q,IAAK,EAAtD,CAAN;AAA1L;AAA0P,KAAvS;;AAAwS,QAAI6R,uBAAuB,GAAC,CAAChQ,OAAD,EAAS7B,IAAT,EAAce,IAAd,KAAqB;AAACf,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B3B,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;AAAW,wBAAesD,KAAK,IAAEA,KAAjC;AAAuC,sBAAa,CAACrG,WAAD,EAAaqG,KAAb,KAAqBA,KAAzE;AAA+E,0BAAiBnD,mBAAhG;AAAoH,gCAAuByR,yBAAyB,CAAC5R,IAAD,EAAMe,IAAN,CAApK;AAAgLX,QAAAA,kBAAkB,EAAC;AAAnM,OAAT,CAAZ;AAA+N,KAA7S;;AAA8S,QAAI0R,0BAA0B,GAAC,CAAC9R,IAAD,EAAM+H,QAAN,EAAeoG,eAAf,EAA+B/D,SAA/B,EAAyCqE,UAAzC,EAAoDlK,EAApD,EAAuD+I,OAAvD,KAAiE;AAAC,UAAIJ,QAAQ,GAACT,mBAAmB,CAAC1E,QAAD,EAAUoG,eAAV,CAAhC;AAA2DnO,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4ByO,MAAAA,UAAU,GAACtE,uBAAuB,CAACC,SAAD,EAAWqE,UAAX,CAAlC;AAAyDzG,MAAAA,kBAAkB,CAAChI,IAAD,EAAM,YAAU;AAACmL,QAAAA,qBAAqB,CAAE,eAAcnL,IAAK,uBAArB,EAA4CkN,QAA5C,CAArB;AAA2E,OAA5F,EAA6FnF,QAAQ,GAAC,CAAtG,CAAlB;AAA2HnK,MAAAA,6BAA6B,CAAC,EAAD,EAAIsP,QAAJ,EAAa,UAASA,QAAT,EAAkB;AAAC,YAAI6E,gBAAgB,GAAC,CAAC7E,QAAQ,CAAC,CAAD,CAAT,EAAa,IAAb,EAAmB7N,MAAnB,CAA0B6N,QAAQ,CAAC8E,KAAT,CAAe,CAAf,CAA1B,CAArB;AAAkE3I,QAAAA,mBAAmB,CAACrJ,IAAD,EAAMiN,oBAAoB,CAACjN,IAAD,EAAM+R,gBAAN,EAAuB,IAAvB,EAA4BtD,UAA5B,EAAuClK,EAAvC,EAA0C+I,OAA1C,CAA1B,EAA6EvF,QAAQ,GAAC,CAAtF,CAAnB;AAA4G,eAAM,EAAN;AAAS,OAAvN,CAA7B;AAAsP,KAAlmB;;AAAmmB,QAAIkK,2BAA2B,GAAC,CAACjS,IAAD,EAAM6Q,KAAN,EAAYC,MAAZ,KAAqB;AAAC,cAAOD,KAAP;AAAc,aAAK,CAAL;AAAO,iBAAOC,MAAM,GAACzT,OAAO,IAAEpH,KAAK,CAACoH,OAAO,IAAE,CAAV,CAAf,GAA4BA,OAAO,IAAEnH,MAAM,CAACmH,OAAO,IAAE,CAAV,CAAxD;;AAAqE,aAAK,CAAL;AAAO,iBAAOyT,MAAM,GAACzT,OAAO,IAAElH,MAAM,CAACkH,OAAO,IAAE,CAAV,CAAhB,GAA6BA,OAAO,IAAEjH,OAAO,CAACiH,OAAO,IAAE,CAAV,CAA1D;;AAAuE,aAAK,CAAL;AAAO,iBAAOyT,MAAM,GAACzT,OAAO,IAAEhH,MAAM,CAACgH,OAAO,IAAE,CAAV,CAAhB,GAA6BA,OAAO,IAAE/G,OAAO,CAAC+G,OAAO,IAAE,CAAV,CAA1D;;AAAuE;AAAQ,gBAAM,IAAI6C,SAAJ,CAAe,0BAAyB2Q,KAAM,MAAK7Q,IAAK,EAAxD,CAAN;AAA9P;AAAgU,KAAtX;;AAAuX,QAAIkS,yBAAyB,GAAC,CAACpR,aAAD,EAAed,IAAf,EAAoBe,IAApB,EAAyBC,QAAzB,EAAkCC,QAAlC,KAA6C;AAACjB,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;;AAA4B,UAAGiB,QAAQ,KAAG,CAAC,CAAf,EAAiB;AAACA,QAAAA,QAAQ,GAAC,UAAT;AAAoB;;AAAA,UAAIkR,YAAY,GAAC7O,KAAK,IAAEA,KAAxB;;AAA8B,UAAGtC,QAAQ,KAAG,CAAd,EAAgB;AAAC,YAAIoR,QAAQ,GAAC,KAAG,IAAErR,IAAlB;;AAAuBoR,QAAAA,YAAY,GAAC7O,KAAK,IAAEA,KAAK,IAAE8O,QAAP,KAAkBA,QAAtC;AAA+C;;AAAA,UAAIC,cAAc,GAACrS,IAAI,CAAC+J,QAAL,CAAc,UAAd,CAAnB;;AAA6C,UAAIuI,eAAe,GAAC,CAAChP,KAAD,EAAOiP,UAAP,KAAoB,CAAE,CAA1C;;AAA2C,UAAIC,UAAJ;;AAAe,UAAGH,cAAH,EAAkB;AAACG,QAAAA,UAAU,GAAC,UAASvV,WAAT,EAAqBqG,KAArB,EAA2B;AAACgP,UAAAA,eAAe,CAAChP,KAAD,EAAO,KAAKtD,IAAZ,CAAf;AAAiC,iBAAOsD,KAAK,KAAG,CAAf;AAAiB,SAAzF;AAA0F,OAA7G,MAAiH;AAACkP,QAAAA,UAAU,GAAC,UAASvV,WAAT,EAAqBqG,KAArB,EAA2B;AAACgP,UAAAA,eAAe,CAAChP,KAAD,EAAO,KAAKtD,IAAZ,CAAf;AAAiC,iBAAOsD,KAAP;AAAa,SAArF;AAAsF;;AAAAjF,MAAAA,YAAY,CAACyC,aAAD,EAAe;AAACd,QAAAA,IAAI,EAACA,IAAN;AAAW,wBAAemS,YAA1B;AAAuC,sBAAaK,UAApD;AAA+D,0BAAiBrS,mBAAhF;AAAoG,gCAAuB8R,2BAA2B,CAACjS,IAAD,EAAMe,IAAN,EAAWC,QAAQ,KAAG,CAAtB,CAAtJ;AAA+KZ,QAAAA,kBAAkB,EAAC;AAAlM,OAAf,CAAZ;AAAoO,KAAtxB;;AAAuxB,QAAIqS,6BAA6B,GAAC,CAAC5Q,OAAD,EAAS6Q,aAAT,EAAuB1S,IAAvB,KAA8B;AAAC,UAAI2S,WAAW,GAAC,CAAC/b,SAAD,EAAW/B,UAAX,EAAsBgC,UAAtB,EAAiCC,WAAjC,EAA6CC,UAA7C,EAAwDC,WAAxD,EAAoEC,YAApE,EAAiFC,YAAjF,CAAhB;AAA+G,UAAI0b,EAAE,GAACD,WAAW,CAACD,aAAD,CAAlB;;AAAkC,eAASG,gBAAT,CAA0B9P,MAA1B,EAAiC;AAAC,YAAIhC,IAAI,GAACzK,OAAO,CAACyM,MAAM,IAAE,CAAT,CAAhB;AAA4B,YAAI+P,IAAI,GAACxc,OAAO,CAACyM,MAAM,GAAC,CAAP,IAAU,CAAX,CAAhB;AAA8B,eAAO,IAAI6P,EAAJ,CAAO3c,KAAK,CAACU,MAAb,EAAoBmc,IAApB,EAAyB/R,IAAzB,CAAP;AAAsC;;AAAAf,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B3B,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;AAAW,wBAAe6S,gBAA1B;AAA2C,0BAAiB1S,mBAA5D;AAAgF,gCAAuB0S;AAAvG,OAAT,EAAkI;AAAC7Q,QAAAA,4BAA4B,EAAC;AAA9B,OAAlI,CAAZ;AAAmL,KAAniB;;AAAoiB,QAAI+Q,iBAAiB,GAAC,CAACC,GAAD,EAAKC,IAAL,EAAUC,MAAV,EAAiBC,eAAjB,KAAmC;AAAC,UAAG,EAAEA,eAAe,GAAC,CAAlB,CAAH,EAAwB,OAAO,CAAP;AAAS,UAAIC,QAAQ,GAACF,MAAb;AAAoB,UAAIG,MAAM,GAACH,MAAM,GAACC,eAAP,GAAuB,CAAlC;;AAAoC,WAAI,IAAI/U,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4U,GAAG,CAACxb,MAAlB,EAAyB,EAAE4G,CAA3B,EAA6B;AAAC,YAAIkV,CAAC,GAACN,GAAG,CAAC5L,UAAJ,CAAehJ,CAAf,CAAN;;AAAwB,YAAGkV,CAAC,IAAE,KAAH,IAAUA,CAAC,IAAE,KAAhB,EAAsB;AAAC,cAAIC,EAAE,GAACP,GAAG,CAAC5L,UAAJ,CAAe,EAAEhJ,CAAjB,CAAP;AAA2BkV,UAAAA,CAAC,GAAC,SAAO,CAACA,CAAC,GAAC,IAAH,KAAU,EAAjB,IAAqBC,EAAE,GAAC,IAA1B;AAA+B;;AAAA,YAAGD,CAAC,IAAE,GAAN,EAAU;AAAC,cAAGJ,MAAM,IAAEG,MAAX,EAAkB;AAAMJ,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAeI,CAAf;AAAiB,SAApD,MAAyD,IAAGA,CAAC,IAAE,IAAN,EAAW;AAAC,cAAGJ,MAAM,GAAC,CAAP,IAAUG,MAAb,EAAoB;AAAMJ,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,IAAE,CAAtB;AAAwBL,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,GAAC,EAArB;AAAwB,SAAtF,MAA2F,IAAGA,CAAC,IAAE,KAAN,EAAY;AAAC,cAAGJ,MAAM,GAAC,CAAP,IAAUG,MAAb,EAAoB;AAAMJ,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,IAAE,EAAtB;AAAyBL,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,IAAE,CAAH,GAAK,EAAxB;AAA2BL,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,GAAC,EAArB;AAAwB,SAAnH,MAAuH;AAAC,cAAGJ,MAAM,GAAC,CAAP,IAAUG,MAAb,EAAoB;AAAMJ,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,IAAE,EAAtB;AAAyBL,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,IAAE,EAAH,GAAM,EAAzB;AAA4BL,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,IAAE,CAAH,GAAK,EAAxB;AAA2BL,UAAAA,IAAI,CAACC,MAAM,EAAP,CAAJ,GAAe,MAAII,CAAC,GAAC,EAArB;AAAwB;AAAC;;AAAAL,MAAAA,IAAI,CAACC,MAAD,CAAJ,GAAa,CAAb;AAAe,aAAOA,MAAM,GAACE,QAAd;AAAuB,KAA/sB;;AAAgtB,QAAII,YAAY,GAAC,CAACR,GAAD,EAAKS,MAAL,EAAYN,eAAZ,KAA8BJ,iBAAiB,CAACC,GAAD,EAAK9c,MAAL,EAAYud,MAAZ,EAAmBN,eAAnB,CAAhE;;AAAoG,QAAIO,eAAe,GAACV,GAAG,IAAE;AAAC,UAAIW,GAAG,GAAC,CAAR;;AAAU,WAAI,IAAIvV,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4U,GAAG,CAACxb,MAAlB,EAAyB,EAAE4G,CAA3B,EAA6B;AAAC,YAAIqD,CAAC,GAACuR,GAAG,CAAC5L,UAAJ,CAAehJ,CAAf,CAAN;;AAAwB,YAAGqD,CAAC,IAAE,GAAN,EAAU;AAACkS,UAAAA,GAAG;AAAG,SAAjB,MAAsB,IAAGlS,CAAC,IAAE,IAAN,EAAW;AAACkS,UAAAA,GAAG,IAAE,CAAL;AAAO,SAAnB,MAAwB,IAAGlS,CAAC,IAAE,KAAH,IAAUA,CAAC,IAAE,KAAhB,EAAsB;AAACkS,UAAAA,GAAG,IAAE,CAAL;AAAO,YAAEvV,CAAF;AAAI,SAAlC,MAAsC;AAACuV,UAAAA,GAAG,IAAE,CAAL;AAAO;AAAC;;AAAA,aAAOA,GAAP;AAAW,KAAlM;;AAAmM,QAAIC,WAAW,GAAC,OAAOC,WAAP,IAAoB,WAApB,GAAgC,IAAIA,WAAJ,CAAgB,MAAhB,CAAhC,GAAwDrhB,SAAxE;;AAAkF,QAAIshB,iBAAiB,GAAC,CAACC,WAAD,EAAaC,GAAb,EAAiBC,cAAjB,KAAkC;AAAC,UAAIZ,MAAM,GAACW,GAAG,GAACC,cAAf;AAA8B,UAAIC,MAAM,GAACF,GAAX;;AAAe,aAAMD,WAAW,CAACG,MAAD,CAAX,IAAqB,EAAEA,MAAM,IAAEb,MAAV,CAA3B,EAA6C,EAAEa,MAAF;;AAAS,UAAGA,MAAM,GAACF,GAAP,GAAW,EAAX,IAAeD,WAAW,CAACpd,MAA3B,IAAmCid,WAAtC,EAAkD;AAAC,eAAOA,WAAW,CAACO,MAAZ,CAAmBJ,WAAW,CAACK,QAAZ,CAAqBJ,GAArB,EAAyBE,MAAzB,CAAnB,CAAP;AAA4D;;AAAA,UAAIlB,GAAG,GAAC,EAAR;;AAAW,aAAMgB,GAAG,GAACE,MAAV,EAAiB;AAAC,YAAIG,EAAE,GAACN,WAAW,CAACC,GAAG,EAAJ,CAAlB;;AAA0B,YAAG,EAAEK,EAAE,GAAC,GAAL,CAAH,EAAa;AAACrB,UAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoBgT,EAApB,CAAL;AAA6B;AAAS;;AAAA,YAAId,EAAE,GAACQ,WAAW,CAACC,GAAG,EAAJ,CAAX,GAAmB,EAA1B;;AAA6B,YAAG,CAACK,EAAE,GAAC,GAAJ,KAAU,GAAb,EAAiB;AAACrB,UAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoB,CAACgT,EAAE,GAAC,EAAJ,KAAS,CAAT,GAAWd,EAA/B,CAAL;AAAwC;AAAS;;AAAA,YAAIe,EAAE,GAACP,WAAW,CAACC,GAAG,EAAJ,CAAX,GAAmB,EAA1B;;AAA6B,YAAG,CAACK,EAAE,GAAC,GAAJ,KAAU,GAAb,EAAiB;AAACA,UAAAA,EAAE,GAAC,CAACA,EAAE,GAAC,EAAJ,KAAS,EAAT,GAAYd,EAAE,IAAE,CAAhB,GAAkBe,EAArB;AAAwB,SAA1C,MAA8C;AAACD,UAAAA,EAAE,GAAC,CAACA,EAAE,GAAC,CAAJ,KAAQ,EAAR,GAAWd,EAAE,IAAE,EAAf,GAAkBe,EAAE,IAAE,CAAtB,GAAwBP,WAAW,CAACC,GAAG,EAAJ,CAAX,GAAmB,EAA9C;AAAiD;;AAAA,YAAGK,EAAE,GAAC,KAAN,EAAY;AAACrB,UAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoBgT,EAApB,CAAL;AAA6B,SAA1C,MAA8C;AAAC,cAAIE,EAAE,GAACF,EAAE,GAAC,KAAV;AAAgBrB,UAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoB,QAAMkT,EAAE,IAAE,EAA9B,EAAiC,QAAMA,EAAE,GAAC,IAA1C,CAAL;AAAqD;AAAC;;AAAA,aAAOvB,GAAP;AAAW,KAAntB;;AAAotB,QAAIwB,YAAY,GAAC,CAAChZ,GAAD,EAAKyY,cAAL,KAAsBzY,GAAG,GAACsY,iBAAiB,CAAC5d,MAAD,EAAQsF,GAAR,EAAYyY,cAAZ,CAAlB,GAA8C,EAAxF;;AAA2F,QAAIQ,4BAA4B,GAAC,CAAC5S,OAAD,EAAS7B,IAAT,KAAgB;AAACA,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B,UAAI0U,eAAe,GAAC1U,IAAI,KAAG,aAA3B;AAAyC3B,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;;AAAW,uBAAesD,KAAf,EAAqB;AAAC,cAAI9L,MAAM,GAAClB,OAAO,CAACgN,KAAK,IAAE,CAAR,CAAlB;AAA6B,cAAIqR,OAAO,GAACrR,KAAK,GAAC,CAAlB;AAAoB,cAAI0P,GAAJ;;AAAQ,cAAG0B,eAAH,EAAmB;AAAC,gBAAIE,cAAc,GAACD,OAAnB;;AAA2B,iBAAI,IAAIvW,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE5G,MAAf,EAAsB,EAAE4G,CAAxB,EAA0B;AAAC,kBAAIyW,cAAc,GAACF,OAAO,GAACvW,CAA3B;;AAA6B,kBAAGA,CAAC,IAAE5G,MAAH,IAAWtB,MAAM,CAAC2e,cAAD,CAAN,IAAwB,CAAtC,EAAwC;AAAC,oBAAIC,OAAO,GAACD,cAAc,GAACD,cAA3B;AAA0C,oBAAIG,aAAa,GAACP,YAAY,CAACI,cAAD,EAAgBE,OAAhB,CAA9B;;AAAuD,oBAAG9B,GAAG,KAAGxgB,SAAT,EAAmB;AAACwgB,kBAAAA,GAAG,GAAC+B,aAAJ;AAAkB,iBAAtC,MAA0C;AAAC/B,kBAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoB,CAApB,CAAL;AAA4B2R,kBAAAA,GAAG,IAAE+B,aAAL;AAAmB;;AAAAH,gBAAAA,cAAc,GAACC,cAAc,GAAC,CAA9B;AAAgC;AAAC;AAAC,WAA7W,MAAiX;AAAC,gBAAIG,CAAC,GAAC,IAAI1W,KAAJ,CAAU9G,MAAV,CAAN;;AAAwB,iBAAI,IAAI4G,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB,EAAE4G,CAAvB,EAAyB;AAAC4W,cAAAA,CAAC,CAAC5W,CAAD,CAAD,GAAKgD,MAAM,CAACC,YAAP,CAAoBnL,MAAM,CAACye,OAAO,GAACvW,CAAT,CAA1B,CAAL;AAA4C;;AAAA4U,YAAAA,GAAG,GAACgC,CAAC,CAACxJ,IAAF,CAAO,EAAP,CAAJ;AAAe;;AAAAN,UAAAA,KAAK,CAAC5H,KAAD,CAAL;;AAAa,iBAAO0P,GAAP;AAAW,SAAjlB;;AAAklB,qBAAa/V,WAAb,EAAyBqG,KAAzB,EAA+B;AAAC,cAAGA,KAAK,YAAY2R,WAApB,EAAgC;AAAC3R,YAAAA,KAAK,GAAC,IAAIzO,UAAJ,CAAeyO,KAAf,CAAN;AAA4B;;AAAA,cAAI9L,MAAJ;AAAW,cAAI0d,mBAAmB,GAAC,OAAO5R,KAAP,IAAc,QAAtC;;AAA+C,cAAG,EAAE4R,mBAAmB,IAAE5R,KAAK,YAAYzO,UAAtC,IAAkDyO,KAAK,YAAY6R,iBAAnE,IAAsF7R,KAAK,YAAY1M,SAAzG,CAAH,EAAuH;AAAC+K,YAAAA,iBAAiB,CAAC,uCAAD,CAAjB;AAA2D;;AAAA,cAAG+S,eAAe,IAAEQ,mBAApB,EAAwC;AAAC1d,YAAAA,MAAM,GAACkc,eAAe,CAACpQ,KAAD,CAAtB;AAA8B,WAAvE,MAA2E;AAAC9L,YAAAA,MAAM,GAAC8L,KAAK,CAAC9L,MAAb;AAAoB;;AAAA,cAAI0U,IAAI,GAACkJ,OAAO,CAAC,IAAE5d,MAAF,GAAS,CAAV,CAAhB;;AAA6B,cAAIgE,GAAG,GAAC0Q,IAAI,GAAC,CAAb;AAAe5V,UAAAA,OAAO,CAAC4V,IAAI,IAAE,CAAP,CAAP,GAAiB1U,MAAjB;;AAAwB,cAAGkd,eAAe,IAAEQ,mBAApB,EAAwC;AAAC1B,YAAAA,YAAY,CAAClQ,KAAD,EAAO9H,GAAP,EAAWhE,MAAM,GAAC,CAAlB,CAAZ;AAAiC,WAA1E,MAA8E;AAAC,gBAAG0d,mBAAH,EAAuB;AAAC,mBAAI,IAAI9W,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB,EAAE4G,CAAvB,EAAyB;AAAC,oBAAIiX,QAAQ,GAAC/R,KAAK,CAAC8D,UAAN,CAAiBhJ,CAAjB,CAAb;;AAAiC,oBAAGiX,QAAQ,GAAC,GAAZ,EAAgB;AAACnK,kBAAAA,KAAK,CAAC1P,GAAD,CAAL;;AAAWmG,kBAAAA,iBAAiB,CAAC,wDAAD,CAAjB;AAA4E;;AAAAzL,gBAAAA,MAAM,CAACsF,GAAG,GAAC4C,CAAL,CAAN,GAAciX,QAAd;AAAuB;AAAC,aAAnN,MAAuN;AAAC,mBAAI,IAAIjX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB,EAAE4G,CAAvB,EAAyB;AAAClI,gBAAAA,MAAM,CAACsF,GAAG,GAAC4C,CAAL,CAAN,GAAckF,KAAK,CAAClF,CAAD,CAAnB;AAAuB;AAAC;AAAC;;AAAA,cAAGnB,WAAW,KAAG,IAAjB,EAAsB;AAACA,YAAAA,WAAW,CAAC0B,IAAZ,CAAiBuM,KAAjB,EAAuBgB,IAAvB;AAA6B;;AAAA,iBAAOA,IAAP;AAAY,SAA19C;;AAA29C,0BAAiB/L,mBAA5+C;AAAggD,gCAAuB8I,WAAvhD;;AAAmiD7I,QAAAA,kBAAkB,CAAC5E,GAAD,EAAK;AAAC0P,UAAAA,KAAK,CAAC1P,GAAD,CAAL;AAAW;;AAAtkD,OAAT,CAAZ;AAA8lD,KAArtD;;AAAstD,QAAI8Z,YAAY,GAAC,OAAOzB,WAAP,IAAoB,WAApB,GAAgC,IAAIA,WAAJ,CAAgB,UAAhB,CAAhC,GAA4DrhB,SAA7E;;AAAuF,QAAI+iB,aAAa,GAAC,CAAC/Z,GAAD,EAAKyY,cAAL,KAAsB;AAAC,UAAIC,MAAM,GAAC1Y,GAAX;AAAe,UAAIwY,GAAG,GAACE,MAAM,IAAE,CAAhB;AAAkB,UAAIsB,MAAM,GAACxB,GAAG,GAACC,cAAc,GAAC,CAA9B;;AAAgC,aAAM,EAAED,GAAG,IAAEwB,MAAP,KAAgBpf,OAAO,CAAC4d,GAAD,CAA7B,EAAmC,EAAEA,GAAF;;AAAME,MAAAA,MAAM,GAACF,GAAG,IAAE,CAAZ;AAAc,UAAGE,MAAM,GAAC1Y,GAAP,GAAW,EAAX,IAAe8Z,YAAlB,EAA+B,OAAOA,YAAY,CAACnB,MAAb,CAAoBje,MAAM,CAACke,QAAP,CAAgB5Y,GAAhB,EAAoB0Y,MAApB,CAApB,CAAP;AAAwD,UAAIlB,GAAG,GAAC,EAAR;;AAAW,WAAI,IAAI5U,CAAC,GAAC,CAAV,EAAY,EAAEA,CAAC,IAAE6V,cAAc,GAAC,CAApB,CAAZ,EAAmC,EAAE7V,CAArC,EAAuC;AAAC,YAAIqX,QAAQ,GAACtf,MAAM,CAACqF,GAAG,GAAC4C,CAAC,GAAC,CAAN,IAAS,CAAV,CAAnB;AAAgC,YAAGqX,QAAQ,IAAE,CAAb,EAAe;AAAMzC,QAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoBoU,QAApB,CAAL;AAAmC;;AAAA,aAAOzC,GAAP;AAAW,KAA9Y;;AAA+Y,QAAI0C,aAAa,GAAC,CAAC1C,GAAD,EAAKS,MAAL,EAAYN,eAAZ,KAA8B;AAAC,UAAGA,eAAe,KAAG3gB,SAArB,EAA+B;AAAC2gB,QAAAA,eAAe,GAAC,UAAhB;AAA2B;;AAAA,UAAGA,eAAe,GAAC,CAAnB,EAAqB,OAAO,CAAP;AAASA,MAAAA,eAAe,IAAE,CAAjB;AAAmB,UAAIwC,QAAQ,GAAClC,MAAb;AAAoB,UAAImC,eAAe,GAACzC,eAAe,GAACH,GAAG,CAACxb,MAAJ,GAAW,CAA3B,GAA6B2b,eAAe,GAAC,CAA7C,GAA+CH,GAAG,CAACxb,MAAvE;;AAA8E,WAAI,IAAI4G,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwX,eAAd,EAA8B,EAAExX,CAAhC,EAAkC;AAAC,YAAIqX,QAAQ,GAACzC,GAAG,CAAC5L,UAAJ,CAAehJ,CAAf,CAAb;AAA+BjI,QAAAA,MAAM,CAACsd,MAAM,IAAE,CAAT,CAAN,GAAkBgC,QAAlB;AAA2BhC,QAAAA,MAAM,IAAE,CAAR;AAAU;;AAAAtd,MAAAA,MAAM,CAACsd,MAAM,IAAE,CAAT,CAAN,GAAkB,CAAlB;AAAoB,aAAOA,MAAM,GAACkC,QAAd;AAAuB,KAAjZ;;AAAkZ,QAAIE,gBAAgB,GAAC7C,GAAG,IAAEA,GAAG,CAACxb,MAAJ,GAAW,CAArC;;AAAuC,QAAIse,aAAa,GAAC,CAACta,GAAD,EAAKyY,cAAL,KAAsB;AAAC,UAAI7V,CAAC,GAAC,CAAN;AAAQ,UAAI4U,GAAG,GAAC,EAAR;;AAAW,aAAM,EAAE5U,CAAC,IAAE6V,cAAc,GAAC,CAApB,CAAN,EAA6B;AAAC,YAAI8B,KAAK,GAAC1f,MAAM,CAACmF,GAAG,GAAC4C,CAAC,GAAC,CAAN,IAAS,CAAV,CAAhB;AAA6B,YAAG2X,KAAK,IAAE,CAAV,EAAY;AAAM,UAAE3X,CAAF;;AAAI,YAAG2X,KAAK,IAAE,KAAV,EAAgB;AAAC,cAAIxB,EAAE,GAACwB,KAAK,GAAC,KAAb;AAAmB/C,UAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoB,QAAMkT,EAAE,IAAE,EAA9B,EAAiC,QAAMA,EAAE,GAAC,IAA1C,CAAL;AAAqD,SAAzF,MAA6F;AAACvB,UAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoB0U,KAApB,CAAL;AAAgC;AAAC;;AAAA,aAAO/C,GAAP;AAAW,KAAvR;;AAAwR,QAAIgD,aAAa,GAAC,CAAChD,GAAD,EAAKS,MAAL,EAAYN,eAAZ,KAA8B;AAAC,UAAGA,eAAe,KAAG3gB,SAArB,EAA+B;AAAC2gB,QAAAA,eAAe,GAAC,UAAhB;AAA2B;;AAAA,UAAGA,eAAe,GAAC,CAAnB,EAAqB,OAAO,CAAP;AAAS,UAAIwC,QAAQ,GAAClC,MAAb;AAAoB,UAAIS,MAAM,GAACyB,QAAQ,GAACxC,eAAT,GAAyB,CAApC;;AAAsC,WAAI,IAAI/U,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4U,GAAG,CAACxb,MAAlB,EAAyB,EAAE4G,CAA3B,EAA6B;AAAC,YAAIqX,QAAQ,GAACzC,GAAG,CAAC5L,UAAJ,CAAehJ,CAAf,CAAb;;AAA+B,YAAGqX,QAAQ,IAAE,KAAV,IAAiBA,QAAQ,IAAE,KAA9B,EAAoC;AAAC,cAAIQ,cAAc,GAACjD,GAAG,CAAC5L,UAAJ,CAAe,EAAEhJ,CAAjB,CAAnB;AAAuCqX,UAAAA,QAAQ,GAAC,SAAO,CAACA,QAAQ,GAAC,IAAV,KAAiB,EAAxB,IAA4BQ,cAAc,GAAC,IAApD;AAAyD;;AAAA5f,QAAAA,MAAM,CAACod,MAAM,IAAE,CAAT,CAAN,GAAkBgC,QAAlB;AAA2BhC,QAAAA,MAAM,IAAE,CAAR;AAAU,YAAGA,MAAM,GAAC,CAAP,GAASS,MAAZ,EAAmB;AAAM;;AAAA7d,MAAAA,MAAM,CAACod,MAAM,IAAE,CAAT,CAAN,GAAkB,CAAlB;AAAoB,aAAOA,MAAM,GAACkC,QAAd;AAAuB,KAA/e;;AAAgf,QAAIO,gBAAgB,GAAClD,GAAG,IAAE;AAAC,UAAIW,GAAG,GAAC,CAAR;;AAAU,WAAI,IAAIvV,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4U,GAAG,CAACxb,MAAlB,EAAyB,EAAE4G,CAA3B,EAA6B;AAAC,YAAIqX,QAAQ,GAACzC,GAAG,CAAC5L,UAAJ,CAAehJ,CAAf,CAAb;AAA+B,YAAGqX,QAAQ,IAAE,KAAV,IAAiBA,QAAQ,IAAE,KAA9B,EAAoC,EAAErX,CAAF;AAAIuV,QAAAA,GAAG,IAAE,CAAL;AAAO;;AAAA,aAAOA,GAAP;AAAW,KAA5J;;AAA6J,QAAIwC,6BAA6B,GAAC,CAACtU,OAAD,EAASuU,QAAT,EAAkBpW,IAAlB,KAAyB;AAACA,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B,UAAIqW,YAAJ,EAAiBC,YAAjB,EAA8BC,OAA9B,EAAsCC,cAAtC,EAAqD9e,KAArD;;AAA2D,UAAG0e,QAAQ,KAAG,CAAd,EAAgB;AAACC,QAAAA,YAAY,GAACd,aAAb;AAA2Be,QAAAA,YAAY,GAACZ,aAAb;AAA2Bc,QAAAA,cAAc,GAACX,gBAAf;;AAAgCU,QAAAA,OAAO,GAAC,MAAIngB,OAAZ;;AAAoBsB,QAAAA,KAAK,GAAC,CAAN;AAAQ,OAAnI,MAAwI,IAAG0e,QAAQ,KAAG,CAAd,EAAgB;AAACC,QAAAA,YAAY,GAACP,aAAb;AAA2BQ,QAAAA,YAAY,GAACN,aAAb;AAA2BQ,QAAAA,cAAc,GAACN,gBAAf;;AAAgCK,QAAAA,OAAO,GAAC,MAAIjgB,OAAZ;;AAAoBoB,QAAAA,KAAK,GAAC,CAAN;AAAQ;;AAAA2G,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAAC7B,QAAAA,IAAI,EAACA,IAAN;AAAW,wBAAesD,KAAK,IAAE;AAAC,cAAI9L,MAAM,GAAClB,OAAO,CAACgN,KAAK,IAAE,CAAR,CAAlB;AAA6B,cAAImT,IAAI,GAACF,OAAO,EAAhB;AAAmB,cAAIvD,GAAJ;AAAQ,cAAI4B,cAAc,GAACtR,KAAK,GAAC,CAAzB;;AAA2B,eAAI,IAAIlF,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE5G,MAAf,EAAsB,EAAE4G,CAAxB,EAA0B;AAAC,gBAAIyW,cAAc,GAACvR,KAAK,GAAC,CAAN,GAAQlF,CAAC,GAACgY,QAA7B;;AAAsC,gBAAGhY,CAAC,IAAE5G,MAAH,IAAWif,IAAI,CAAC5B,cAAc,IAAEnd,KAAjB,CAAJ,IAA6B,CAA3C,EAA6C;AAAC,kBAAIgf,YAAY,GAAC7B,cAAc,GAACD,cAAhC;AAA+C,kBAAIG,aAAa,GAACsB,YAAY,CAACzB,cAAD,EAAgB8B,YAAhB,CAA9B;;AAA4D,kBAAG1D,GAAG,KAAGxgB,SAAT,EAAmB;AAACwgB,gBAAAA,GAAG,GAAC+B,aAAJ;AAAkB,eAAtC,MAA0C;AAAC/B,gBAAAA,GAAG,IAAE5R,MAAM,CAACC,YAAP,CAAoB,CAApB,CAAL;AAA4B2R,gBAAAA,GAAG,IAAE+B,aAAL;AAAmB;;AAAAH,cAAAA,cAAc,GAACC,cAAc,GAACuB,QAA9B;AAAuC;AAAC;;AAAAlL,UAAAA,KAAK,CAAC5H,KAAD,CAAL;;AAAa,iBAAO0P,GAAP;AAAW,SAAze;AAA0e,sBAAa,CAAC/V,WAAD,EAAaqG,KAAb,KAAqB;AAAC,cAAG,EAAE,OAAOA,KAAP,IAAc,QAAhB,CAAH,EAA6B;AAAC3B,YAAAA,iBAAiB,CAAE,6CAA4C3B,IAAK,EAAnD,CAAjB;AAAuE;;AAAA,cAAIxI,MAAM,GAACgf,cAAc,CAAClT,KAAD,CAAzB;;AAAiC,cAAI9H,GAAG,GAAC4Z,OAAO,CAAC,IAAE5d,MAAF,GAAS4e,QAAV,CAAf;;AAAmC9f,UAAAA,OAAO,CAACkF,GAAG,IAAE,CAAN,CAAP,GAAgBhE,MAAM,IAAEE,KAAxB;AAA8B4e,UAAAA,YAAY,CAAChT,KAAD,EAAO9H,GAAG,GAAC,CAAX,EAAahE,MAAM,GAAC4e,QAApB,CAAZ;;AAA0C,cAAGnZ,WAAW,KAAG,IAAjB,EAAsB;AAACA,YAAAA,WAAW,CAAC0B,IAAZ,CAAiBuM,KAAjB,EAAuB1P,GAAvB;AAA4B;;AAAA,iBAAOA,GAAP;AAAW,SAA5zB;AAA6zB,0BAAiB2E,mBAA90B;AAAk2B,gCAAuB/C,0BAAz3B;;AAAo5BgD,QAAAA,kBAAkB,CAAC5E,GAAD,EAAK;AAAC0P,UAAAA,KAAK,CAAC1P,GAAD,CAAL;AAAW;;AAAv7B,OAAT,CAAZ;AAA+8B,KAA72C;;AAA82C,QAAImb,6BAA6B,GAAC,CAAC9U,OAAD,EAAS7B,IAAT,EAAc4W,oBAAd,EAAmCrX,cAAnC,EAAkDyM,mBAAlD,EAAsExM,aAAtE,KAAsF;AAACzC,MAAAA,kBAAkB,CAAC8E,OAAD,CAAlB,GAA4B;AAAC7B,QAAAA,IAAI,EAACuB,gBAAgB,CAACvB,IAAD,CAAtB;AAA6BT,QAAAA,cAAc,EAAC4K,uBAAuB,CAACyM,oBAAD,EAAsBrX,cAAtB,CAAnE;AAAyGC,QAAAA,aAAa,EAAC2K,uBAAuB,CAAC6B,mBAAD,EAAqBxM,aAArB,CAA9I;AAAkLT,QAAAA,QAAQ,EAAC;AAA3L,OAA5B;AAA2N,KAApV;;AAAqV,QAAI8X,qCAAqC,GAAC,CAAChY,YAAD,EAAcO,gBAAd,EAA+BiQ,eAA/B,EAA+C5P,MAA/C,EAAsDC,aAAtD,EAAoEJ,kBAApE,EAAuFgQ,eAAvF,EAAuG3P,MAAvG,EAA8GC,aAA9G,KAA8H;AAAC7C,MAAAA,kBAAkB,CAAC8B,YAAD,CAAlB,CAAiCE,QAAjC,CAA0CJ,IAA1C,CAA+C;AAACS,QAAAA,gBAAgB,EAACA,gBAAlB;AAAmCK,QAAAA,MAAM,EAAC0K,uBAAuB,CAACkF,eAAD,EAAiB5P,MAAjB,CAAjE;AAA0FC,QAAAA,aAAa,EAACA,aAAxG;AAAsHJ,QAAAA,kBAAkB,EAACA,kBAAzI;AAA4JK,QAAAA,MAAM,EAACwK,uBAAuB,CAACmF,eAAD,EAAiB3P,MAAjB,CAA1L;AAAmNC,QAAAA,aAAa,EAACA;AAAjO,OAA/C;AAAgS,KAAzc;;AAA0c,QAAIkX,8BAA8B,GAAC,CAACjV,OAAD,EAAS7B,IAAT,EAAc4W,oBAAd,EAAmCrX,cAAnC,EAAkDyM,mBAAlD,EAAsExM,aAAtE,KAAsF;AAACa,MAAAA,mBAAmB,CAACwB,OAAD,CAAnB,GAA6B;AAAC7B,QAAAA,IAAI,EAACuB,gBAAgB,CAACvB,IAAD,CAAtB;AAA6BT,QAAAA,cAAc,EAAC4K,uBAAuB,CAACyM,oBAAD,EAAsBrX,cAAtB,CAAnE;AAAyGC,QAAAA,aAAa,EAAC2K,uBAAuB,CAAC6B,mBAAD,EAAqBxM,aAArB,CAA9I;AAAkLiB,QAAAA,MAAM,EAAC;AAAzL,OAA7B;AAA0N,KAApV;;AAAqV,QAAIsW,oCAAoC,GAAC,CAACxW,UAAD,EAAYK,SAAZ,EAAsBxB,gBAAtB,EAAuCiQ,eAAvC,EAAuD5P,MAAvD,EAA8DC,aAA9D,EAA4EJ,kBAA5E,EAA+FgQ,eAA/F,EAA+G3P,MAA/G,EAAsHC,aAAtH,KAAsI;AAACS,MAAAA,mBAAmB,CAACE,UAAD,CAAnB,CAAgCE,MAAhC,CAAuC9B,IAAvC,CAA4C;AAACiC,QAAAA,SAAS,EAACW,gBAAgB,CAACX,SAAD,CAA3B;AAAuCxB,QAAAA,gBAAgB,EAACA,gBAAxD;AAAyEK,QAAAA,MAAM,EAAC0K,uBAAuB,CAACkF,eAAD,EAAiB5P,MAAjB,CAAvG;AAAgIC,QAAAA,aAAa,EAACA,aAA9I;AAA4JJ,QAAAA,kBAAkB,EAACA,kBAA/K;AAAkMK,QAAAA,MAAM,EAACwK,uBAAuB,CAACmF,eAAD,EAAiB3P,MAAjB,CAAhO;AAAyPC,QAAAA,aAAa,EAACA;AAAvQ,OAA5C;AAAmU,KAAnf;;AAAof,QAAIoX,sBAAsB,GAAC,CAACnV,OAAD,EAAS7B,IAAT,KAAgB;AAACA,MAAAA,IAAI,GAACuB,gBAAgB,CAACvB,IAAD,CAArB;AAA4B3B,MAAAA,YAAY,CAACwD,OAAD,EAAS;AAACoV,QAAAA,MAAM,EAAC,IAAR;AAAajX,QAAAA,IAAI,EAACA,IAAlB;AAAuB,0BAAiB,CAAxC;AAA0C,wBAAe,MAAIxN,SAA7D;AAAuE,sBAAa,CAACyK,WAAD,EAAa8C,CAAb,KAAiBvN;AAArG,OAAT,CAAZ;AAAsI,KAA9M;;AAA+M,QAAI0kB,cAAc,GAACnU,MAAM,IAAE;AAAC,UAAGA,MAAM,GAAC,CAAV,EAAY;AAACqN,QAAAA,aAAa,CAACvG,GAAd,CAAkB9G,MAAlB,EAA0BwN,QAA1B,IAAoC,CAApC;AAAsC;AAAC,KAAhF;;AAAiF,QAAI4G,kBAAkB,GAAC,CAACzb,IAAD,EAAM0b,GAAN,KAAY;AAAC1b,MAAAA,IAAI,GAACyV,qBAAqB,CAACzV,IAAD,EAAM,mBAAN,CAA1B;AAAqD,UAAIiU,CAAC,GAACjU,IAAI,CAAC,sBAAD,CAAJ,CAA6B0b,GAA7B,CAAN;AAAwC,aAAOtO,KAAK,CAACC,QAAN,CAAe4G,CAAf,CAAP;AAAyB,KAA1J;;AAA2J,QAAI0H,MAAM,GAAC,MAAI;AAAC3hB,MAAAA,KAAK,CAAC,EAAD,CAAL;AAAU,KAA1B;;AAA2B,QAAI4hB,qBAAqB,GAAC,CAACC,IAAD,EAAMhlB,GAAN,EAAUilB,GAAV,KAAgBthB,MAAM,CAACuhB,UAAP,CAAkBF,IAAlB,EAAuBhlB,GAAvB,EAA2BA,GAAG,GAACilB,GAA/B,CAA1C;;AAA8E,QAAIE,UAAU,GAAC,MAAI,UAAnB;;AAA8B,QAAIC,UAAU,GAAC5W,IAAI,IAAE;AAAC,UAAIrK,CAAC,GAACf,UAAU,CAACgB,MAAjB;AAAwB,UAAIihB,KAAK,GAAC,CAAC7W,IAAI,GAACrK,CAAC,CAACmhB,UAAP,GAAkB,KAAnB,IAA0B,KAApC;;AAA0C,UAAG;AAACliB,QAAAA,UAAU,CAACmiB,IAAX,CAAgBF,KAAhB;AAAuBnhB,QAAAA,iBAAiB;AAAG,eAAO,CAAP;AAAS,OAAxD,CAAwD,OAAMwC,CAAN,EAAQ,CAAE;AAAC,KAA3J;;AAA4J,QAAI8e,uBAAuB,GAACC,aAAa,IAAE;AAAC,UAAIC,OAAO,GAAC/hB,MAAM,CAACsB,MAAnB;AAA0BwgB,MAAAA,aAAa,MAAI,CAAjB;AAAmB,UAAIE,WAAW,GAACR,UAAU,EAA1B;;AAA6B,UAAGM,aAAa,GAACE,WAAjB,EAA6B;AAAC,eAAO,KAAP;AAAa;;AAAA,UAAIC,OAAO,GAAC,CAACC,CAAD,EAAGC,QAAH,KAAcD,CAAC,GAAC,CAACC,QAAQ,GAACD,CAAC,GAACC,QAAZ,IAAsBA,QAAlD;;AAA2D,WAAI,IAAIC,OAAO,GAAC,CAAhB,EAAkBA,OAAO,IAAE,CAA3B,EAA6BA,OAAO,IAAE,CAAtC,EAAwC;AAAC,YAAIC,iBAAiB,GAACN,OAAO,IAAE,IAAE,KAAGK,OAAP,CAA7B;AAA6CC,QAAAA,iBAAiB,GAACC,IAAI,CAACC,GAAL,CAASF,iBAAT,EAA2BP,aAAa,GAAC,SAAzC,CAAlB;AAAsE,YAAIU,OAAO,GAACF,IAAI,CAACC,GAAL,CAASP,WAAT,EAAqBC,OAAO,CAACK,IAAI,CAACG,GAAL,CAASX,aAAT,EAAuBO,iBAAvB,CAAD,EAA2C,KAA3C,CAA5B,CAAZ;AAA2F,YAAIK,WAAW,GAACjB,UAAU,CAACe,OAAD,CAA1B;;AAAoC,YAAGE,WAAH,EAAe;AAAC,iBAAO,IAAP;AAAY;AAAC;;AAAA,aAAO,KAAP;AAAa,KAAjiB;;AAAkiB,QAAIC,GAAG,GAAC,EAAR;;AAAW,QAAIC,iBAAiB,GAAC,MAAI3lB,WAAW,IAAE,gBAAvC;;AAAwD,QAAI4lB,aAAa,GAAC,MAAI;AAAC,UAAG,CAACA,aAAa,CAACC,OAAlB,EAA0B;AAAC,YAAIC,IAAI,GAAC,CAAC,OAAOC,SAAP,IAAkB,QAAlB,IAA4BA,SAAS,CAACC,SAAtC,IAAiDD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAjD,IAAyE,GAA1E,EAA+E/kB,OAA/E,CAAuF,GAAvF,EAA2F,GAA3F,IAAgG,QAAzG;AAAkH,YAAIglB,GAAG,GAAC;AAAC,kBAAO,UAAR;AAAmB,qBAAU,UAA7B;AAAwC,kBAAO,GAA/C;AAAmD,iBAAM,GAAzD;AAA6D,kBAAO,gBAApE;AAAqF,kBAAOH,IAA5F;AAAiG,eAAIH,iBAAiB;AAAtH,SAAR;;AAAkI,aAAI,IAAIV,CAAR,IAAaS,GAAb,EAAiB;AAAC,cAAGA,GAAG,CAACT,CAAD,CAAH,KAAS5lB,SAAZ,EAAsB,OAAO4mB,GAAG,CAAChB,CAAD,CAAV,CAAtB,KAAyCgB,GAAG,CAAChB,CAAD,CAAH,GAAOS,GAAG,CAACT,CAAD,CAAV;AAAc;;AAAA,YAAIY,OAAO,GAAC,EAAZ;;AAAe,aAAI,IAAIZ,CAAR,IAAagB,GAAb,EAAiB;AAACJ,UAAAA,OAAO,CAACra,IAAR,CAAc,GAAEyZ,CAAE,IAAGgB,GAAG,CAAChB,CAAD,CAAI,EAA5B;AAA+B;;AAAAW,QAAAA,aAAa,CAACC,OAAd,GAAsBA,OAAtB;AAA8B;;AAAA,aAAOD,aAAa,CAACC,OAArB;AAA6B,KAA1e;;AAA2e,QAAIK,aAAa,GAAC,CAACrG,GAAD,EAAKrc,MAAL,KAAc;AAAC,WAAI,IAAIyH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4U,GAAG,CAACxb,MAAlB,EAAyB,EAAE4G,CAA3B,EAA6B;AAACnI,QAAAA,KAAK,CAACU,MAAM,MAAI,CAAX,CAAL,GAAmBqc,GAAG,CAAC5L,UAAJ,CAAehJ,CAAf,CAAnB;AAAqC;;AAAAnI,MAAAA,KAAK,CAACU,MAAM,IAAE,CAAT,CAAL,GAAiB,CAAjB;AAAmB,KAAvH;;AAAwH,QAAI2iB,IAAI,GAAC;AAACC,MAAAA,KAAK,EAAC5lB,IAAI,IAAEA,IAAI,CAAC6lB,MAAL,CAAY,CAAZ,MAAiB,GAA9B;AAAkCC,MAAAA,SAAS,EAACpgB,QAAQ,IAAE;AAAC,YAAIqgB,WAAW,GAAC,+DAAhB;AAAgF,eAAOA,WAAW,CAACC,IAAZ,CAAiBtgB,QAAjB,EAA2B2Y,KAA3B,CAAiC,CAAjC,CAAP;AAA2C,OAAlL;AAAmL4H,MAAAA,cAAc,EAAC,CAACC,KAAD,EAAOC,cAAP,KAAwB;AAAC,YAAIC,EAAE,GAAC,CAAP;;AAAS,aAAI,IAAI3b,CAAC,GAACyb,KAAK,CAACriB,MAAN,GAAa,CAAvB,EAAyB4G,CAAC,IAAE,CAA5B,EAA8BA,CAAC,EAA/B,EAAkC;AAAC,cAAI4b,IAAI,GAACH,KAAK,CAACzb,CAAD,CAAd;;AAAkB,cAAG4b,IAAI,KAAG,GAAV,EAAc;AAACH,YAAAA,KAAK,CAACtL,MAAN,CAAanQ,CAAb,EAAe,CAAf;AAAkB,WAAjC,MAAsC,IAAG4b,IAAI,KAAG,IAAV,EAAe;AAACH,YAAAA,KAAK,CAACtL,MAAN,CAAanQ,CAAb,EAAe,CAAf;AAAkB2b,YAAAA,EAAE;AAAG,WAAvC,MAA4C,IAAGA,EAAH,EAAM;AAACF,YAAAA,KAAK,CAACtL,MAAN,CAAanQ,CAAb,EAAe,CAAf;AAAkB2b,YAAAA,EAAE;AAAG;AAAC;;AAAA,YAAGD,cAAH,EAAkB;AAAC,iBAAKC,EAAL,EAAQA,EAAE,EAAV,EAAa;AAACF,YAAAA,KAAK,CAACxhB,OAAN,CAAc,IAAd;AAAoB;AAAC;;AAAA,eAAOwhB,KAAP;AAAa,OAA7c;AAA8cI,MAAAA,SAAS,EAACtmB,IAAI,IAAE;AAAC,YAAIumB,UAAU,GAACZ,IAAI,CAACC,KAAL,CAAW5lB,IAAX,CAAf;AAAA,YAAgCwmB,aAAa,GAACxmB,IAAI,CAACQ,MAAL,CAAY,CAAC,CAAb,MAAkB,GAAhE;AAAoER,QAAAA,IAAI,GAAC2lB,IAAI,CAACM,cAAL,CAAoBjmB,IAAI,CAACymB,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuBC,CAAC,IAAE,CAAC,CAACA,CAA5B,CAApB,EAAmD,CAACJ,UAApD,EAAgE1O,IAAhE,CAAqE,GAArE,CAAL;;AAA+E,YAAG,CAAC7X,IAAD,IAAO,CAACumB,UAAX,EAAsB;AAACvmB,UAAAA,IAAI,GAAC,GAAL;AAAS;;AAAA,YAAGA,IAAI,IAAEwmB,aAAT,EAAuB;AAACxmB,UAAAA,IAAI,IAAE,GAAN;AAAU;;AAAA,eAAM,CAACumB,UAAU,GAAC,GAAD,GAAK,EAAhB,IAAoBvmB,IAA1B;AAA+B,OAAntB;AAAotB4mB,MAAAA,OAAO,EAAC5mB,IAAI,IAAE;AAAC,YAAI8G,MAAM,GAAC6e,IAAI,CAACG,SAAL,CAAe9lB,IAAf,CAAX;AAAA,YAAgC6mB,IAAI,GAAC/f,MAAM,CAAC,CAAD,CAA3C;AAAA,YAA+CggB,GAAG,GAAChgB,MAAM,CAAC,CAAD,CAAzD;;AAA6D,YAAG,CAAC+f,IAAD,IAAO,CAACC,GAAX,EAAe;AAAC,iBAAM,GAAN;AAAU;;AAAA,YAAGA,GAAH,EAAO;AAACA,UAAAA,GAAG,GAACA,GAAG,CAACtmB,MAAJ,CAAW,CAAX,EAAasmB,GAAG,CAACjjB,MAAJ,GAAW,CAAxB,CAAJ;AAA+B;;AAAA,eAAOgjB,IAAI,GAACC,GAAZ;AAAgB,OAAj3B;AAAk3BC,MAAAA,QAAQ,EAAC/mB,IAAI,IAAE;AAAC,YAAGA,IAAI,KAAG,GAAV,EAAc,OAAM,GAAN;AAAUA,QAAAA,IAAI,GAAC2lB,IAAI,CAACW,SAAL,CAAetmB,IAAf,CAAL;AAA0BA,QAAAA,IAAI,GAACA,IAAI,CAACS,OAAL,CAAa,KAAb,EAAmB,EAAnB,CAAL;AAA4B,YAAIumB,SAAS,GAAChnB,IAAI,CAACU,WAAL,CAAiB,GAAjB,CAAd;AAAoC,YAAGsmB,SAAS,KAAG,CAAC,CAAhB,EAAkB,OAAOhnB,IAAP;AAAY,eAAOA,IAAI,CAACQ,MAAL,CAAYwmB,SAAS,GAAC,CAAtB,CAAP;AAAgC,OAAljC;AAAmjCnP,MAAAA,IAAI,EAAC,YAAU;AAAC,YAAIoP,KAAK,GAACtc,KAAK,CAACwG,SAAN,CAAgBkN,KAAhB,CAAsBlM,IAAtB,CAA2B0B,SAA3B,CAAV;AAAgD,eAAO8R,IAAI,CAACW,SAAL,CAAeW,KAAK,CAACpP,IAAN,CAAW,GAAX,CAAf,CAAP;AAAuC,OAA1pC;AAA2pCqP,MAAAA,KAAK,EAAC,CAACC,CAAD,EAAG9N,CAAH,KAAOsM,IAAI,CAACW,SAAL,CAAea,CAAC,GAAC,GAAF,GAAM9N,CAArB;AAAxqC,KAAT;;AAA0sC,QAAI+N,cAAc,GAAC,MAAI;AAAC,UAAG,OAAOC,MAAP,IAAe,QAAf,IAAyB,OAAOA,MAAM,CAAC,iBAAD,CAAb,IAAkC,UAA9D,EAAyE;AAAC,eAAOC,IAAI,IAAED,MAAM,CAACE,eAAP,CAAuBD,IAAvB,CAAb;AAA0C,OAApH,MAAyHvlB,KAAK,CAAC,kBAAD,CAAL;AAA0B,KAA3K;;AAA4K,QAAIylB,UAAU,GAACF,IAAI,IAAE,CAACE,UAAU,GAACJ,cAAc,EAA1B,EAA8BE,IAA9B,CAArB;;AAAyD,QAAIG,OAAO,GAAC;AAACvoB,MAAAA,OAAO,EAAC,YAAU;AAAC,YAAIwoB,YAAY,GAAC,EAAjB;AAAA,YAAoBC,gBAAgB,GAAC,KAArC;;AAA2C,aAAI,IAAIld,CAAC,GAACoJ,SAAS,CAAChQ,MAAV,GAAiB,CAA3B,EAA6B4G,CAAC,IAAE,CAAC,CAAJ,IAAO,CAACkd,gBAArC,EAAsDld,CAAC,EAAvD,EAA0D;AAAC,cAAIzK,IAAI,GAACyK,CAAC,IAAE,CAAH,GAAKoJ,SAAS,CAACpJ,CAAD,CAAd,GAAkBvG,EAAE,CAAC0jB,GAAH,EAA3B;;AAAoC,cAAG,OAAO5nB,IAAP,IAAa,QAAhB,EAAyB;AAAC,kBAAM,IAAIuM,SAAJ,CAAc,2CAAd,CAAN;AAAiE,WAA3F,MAAgG,IAAG,CAACvM,IAAJ,EAAS;AAAC,mBAAM,EAAN;AAAS;;AAAA0nB,UAAAA,YAAY,GAAC1nB,IAAI,GAAC,GAAL,GAAS0nB,YAAtB;AAAmCC,UAAAA,gBAAgB,GAAChC,IAAI,CAACC,KAAL,CAAW5lB,IAAX,CAAjB;AAAkC;;AAAA0nB,QAAAA,YAAY,GAAC/B,IAAI,CAACM,cAAL,CAAoByB,YAAY,CAACjB,KAAb,CAAmB,GAAnB,EAAwBC,MAAxB,CAA+BC,CAAC,IAAE,CAAC,CAACA,CAApC,CAApB,EAA2D,CAACgB,gBAA5D,EAA8E9P,IAA9E,CAAmF,GAAnF,CAAb;AAAqG,eAAM,CAAC8P,gBAAgB,GAAC,GAAD,GAAK,EAAtB,IAA0BD,YAA1B,IAAwC,GAA9C;AAAkD,OAA7e;AAA8eG,MAAAA,QAAQ,EAAC,CAACC,IAAD,EAAMC,EAAN,KAAW;AAACD,QAAAA,IAAI,GAACL,OAAO,CAACvoB,OAAR,CAAgB4oB,IAAhB,EAAsBtnB,MAAtB,CAA6B,CAA7B,CAAL;AAAqCunB,QAAAA,EAAE,GAACN,OAAO,CAACvoB,OAAR,CAAgB6oB,EAAhB,EAAoBvnB,MAApB,CAA2B,CAA3B,CAAH;;AAAiC,iBAASwnB,IAAT,CAAcC,GAAd,EAAkB;AAAC,cAAIC,KAAK,GAAC,CAAV;;AAAY,iBAAKA,KAAK,GAACD,GAAG,CAACpkB,MAAf,EAAsBqkB,KAAK,EAA3B,EAA8B;AAAC,gBAAGD,GAAG,CAACC,KAAD,CAAH,KAAa,EAAhB,EAAmB;AAAM;;AAAA,cAAIC,GAAG,GAACF,GAAG,CAACpkB,MAAJ,GAAW,CAAnB;;AAAqB,iBAAKskB,GAAG,IAAE,CAAV,EAAYA,GAAG,EAAf,EAAkB;AAAC,gBAAGF,GAAG,CAACE,GAAD,CAAH,KAAW,EAAd,EAAiB;AAAM;;AAAA,cAAGD,KAAK,GAACC,GAAT,EAAa,OAAM,EAAN;AAAS,iBAAOF,GAAG,CAAC5J,KAAJ,CAAU6J,KAAV,EAAgBC,GAAG,GAACD,KAAJ,GAAU,CAA1B,CAAP;AAAoC;;AAAA,YAAIE,SAAS,GAACJ,IAAI,CAACF,IAAI,CAACrB,KAAL,CAAW,GAAX,CAAD,CAAlB;AAAoC,YAAI4B,OAAO,GAACL,IAAI,CAACD,EAAE,CAACtB,KAAH,CAAS,GAAT,CAAD,CAAhB;AAAgC,YAAI5iB,MAAM,GAACghB,IAAI,CAACC,GAAL,CAASsD,SAAS,CAACvkB,MAAnB,EAA0BwkB,OAAO,CAACxkB,MAAlC,CAAX;AAAqD,YAAIykB,eAAe,GAACzkB,MAApB;;AAA2B,aAAI,IAAI4G,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB4G,CAAC,EAAtB,EAAyB;AAAC,cAAG2d,SAAS,CAAC3d,CAAD,CAAT,KAAe4d,OAAO,CAAC5d,CAAD,CAAzB,EAA6B;AAAC6d,YAAAA,eAAe,GAAC7d,CAAhB;AAAkB;AAAM;AAAC;;AAAA,YAAI8d,WAAW,GAAC,EAAhB;;AAAmB,aAAI,IAAI9d,CAAC,GAAC6d,eAAV,EAA0B7d,CAAC,GAAC2d,SAAS,CAACvkB,MAAtC,EAA6C4G,CAAC,EAA9C,EAAiD;AAAC8d,UAAAA,WAAW,CAACvd,IAAZ,CAAiB,IAAjB;AAAuB;;AAAAud,QAAAA,WAAW,GAACA,WAAW,CAAC7c,MAAZ,CAAmB2c,OAAO,CAAChK,KAAR,CAAciK,eAAd,CAAnB,CAAZ;AAA+D,eAAOC,WAAW,CAAC1Q,IAAZ,CAAiB,GAAjB,CAAP;AAA6B;AAAtrC,KAAZ;AAAosC,QAAI2Q,uBAAuB,GAAC,EAA5B;;AAA+B,aAASC,kBAAT,CAA4BC,OAA5B,EAAoCC,WAApC,EAAgD9kB,MAAhD,EAAuD;AAAC,UAAImc,GAAG,GAACnc,MAAM,GAAC,CAAP,GAASA,MAAT,GAAgBkc,eAAe,CAAC2I,OAAD,CAAf,GAAyB,CAAjD;AAAmD,UAAIE,OAAO,GAAC,IAAIje,KAAJ,CAAUqV,GAAV,CAAZ;AAA2B,UAAI6I,eAAe,GAACzJ,iBAAiB,CAACsJ,OAAD,EAASE,OAAT,EAAiB,CAAjB,EAAmBA,OAAO,CAAC/kB,MAA3B,CAArC;AAAwE,UAAG8kB,WAAH,EAAeC,OAAO,CAAC/kB,MAAR,GAAeglB,eAAf;AAA+B,aAAOD,OAAP;AAAe;;AAAA,QAAIE,gBAAgB,GAAC,MAAI;AAAC,UAAG,CAACN,uBAAuB,CAAC3kB,MAA5B,EAAmC;AAAC,YAAIiD,MAAM,GAAC,IAAX;;AAAgB,YAAG,OAAOiiB,MAAP,IAAe,WAAf,IAA4B,OAAOA,MAAM,CAACC,MAAd,IAAsB,UAArD,EAAgE;AAACliB,UAAAA,MAAM,GAACiiB,MAAM,CAACC,MAAP,CAAc,SAAd,CAAP;;AAAgC,cAAGliB,MAAM,KAAG,IAAZ,EAAiB;AAACA,YAAAA,MAAM,IAAE,IAAR;AAAa;AAAC,SAAjI,MAAsI,IAAG,OAAOmiB,QAAP,IAAiB,UAApB,EAA+B;AAACniB,UAAAA,MAAM,GAACmiB,QAAQ,EAAf;;AAAkB,cAAGniB,MAAM,KAAG,IAAZ,EAAiB;AAACA,YAAAA,MAAM,IAAE,IAAR;AAAa;AAAC;;AAAA,YAAG,CAACA,MAAJ,EAAW;AAAC,iBAAO,IAAP;AAAY;;AAAA0hB,QAAAA,uBAAuB,GAACC,kBAAkB,CAAC3hB,MAAD,EAAQ,IAAR,CAA1C;AAAwD;;AAAA,aAAO0hB,uBAAuB,CAACzkB,KAAxB,EAAP;AAAuC,KAA7Z;;AAA8Z,QAAIO,GAAG,GAAC;AAAC4kB,MAAAA,IAAI,EAAC,EAAN;;AAAS/kB,MAAAA,IAAI,GAAE,CAAE,CAAjB;;AAAkBglB,MAAAA,QAAQ,GAAE,CAAE,CAA9B;;AAA+BzW,MAAAA,QAAQ,CAAC0W,GAAD,EAAKC,GAAL,EAAS;AAAC/kB,QAAAA,GAAG,CAAC4kB,IAAJ,CAASE,GAAT,IAAc;AAACE,UAAAA,KAAK,EAAC,EAAP;AAAUC,UAAAA,MAAM,EAAC,EAAjB;AAAoBF,UAAAA,GAAG,EAACA;AAAxB,SAAd;AAA2CnlB,QAAAA,EAAE,CAACslB,cAAH,CAAkBJ,GAAlB,EAAsB9kB,GAAG,CAACmlB,UAA1B;AAAsC,OAAlI;;AAAmIA,MAAAA,UAAU,EAAC;AAAC3oB,QAAAA,IAAI,CAAC4oB,MAAD,EAAQ;AAAC,cAAIC,GAAG,GAACrlB,GAAG,CAAC4kB,IAAJ,CAASQ,MAAM,CAACE,IAAP,CAAYC,IAArB,CAAR;;AAAmC,cAAG,CAACF,GAAJ,EAAQ;AAAC,kBAAM,IAAIzlB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAJ,UAAAA,MAAM,CAACC,GAAP,GAAWA,GAAX;AAAeD,UAAAA,MAAM,CAACK,QAAP,GAAgB,KAAhB;AAAsB,SAA3H;;AAA4HC,QAAAA,KAAK,CAACN,MAAD,EAAQ;AAACA,UAAAA,MAAM,CAACC,GAAP,CAAWN,GAAX,CAAeY,KAAf,CAAqBP,MAAM,CAACC,GAA5B;AAAiC,SAA3K;;AAA4KM,QAAAA,KAAK,CAACP,MAAD,EAAQ;AAACA,UAAAA,MAAM,CAACC,GAAP,CAAWN,GAAX,CAAeY,KAAf,CAAqBP,MAAM,CAACC,GAA5B;AAAiC,SAA3N;;AAA4Nzd,QAAAA,IAAI,CAACwd,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BsmB,GAA7B,EAAiC;AAAC,cAAG,CAACT,MAAM,CAACC,GAAR,IAAa,CAACD,MAAM,CAACC,GAAP,CAAWN,GAAX,CAAee,QAAhC,EAAyC;AAAC,kBAAM,IAAIlmB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,cAAIO,SAAS,GAAC,CAAd;;AAAgB,eAAI,IAAI5f,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB4G,CAAC,EAAtB,EAAyB;AAAC,gBAAI3D,MAAJ;;AAAW,gBAAG;AAACA,cAAAA,MAAM,GAAC4iB,MAAM,CAACC,GAAP,CAAWN,GAAX,CAAee,QAAf,CAAwBV,MAAM,CAACC,GAA/B,CAAP;AAA2C,aAA/C,CAA+C,OAAMrkB,CAAN,EAAQ;AAAC,oBAAM,IAAIpB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,gBAAGhjB,MAAM,KAAGjI,SAAT,IAAoBwrB,SAAS,KAAG,CAAnC,EAAqC;AAAC,oBAAM,IAAInmB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,gBAAGhjB,MAAM,KAAG,IAAT,IAAeA,MAAM,KAAGjI,SAA3B,EAAqC;AAAMwrB,YAAAA,SAAS;AAAGrnB,YAAAA,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAN,GAAiB3D,MAAjB;AAAwB;;AAAA,cAAGujB,SAAH,EAAa;AAACX,YAAAA,MAAM,CAACE,IAAP,CAAYU,SAAZ,GAAsBC,IAAI,CAACC,GAAL,EAAtB;AAAiC;;AAAA,iBAAOH,SAAP;AAAiB,SAAjqB;;AAAkqBle,QAAAA,KAAK,CAACud,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BsmB,GAA7B,EAAiC;AAAC,cAAG,CAACT,MAAM,CAACC,GAAR,IAAa,CAACD,MAAM,CAACC,GAAP,CAAWN,GAAX,CAAeoB,QAAhC,EAAyC;AAAC,kBAAM,IAAIvmB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,cAAG;AAAC,iBAAI,IAAIrf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB4G,CAAC,EAAtB,EAAyB;AAACif,cAAAA,MAAM,CAACC,GAAP,CAAWN,GAAX,CAAeoB,QAAf,CAAwBf,MAAM,CAACC,GAA/B,EAAmC3mB,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAzC;AAAqD;AAAC,WAApF,CAAoF,OAAMnF,CAAN,EAAQ;AAAC,kBAAM,IAAIpB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,cAAGjmB,MAAH,EAAU;AAAC6lB,YAAAA,MAAM,CAACE,IAAP,CAAYU,SAAZ,GAAsBC,IAAI,CAACC,GAAL,EAAtB;AAAiC;;AAAA,iBAAO/f,CAAP;AAAS;;AAA77B,OAA9I;AAA6kCigB,MAAAA,eAAe,EAAC;AAACN,QAAAA,QAAQ,CAACT,GAAD,EAAK;AAAC,iBAAOb,gBAAgB,EAAvB;AAA0B,SAAzC;;AAA0C2B,QAAAA,QAAQ,CAACd,GAAD,EAAKgB,GAAL,EAAS;AAAC,cAAGA,GAAG,KAAG,IAAN,IAAYA,GAAG,KAAG,EAArB,EAAwB;AAACrpB,YAAAA,GAAG,CAAC6e,iBAAiB,CAACwJ,GAAG,CAACJ,MAAL,EAAY,CAAZ,CAAlB,CAAH;AAAqCI,YAAAA,GAAG,CAACJ,MAAJ,GAAW,EAAX;AAAc,WAA5E,MAAgF;AAAC,gBAAGoB,GAAG,IAAE,CAAR,EAAUhB,GAAG,CAACJ,MAAJ,CAAWve,IAAX,CAAgB2f,GAAhB;AAAqB;AAAC,SAA7K;;AAA8KV,QAAAA,KAAK,CAACN,GAAD,EAAK;AAAC,cAAGA,GAAG,CAACJ,MAAJ,IAAYI,GAAG,CAACJ,MAAJ,CAAW1lB,MAAX,GAAkB,CAAjC,EAAmC;AAACvC,YAAAA,GAAG,CAAC6e,iBAAiB,CAACwJ,GAAG,CAACJ,MAAL,EAAY,CAAZ,CAAlB,CAAH;AAAqCI,YAAAA,GAAG,CAACJ,MAAJ,GAAW,EAAX;AAAc;AAAC,SAAjR;;AAAkRqB,QAAAA,YAAY,CAACjB,GAAD,EAAK;AAAC,iBAAM;AAACkB,YAAAA,OAAO,EAAC,KAAT;AAAeC,YAAAA,OAAO,EAAC,CAAvB;AAAyBC,YAAAA,OAAO,EAAC,GAAjC;AAAqCC,YAAAA,OAAO,EAAC,KAA7C;AAAmDC,YAAAA,IAAI,EAAC,CAAC,CAAD,EAAG,EAAH,EAAM,GAAN,EAAU,EAAV,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,EAArB,EAAwB,EAAxB,EAA2B,EAA3B,EAA8B,CAA9B,EAAgC,EAAhC,EAAmC,EAAnC,EAAsC,EAAtC,EAAyC,EAAzC,EAA4C,CAA5C,EAA8C,CAA9C,EAAgD,CAAhD,EAAkD,CAAlD,EAAoD,CAApD,EAAsD,CAAtD,EAAwD,CAAxD,EAA0D,CAA1D,EAA4D,CAA5D,EAA8D,CAA9D,EAAgE,CAAhE,EAAkE,CAAlE,EAAoE,CAApE,EAAsE,CAAtE,EAAwE,CAAxE,EAA0E,CAA1E;AAAxD,WAAN;AAA4I,SAAhb;;AAAibC,QAAAA,YAAY,CAACvB,GAAD,EAAKwB,gBAAL,EAAsBhM,IAAtB,EAA2B;AAAC,iBAAO,CAAP;AAAS,SAAle;;AAAmeiM,QAAAA,gBAAgB,CAACzB,GAAD,EAAK;AAAC,iBAAM,CAAC,EAAD,EAAI,EAAJ,CAAN;AAAc;;AAAvgB,OAA7lC;AAAsmD0B,MAAAA,gBAAgB,EAAC;AAACZ,QAAAA,QAAQ,CAACd,GAAD,EAAKgB,GAAL,EAAS;AAAC,cAAGA,GAAG,KAAG,IAAN,IAAYA,GAAG,KAAG,EAArB,EAAwB;AAACjpB,YAAAA,GAAG,CAACye,iBAAiB,CAACwJ,GAAG,CAACJ,MAAL,EAAY,CAAZ,CAAlB,CAAH;AAAqCI,YAAAA,GAAG,CAACJ,MAAJ,GAAW,EAAX;AAAc,WAA5E,MAAgF;AAAC,gBAAGoB,GAAG,IAAE,CAAR,EAAUhB,GAAG,CAACJ,MAAJ,CAAWve,IAAX,CAAgB2f,GAAhB;AAAqB;AAAC,SAApI;;AAAqIV,QAAAA,KAAK,CAACN,GAAD,EAAK;AAAC,cAAGA,GAAG,CAACJ,MAAJ,IAAYI,GAAG,CAACJ,MAAJ,CAAW1lB,MAAX,GAAkB,CAAjC,EAAmC;AAACnC,YAAAA,GAAG,CAACye,iBAAiB,CAACwJ,GAAG,CAACJ,MAAL,EAAY,CAAZ,CAAlB,CAAH;AAAqCI,YAAAA,GAAG,CAACJ,MAAJ,GAAW,EAAX;AAAc;AAAC;;AAAxO;AAAvnD,KAAR;;AAA02D,QAAI+B,SAAS,GAACle,IAAI,IAAE;AAACrL,MAAAA,KAAK;AAAG,KAA7B;;AAA8B,QAAIwpB,KAAK,GAAC;AAACC,MAAAA,SAAS,EAAC,IAAX;;AAAgBC,MAAAA,KAAK,CAACA,KAAD,EAAO;AAAC,eAAOF,KAAK,CAACG,UAAN,CAAiB,IAAjB,EAAsB,GAAtB,EAA0B,QAAM,GAAhC,EAAoC,CAApC,CAAP;AAA8C,OAA3E;;AAA4EA,MAAAA,UAAU,CAACC,MAAD,EAAQtf,IAAR,EAAauf,IAAb,EAAkBxC,GAAlB,EAAsB;AAAC,YAAGllB,EAAE,CAAC2nB,QAAH,CAAYD,IAAZ,KAAmB1nB,EAAE,CAAC4nB,MAAH,CAAUF,IAAV,CAAtB,EAAsC;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACyB,KAAK,CAACC,SAAV,EAAoB;AAACD,UAAAA,KAAK,CAACC,SAAN,GAAgB;AAAC1E,YAAAA,GAAG,EAAC;AAAC8C,cAAAA,IAAI,EAAC;AAACmC,gBAAAA,OAAO,EAACR,KAAK,CAACS,QAAN,CAAeD,OAAxB;AAAgCE,gBAAAA,OAAO,EAACV,KAAK,CAACS,QAAN,CAAeC,OAAvD;AAA+DC,gBAAAA,MAAM,EAACX,KAAK,CAACS,QAAN,CAAeE,MAArF;AAA4FC,gBAAAA,KAAK,EAACZ,KAAK,CAACS,QAAN,CAAeG,KAAjH;AAAuHC,gBAAAA,MAAM,EAACb,KAAK,CAACS,QAAN,CAAeI,MAA7I;AAAoJC,gBAAAA,MAAM,EAACd,KAAK,CAACS,QAAN,CAAeK,MAA1K;AAAiLC,gBAAAA,KAAK,EAACf,KAAK,CAACS,QAAN,CAAeM,KAAtM;AAA4MC,gBAAAA,OAAO,EAAChB,KAAK,CAACS,QAAN,CAAeO,OAAnO;AAA2OC,gBAAAA,OAAO,EAACjB,KAAK,CAACS,QAAN,CAAeQ;AAAlQ,eAAN;AAAiR9C,cAAAA,MAAM,EAAC;AAAC+C,gBAAAA,MAAM,EAAClB,KAAK,CAAC9B,UAAN,CAAiBgD;AAAzB;AAAxR,aAAL;AAA+T3mB,YAAAA,IAAI,EAAC;AAAC8jB,cAAAA,IAAI,EAAC;AAACmC,gBAAAA,OAAO,EAACR,KAAK,CAACS,QAAN,CAAeD,OAAxB;AAAgCE,gBAAAA,OAAO,EAACV,KAAK,CAACS,QAAN,CAAeC;AAAvD,eAAN;AAAsEvC,cAAAA,MAAM,EAAC;AAAC+C,gBAAAA,MAAM,EAAClB,KAAK,CAAC9B,UAAN,CAAiBgD,MAAzB;AAAgCvgB,gBAAAA,IAAI,EAACqf,KAAK,CAAC9B,UAAN,CAAiBvd,IAAtD;AAA2DC,gBAAAA,KAAK,EAACof,KAAK,CAAC9B,UAAN,CAAiBtd,KAAlF;AAAwFmQ,gBAAAA,QAAQ,EAACiP,KAAK,CAAC9B,UAAN,CAAiBnN,QAAlH;AAA2HoQ,gBAAAA,IAAI,EAACnB,KAAK,CAAC9B,UAAN,CAAiBiD,IAAjJ;AAAsJC,gBAAAA,KAAK,EAACpB,KAAK,CAAC9B,UAAN,CAAiBkD;AAA7K;AAA7E,aAApU;AAAskBC,YAAAA,IAAI,EAAC;AAAChD,cAAAA,IAAI,EAAC;AAACmC,gBAAAA,OAAO,EAACR,KAAK,CAACS,QAAN,CAAeD,OAAxB;AAAgCE,gBAAAA,OAAO,EAACV,KAAK,CAACS,QAAN,CAAeC,OAAvD;AAA+DY,gBAAAA,QAAQ,EAACtB,KAAK,CAACS,QAAN,CAAea;AAAvF,eAAN;AAAuGnD,cAAAA,MAAM,EAAC;AAA9G,aAA3kB;AAA6rBoD,YAAAA,MAAM,EAAC;AAAClD,cAAAA,IAAI,EAAC;AAACmC,gBAAAA,OAAO,EAACR,KAAK,CAACS,QAAN,CAAeD,OAAxB;AAAgCE,gBAAAA,OAAO,EAACV,KAAK,CAACS,QAAN,CAAeC;AAAvD,eAAN;AAAsEvC,cAAAA,MAAM,EAACxlB,EAAE,CAAC6oB;AAAhF;AAApsB,WAAhB;AAAwzB;;AAAA,YAAInD,IAAI,GAAC1lB,EAAE,CAACwnB,UAAH,CAAcC,MAAd,EAAqBtf,IAArB,EAA0Buf,IAA1B,EAA+BxC,GAA/B,CAAT;;AAA6C,YAAGllB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAH,EAAuB;AAAChC,UAAAA,IAAI,CAACoC,QAAL,GAAcT,KAAK,CAACC,SAAN,CAAgB1E,GAAhB,CAAoB8C,IAAlC;AAAuCA,UAAAA,IAAI,CAACH,UAAL,GAAgB8B,KAAK,CAACC,SAAN,CAAgB1E,GAAhB,CAAoB4C,MAApC;AAA2CE,UAAAA,IAAI,CAACqD,QAAL,GAAc,EAAd;AAAiB,SAA3H,MAAgI,IAAG/oB,EAAE,CAACgpB,MAAH,CAAUtD,IAAI,CAACgC,IAAf,CAAH,EAAwB;AAAChC,UAAAA,IAAI,CAACoC,QAAL,GAAcT,KAAK,CAACC,SAAN,CAAgB1lB,IAAhB,CAAqB8jB,IAAnC;AAAwCA,UAAAA,IAAI,CAACH,UAAL,GAAgB8B,KAAK,CAACC,SAAN,CAAgB1lB,IAAhB,CAAqB4jB,MAArC;AAA4CE,UAAAA,IAAI,CAACuD,SAAL,GAAe,CAAf;AAAiBvD,UAAAA,IAAI,CAACqD,QAAL,GAAc,IAAd;AAAmB,SAAjJ,MAAsJ,IAAG/oB,EAAE,CAACkpB,MAAH,CAAUxD,IAAI,CAACgC,IAAf,CAAH,EAAwB;AAAChC,UAAAA,IAAI,CAACoC,QAAL,GAAcT,KAAK,CAACC,SAAN,CAAgBoB,IAAhB,CAAqBhD,IAAnC;AAAwCA,UAAAA,IAAI,CAACH,UAAL,GAAgB8B,KAAK,CAACC,SAAN,CAAgBoB,IAAhB,CAAqBlD,MAArC;AAA4C,SAA7G,MAAkH,IAAGxlB,EAAE,CAACmpB,QAAH,CAAYzD,IAAI,CAACgC,IAAjB,CAAH,EAA0B;AAAChC,UAAAA,IAAI,CAACoC,QAAL,GAAcT,KAAK,CAACC,SAAN,CAAgBsB,MAAhB,CAAuBlD,IAArC;AAA0CA,UAAAA,IAAI,CAACH,UAAL,GAAgB8B,KAAK,CAACC,SAAN,CAAgBsB,MAAhB,CAAuBpD,MAAvC;AAA8C;;AAAAE,QAAAA,IAAI,CAACU,SAAL,GAAeC,IAAI,CAACC,GAAL,EAAf;;AAA0B,YAAGmB,MAAH,EAAU;AAACA,UAAAA,MAAM,CAACsB,QAAP,CAAgB5gB,IAAhB,IAAsBud,IAAtB;AAA2B+B,UAAAA,MAAM,CAACrB,SAAP,GAAiBV,IAAI,CAACU,SAAtB;AAAgC;;AAAA,eAAOV,IAAP;AAAY,OAAjpD;;AAAkpD0D,MAAAA,uBAAuB,CAAC1D,IAAD,EAAM;AAAC,YAAG,CAACA,IAAI,CAACqD,QAAT,EAAkB,OAAO,IAAI/rB,UAAJ,CAAe,CAAf,CAAP;AAAyB,YAAG0oB,IAAI,CAACqD,QAAL,CAAcxM,QAAjB,EAA0B,OAAOmJ,IAAI,CAACqD,QAAL,CAAcxM,QAAd,CAAuB,CAAvB,EAAyBmJ,IAAI,CAACuD,SAA9B,CAAP;AAAgD,eAAO,IAAIjsB,UAAJ,CAAe0oB,IAAI,CAACqD,QAApB,CAAP;AAAqC,OAA10D;;AAA20DM,MAAAA,iBAAiB,CAAC3D,IAAD,EAAM4D,WAAN,EAAkB;AAAC,YAAIC,YAAY,GAAC7D,IAAI,CAACqD,QAAL,GAAcrD,IAAI,CAACqD,QAAL,CAAcppB,MAA5B,GAAmC,CAApD;AAAsD,YAAG4pB,YAAY,IAAED,WAAjB,EAA6B;AAAO,YAAIE,qBAAqB,GAAC,OAAK,IAA/B;AAAoCF,QAAAA,WAAW,GAAC3I,IAAI,CAACG,GAAL,CAASwI,WAAT,EAAqBC,YAAY,IAAEA,YAAY,GAACC,qBAAb,GAAmC,CAAnC,GAAqC,KAAvC,CAAZ,KAA4D,CAAjF,CAAZ;AAAgG,YAAGD,YAAY,IAAE,CAAjB,EAAmBD,WAAW,GAAC3I,IAAI,CAACG,GAAL,CAASwI,WAAT,EAAqB,GAArB,CAAZ;AAAsC,YAAIG,WAAW,GAAC/D,IAAI,CAACqD,QAArB;AAA8BrD,QAAAA,IAAI,CAACqD,QAAL,GAAc,IAAI/rB,UAAJ,CAAessB,WAAf,CAAd;AAA0C,YAAG5D,IAAI,CAACuD,SAAL,GAAe,CAAlB,EAAoBvD,IAAI,CAACqD,QAAL,CAAclR,GAAd,CAAkB4R,WAAW,CAAClN,QAAZ,CAAqB,CAArB,EAAuBmJ,IAAI,CAACuD,SAA5B,CAAlB,EAAyD,CAAzD;AAA4D,OAA9xE;;AAA+xES,MAAAA,iBAAiB,CAAChE,IAAD,EAAM7E,OAAN,EAAc;AAAC,YAAG6E,IAAI,CAACuD,SAAL,IAAgBpI,OAAnB,EAA2B;;AAAO,YAAGA,OAAO,IAAE,CAAZ,EAAc;AAAC6E,UAAAA,IAAI,CAACqD,QAAL,GAAc,IAAd;AAAmBrD,UAAAA,IAAI,CAACuD,SAAL,GAAe,CAAf;AAAiB,SAAnD,MAAuD;AAAC,cAAIQ,WAAW,GAAC/D,IAAI,CAACqD,QAArB;AAA8BrD,UAAAA,IAAI,CAACqD,QAAL,GAAc,IAAI/rB,UAAJ,CAAe6jB,OAAf,CAAd;;AAAsC,cAAG4I,WAAH,EAAe;AAAC/D,YAAAA,IAAI,CAACqD,QAAL,CAAclR,GAAd,CAAkB4R,WAAW,CAAClN,QAAZ,CAAqB,CAArB,EAAuBoE,IAAI,CAACC,GAAL,CAASC,OAAT,EAAiB6E,IAAI,CAACuD,SAAtB,CAAvB,CAAlB;AAA4E;;AAAAvD,UAAAA,IAAI,CAACuD,SAAL,GAAepI,OAAf;AAAuB;AAAC,OAAjlF;;AAAklFiH,MAAAA,QAAQ,EAAC;AAACD,QAAAA,OAAO,CAACnC,IAAD,EAAM;AAAC,cAAIiE,IAAI,GAAC,EAAT;AAAYA,UAAAA,IAAI,CAACzE,GAAL,GAASllB,EAAE,CAACmpB,QAAH,CAAYzD,IAAI,CAACgC,IAAjB,IAAuBhC,IAAI,CAAC5kB,EAA5B,GAA+B,CAAxC;AAA0C6oB,UAAAA,IAAI,CAACC,GAAL,GAASlE,IAAI,CAAC5kB,EAAd;AAAiB6oB,UAAAA,IAAI,CAACjC,IAAL,GAAUhC,IAAI,CAACgC,IAAf;AAAoBiC,UAAAA,IAAI,CAACE,KAAL,GAAW,CAAX;AAAaF,UAAAA,IAAI,CAACG,GAAL,GAAS,CAAT;AAAWH,UAAAA,IAAI,CAACI,GAAL,GAAS,CAAT;AAAWJ,UAAAA,IAAI,CAAChE,IAAL,GAAUD,IAAI,CAACC,IAAf;;AAAoB,cAAG3lB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAH,EAAuB;AAACiC,YAAAA,IAAI,CAACzgB,IAAL,GAAU,IAAV;AAAe,WAAvC,MAA4C,IAAGlJ,EAAE,CAACgpB,MAAH,CAAUtD,IAAI,CAACgC,IAAf,CAAH,EAAwB;AAACiC,YAAAA,IAAI,CAACzgB,IAAL,GAAUwc,IAAI,CAACuD,SAAf;AAAyB,WAAlD,MAAuD,IAAGjpB,EAAE,CAACkpB,MAAH,CAAUxD,IAAI,CAACgC,IAAf,CAAH,EAAwB;AAACiC,YAAAA,IAAI,CAACzgB,IAAL,GAAUwc,IAAI,CAACgD,IAAL,CAAU/oB,MAApB;AAA2B,WAApD,MAAwD;AAACgqB,YAAAA,IAAI,CAACzgB,IAAL,GAAU,CAAV;AAAY;;AAAAygB,UAAAA,IAAI,CAACK,KAAL,GAAW,IAAI3D,IAAJ,CAASX,IAAI,CAACU,SAAd,CAAX;AAAoCuD,UAAAA,IAAI,CAACM,KAAL,GAAW,IAAI5D,IAAJ,CAASX,IAAI,CAACU,SAAd,CAAX;AAAoCuD,UAAAA,IAAI,CAACO,KAAL,GAAW,IAAI7D,IAAJ,CAASX,IAAI,CAACU,SAAd,CAAX;AAAoCuD,UAAAA,IAAI,CAACQ,OAAL,GAAa,IAAb;AAAkBR,UAAAA,IAAI,CAACS,MAAL,GAAYzJ,IAAI,CAAC0J,IAAL,CAAUV,IAAI,CAACzgB,IAAL,GAAUygB,IAAI,CAACQ,OAAzB,CAAZ;AAA8C,iBAAOR,IAAP;AAAY,SAAjgB;;AAAkgB5B,QAAAA,OAAO,CAACrC,IAAD,EAAMiE,IAAN,EAAW;AAAC,cAAGA,IAAI,CAACjC,IAAL,KAAY/sB,SAAf,EAAyB;AAAC+qB,YAAAA,IAAI,CAACgC,IAAL,GAAUiC,IAAI,CAACjC,IAAf;AAAoB;;AAAA,cAAGiC,IAAI,CAACvD,SAAL,KAAiBzrB,SAApB,EAA8B;AAAC+qB,YAAAA,IAAI,CAACU,SAAL,GAAeuD,IAAI,CAACvD,SAApB;AAA8B;;AAAA,cAAGuD,IAAI,CAACzgB,IAAL,KAAYvO,SAAf,EAAyB;AAAC0sB,YAAAA,KAAK,CAACqC,iBAAN,CAAwBhE,IAAxB,EAA6BiE,IAAI,CAACzgB,IAAlC;AAAwC;AAAC,SAAnsB;;AAAosB8e,QAAAA,MAAM,CAACP,MAAD,EAAQtf,IAAR,EAAa;AAAC,gBAAMnI,EAAE,CAACsqB,aAAH,CAAiB,EAAjB,CAAN;AAA2B,SAAnvB;;AAAovBrC,QAAAA,KAAK,CAACR,MAAD,EAAQtf,IAAR,EAAauf,IAAb,EAAkBxC,GAAlB,EAAsB;AAAC,iBAAOmC,KAAK,CAACG,UAAN,CAAiBC,MAAjB,EAAwBtf,IAAxB,EAA6Buf,IAA7B,EAAkCxC,GAAlC,CAAP;AAA8C,SAA9zB;;AAA+zBgD,QAAAA,MAAM,CAACqC,QAAD,EAAUC,OAAV,EAAkBC,QAAlB,EAA2B;AAAC,cAAGzqB,EAAE,CAAC8oB,KAAH,CAASyB,QAAQ,CAAC7C,IAAlB,CAAH,EAA2B;AAAC,gBAAIgD,QAAJ;;AAAa,gBAAG;AAACA,cAAAA,QAAQ,GAAC1qB,EAAE,CAAC2qB,UAAH,CAAcH,OAAd,EAAsBC,QAAtB,CAAT;AAAyC,aAA7C,CAA6C,OAAMrpB,CAAN,EAAQ,CAAE;;AAAA,gBAAGspB,QAAH,EAAY;AAAC,mBAAI,IAAInkB,CAAR,IAAamkB,QAAQ,CAAC3B,QAAtB,EAA+B;AAAC,sBAAM,IAAI/oB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;AAAC;AAAC;;AAAA,iBAAO2E,QAAQ,CAAC9C,MAAT,CAAgBsB,QAAhB,CAAyBwB,QAAQ,CAACpiB,IAAlC,CAAP;AAA+CoiB,UAAAA,QAAQ,CAAC9C,MAAT,CAAgBrB,SAAhB,GAA0BC,IAAI,CAACC,GAAL,EAA1B;AAAqCiE,UAAAA,QAAQ,CAACpiB,IAAT,GAAcsiB,QAAd;AAAuBD,UAAAA,OAAO,CAACzB,QAAR,CAAiB0B,QAAjB,IAA2BF,QAA3B;AAAoCC,UAAAA,OAAO,CAACpE,SAAR,GAAkBmE,QAAQ,CAAC9C,MAAT,CAAgBrB,SAAlC;AAA4CmE,UAAAA,QAAQ,CAAC9C,MAAT,GAAgB+C,OAAhB;AAAwB,SAA/tC;;AAAguCrC,QAAAA,MAAM,CAACV,MAAD,EAAQtf,IAAR,EAAa;AAAC,iBAAOsf,MAAM,CAACsB,QAAP,CAAgB5gB,IAAhB,CAAP;AAA6Bsf,UAAAA,MAAM,CAACrB,SAAP,GAAiBC,IAAI,CAACC,GAAL,EAAjB;AAA4B,SAA7yC;;AAA8yC8B,QAAAA,KAAK,CAACX,MAAD,EAAQtf,IAAR,EAAa;AAAC,cAAIud,IAAI,GAAC1lB,EAAE,CAAC2qB,UAAH,CAAclD,MAAd,EAAqBtf,IAArB,CAAT;;AAAoC,eAAI,IAAI5B,CAAR,IAAamf,IAAI,CAACqD,QAAlB,EAA2B;AAAC,kBAAM,IAAI/oB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,iBAAO6B,MAAM,CAACsB,QAAP,CAAgB5gB,IAAhB,CAAP;AAA6Bsf,UAAAA,MAAM,CAACrB,SAAP,GAAiBC,IAAI,CAACC,GAAL,EAAjB;AAA4B,SAAt9C;;AAAu9C+B,QAAAA,OAAO,CAAC3C,IAAD,EAAM;AAAC,cAAIkF,OAAO,GAAC,CAAC,GAAD,EAAK,IAAL,CAAZ;;AAAuB,eAAI,IAAIC,GAAR,IAAenF,IAAI,CAACqD,QAApB,EAA6B;AAAC,gBAAG,CAACrD,IAAI,CAACqD,QAAL,CAAcliB,cAAd,CAA6BgkB,GAA7B,CAAJ,EAAsC;AAAC;AAAS;;AAAAD,YAAAA,OAAO,CAAC9jB,IAAR,CAAa+jB,GAAb;AAAkB;;AAAA,iBAAOD,OAAP;AAAe,SAA3mD;;AAA4mDtC,QAAAA,OAAO,CAACb,MAAD,EAAQqD,OAAR,EAAgBC,OAAhB,EAAwB;AAAC,cAAIrF,IAAI,GAAC2B,KAAK,CAACG,UAAN,CAAiBC,MAAjB,EAAwBqD,OAAxB,EAAgC,MAAI,KAApC,EAA0C,CAA1C,CAAT;AAAsDpF,UAAAA,IAAI,CAACgD,IAAL,GAAUqC,OAAV;AAAkB,iBAAOrF,IAAP;AAAY,SAAhuD;;AAAiuDiD,QAAAA,QAAQ,CAACjD,IAAD,EAAM;AAAC,cAAG,CAAC1lB,EAAE,CAACkpB,MAAH,CAAUxD,IAAI,CAACgC,IAAf,CAAJ,EAAyB;AAAC,kBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,iBAAOF,IAAI,CAACgD,IAAZ;AAAiB;;AAAvzD,OAA3lF;AAAo5InD,MAAAA,UAAU,EAAC;AAACvd,QAAAA,IAAI,CAACwd,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BqrB,QAA7B,EAAsC;AAAC,cAAIjC,QAAQ,GAACvD,MAAM,CAACE,IAAP,CAAYqD,QAAzB;AAAkC,cAAGiC,QAAQ,IAAExF,MAAM,CAACE,IAAP,CAAYuD,SAAzB,EAAmC,OAAO,CAAP;AAAS,cAAI/f,IAAI,GAACyX,IAAI,CAACC,GAAL,CAAS4E,MAAM,CAACE,IAAP,CAAYuD,SAAZ,GAAsB+B,QAA/B,EAAwCrrB,MAAxC,CAAT;;AAAyD,cAAGuJ,IAAI,GAAC,CAAL,IAAQ6f,QAAQ,CAACxM,QAApB,EAA6B;AAACzd,YAAAA,MAAM,CAAC+Y,GAAP,CAAWkR,QAAQ,CAACxM,QAAT,CAAkByO,QAAlB,EAA2BA,QAAQ,GAAC9hB,IAApC,CAAX,EAAqD8c,MAArD;AAA6D,WAA3F,MAA+F;AAAC,iBAAI,IAAIzf,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC2C,IAAd,EAAmB3C,CAAC,EAApB,EAAuBzH,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAN,GAAiBwiB,QAAQ,CAACiC,QAAQ,GAACzkB,CAAV,CAAzB;AAAsC;;AAAA,iBAAO2C,IAAP;AAAY,SAA5V;;AAA6VjB,QAAAA,KAAK,CAACud,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BqrB,QAA7B,EAAsCC,MAAtC,EAA6C;AAAC,cAAGnsB,MAAM,CAACA,MAAP,KAAgBV,KAAK,CAACU,MAAzB,EAAgC;AAACmsB,YAAAA,MAAM,GAAC,KAAP;AAAa;;AAAA,cAAG,CAACtrB,MAAJ,EAAW,OAAO,CAAP;AAAS,cAAI+lB,IAAI,GAACF,MAAM,CAACE,IAAhB;AAAqBA,UAAAA,IAAI,CAACU,SAAL,GAAeC,IAAI,CAACC,GAAL,EAAf;;AAA0B,cAAGxnB,MAAM,CAACyd,QAAP,KAAkB,CAACmJ,IAAI,CAACqD,QAAN,IAAgBrD,IAAI,CAACqD,QAAL,CAAcxM,QAAhD,CAAH,EAA6D;AAAC,gBAAG0O,MAAH,EAAU;AAACvF,cAAAA,IAAI,CAACqD,QAAL,GAAcjqB,MAAM,CAACyd,QAAP,CAAgByJ,MAAhB,EAAuBA,MAAM,GAACrmB,MAA9B,CAAd;AAAoD+lB,cAAAA,IAAI,CAACuD,SAAL,GAAetpB,MAAf;AAAsB,qBAAOA,MAAP;AAAc,aAAnG,MAAwG,IAAG+lB,IAAI,CAACuD,SAAL,KAAiB,CAAjB,IAAoB+B,QAAQ,KAAG,CAAlC,EAAoC;AAACtF,cAAAA,IAAI,CAACqD,QAAL,GAAcjqB,MAAM,CAACqb,KAAP,CAAa6L,MAAb,EAAoBA,MAAM,GAACrmB,MAA3B,CAAd;AAAiD+lB,cAAAA,IAAI,CAACuD,SAAL,GAAetpB,MAAf;AAAsB,qBAAOA,MAAP;AAAc,aAA1H,MAA+H,IAAGqrB,QAAQ,GAACrrB,MAAT,IAAiB+lB,IAAI,CAACuD,SAAzB,EAAmC;AAACvD,cAAAA,IAAI,CAACqD,QAAL,CAAclR,GAAd,CAAkB/Y,MAAM,CAACyd,QAAP,CAAgByJ,MAAhB,EAAuBA,MAAM,GAACrmB,MAA9B,CAAlB,EAAwDqrB,QAAxD;AAAkE,qBAAOrrB,MAAP;AAAc;AAAC;;AAAA0nB,UAAAA,KAAK,CAACgC,iBAAN,CAAwB3D,IAAxB,EAA6BsF,QAAQ,GAACrrB,MAAtC;;AAA8C,cAAG+lB,IAAI,CAACqD,QAAL,CAAcxM,QAAd,IAAwBzd,MAAM,CAACyd,QAAlC,EAA2C;AAACmJ,YAAAA,IAAI,CAACqD,QAAL,CAAclR,GAAd,CAAkB/Y,MAAM,CAACyd,QAAP,CAAgByJ,MAAhB,EAAuBA,MAAM,GAACrmB,MAA9B,CAAlB,EAAwDqrB,QAAxD;AAAkE,WAA9G,MAAkH;AAAC,iBAAI,IAAIzkB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB4G,CAAC,EAAtB,EAAyB;AAACmf,cAAAA,IAAI,CAACqD,QAAL,CAAciC,QAAQ,GAACzkB,CAAvB,IAA0BzH,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAhC;AAA2C;AAAC;;AAAAmf,UAAAA,IAAI,CAACuD,SAAL,GAAetI,IAAI,CAACG,GAAL,CAAS4E,IAAI,CAACuD,SAAd,EAAwB+B,QAAQ,GAACrrB,MAAjC,CAAf;AAAwD,iBAAOA,MAAP;AAAc,SAAxsC;;AAAysC4oB,QAAAA,MAAM,CAAC/C,MAAD,EAAQQ,MAAR,EAAekF,MAAf,EAAsB;AAAC,cAAIF,QAAQ,GAAChF,MAAb;;AAAoB,cAAGkF,MAAM,KAAG,CAAZ,EAAc;AAACF,YAAAA,QAAQ,IAAExF,MAAM,CAACwF,QAAjB;AAA0B,WAAzC,MAA8C,IAAGE,MAAM,KAAG,CAAZ,EAAc;AAAC,gBAAGlrB,EAAE,CAACgpB,MAAH,CAAUxD,MAAM,CAACE,IAAP,CAAYgC,IAAtB,CAAH,EAA+B;AAACsD,cAAAA,QAAQ,IAAExF,MAAM,CAACE,IAAP,CAAYuD,SAAtB;AAAgC;AAAC;;AAAA,cAAG+B,QAAQ,GAAC,CAAZ,EAAc;AAAC,kBAAM,IAAIhrB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,iBAAOoF,QAAP;AAAgB,SAAn7C;;AAAo7C5S,QAAAA,QAAQ,CAACoN,MAAD,EAAQQ,MAAR,EAAermB,MAAf,EAAsB;AAAC0nB,UAAAA,KAAK,CAACgC,iBAAN,CAAwB7D,MAAM,CAACE,IAA/B,EAAoCM,MAAM,GAACrmB,MAA3C;AAAmD6lB,UAAAA,MAAM,CAACE,IAAP,CAAYuD,SAAZ,GAAsBtI,IAAI,CAACG,GAAL,CAAS0E,MAAM,CAACE,IAAP,CAAYuD,SAArB,EAA+BjD,MAAM,GAACrmB,MAAtC,CAAtB;AAAoE,SAA1kD;;AAA2kD6oB,QAAAA,IAAI,CAAChD,MAAD,EAAQ7lB,MAAR,EAAeqrB,QAAf,EAAwBG,IAAxB,EAA6BC,KAA7B,EAAmC;AAAC,cAAG,CAACprB,EAAE,CAACgpB,MAAH,CAAUxD,MAAM,CAACE,IAAP,CAAYgC,IAAtB,CAAJ,EAAgC;AAAC,kBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,cAAIjiB,GAAJ;AAAQ,cAAIuU,SAAJ;AAAc,cAAI6Q,QAAQ,GAACvD,MAAM,CAACE,IAAP,CAAYqD,QAAzB;;AAAkC,cAAG,EAAEqC,KAAK,GAAC,CAAR,KAAYrC,QAAQ,CAACjqB,MAAT,KAAkBV,KAAK,CAACU,MAAvC,EAA8C;AAACoZ,YAAAA,SAAS,GAAC,KAAV;AAAgBvU,YAAAA,GAAG,GAAColB,QAAQ,CAACsC,UAAb;AAAwB,WAAvF,MAA2F;AAAC,gBAAGL,QAAQ,GAAC,CAAT,IAAYA,QAAQ,GAACrrB,MAAT,GAAgBopB,QAAQ,CAACppB,MAAxC,EAA+C;AAAC,kBAAGopB,QAAQ,CAACxM,QAAZ,EAAqB;AAACwM,gBAAAA,QAAQ,GAACA,QAAQ,CAACxM,QAAT,CAAkByO,QAAlB,EAA2BA,QAAQ,GAACrrB,MAApC,CAAT;AAAqD,eAA3E,MAA+E;AAACopB,gBAAAA,QAAQ,GAACtiB,KAAK,CAACwG,SAAN,CAAgBkN,KAAhB,CAAsBlM,IAAtB,CAA2B8a,QAA3B,EAAoCiC,QAApC,EAA6CA,QAAQ,GAACrrB,MAAtD,CAAT;AAAuE;AAAC;;AAAAuY,YAAAA,SAAS,GAAC,IAAV;AAAevU,YAAAA,GAAG,GAACyjB,SAAS,CAACznB,MAAD,CAAb;;AAAsB,gBAAG,CAACgE,GAAJ,EAAQ;AAAC,oBAAM,IAAI3D,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAxnB,YAAAA,KAAK,CAACyZ,GAAN,CAAUkR,QAAV,EAAmBplB,GAAnB;AAAwB;;AAAA,iBAAM;AAACA,YAAAA,GAAG,EAACA,GAAL;AAASuU,YAAAA,SAAS,EAACA;AAAnB,WAAN;AAAoC,SAAlpE;;AAAmpEuQ,QAAAA,KAAK,CAACjD,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6B2rB,SAA7B,EAAuC;AAACjE,UAAAA,KAAK,CAAC9B,UAAN,CAAiBtd,KAAjB,CAAuBud,MAAvB,EAA8B1mB,MAA9B,EAAqC,CAArC,EAAuCa,MAAvC,EAA8CqmB,MAA9C,EAAqD,KAArD;AAA4D,iBAAO,CAAP;AAAS;;AAArwE;AAA/5I,KAAV;;AAAirN,QAAIuF,SAAS,GAAC,CAAC9uB,GAAD,EAAKS,MAAL,EAAYC,OAAZ,EAAoBquB,QAApB,KAA+B;AAAC,UAAIC,GAAG,GAAC,CAACD,QAAD,GAAU3qB,sBAAsB,CAAE,MAAKpE,GAAI,EAAX,CAAhC,GAA8C,EAAtD;AAAyDT,MAAAA,SAAS,CAACS,GAAD,EAAKivB,WAAW,IAAE;AAACztB,QAAAA,MAAM,CAACytB,WAAD,EAAc,sBAAqBjvB,GAAI,4BAAvC,CAAN;AAA0ES,QAAAA,MAAM,CAAC,IAAIF,UAAJ,CAAe0uB,WAAf,CAAD,CAAN;AAAoC,YAAGD,GAAH,EAAOzqB,mBAAmB,CAACyqB,GAAD,CAAnB;AAAyB,OAAjK,EAAkKE,KAAK,IAAE;AAAC,YAAGxuB,OAAH,EAAW;AAACA,UAAAA,OAAO;AAAG,SAAtB,MAA0B;AAAC,gBAAM,sBAAqBV,GAAI,WAA/B;AAA0C;AAAC,OAAhP,CAAT;AAA2P,UAAGgvB,GAAH,EAAO1qB,gBAAgB,CAAC0qB,GAAD,CAAhB;AAAsB,KAA/X;;AAAgY,QAAIG,iBAAiB,GAAC,CAACnE,MAAD,EAAQtf,IAAR,EAAa0jB,QAAb,EAAsBC,OAAtB,EAA8BC,QAA9B,EAAuCd,MAAvC,KAAgDjrB,EAAE,CAACgsB,cAAH,CAAkBvE,MAAlB,EAAyBtf,IAAzB,EAA8B0jB,QAA9B,EAAuCC,OAAvC,EAA+CC,QAA/C,EAAwDd,MAAxD,CAAtE;;AAAsI,QAAIgB,cAAc,GAAC3xB,MAAM,CAAC,gBAAD,CAAN,IAA0B,EAA7C;;AAAgD,QAAI4xB,yBAAyB,GAAC,CAACC,SAAD,EAAWC,QAAX,EAAoBC,MAApB,EAA2BlvB,OAA3B,KAAqC;AAAC,UAAG,OAAOmvB,OAAP,IAAgB,WAAnB,EAA+BA,OAAO,CAACrsB,IAAR;AAAe,UAAIssB,OAAO,GAAC,KAAZ;AAAkBN,MAAAA,cAAc,CAAC9lB,OAAf,CAAuBqmB,MAAM,IAAE;AAAC,YAAGD,OAAH,EAAW;;AAAO,YAAGC,MAAM,CAAC,WAAD,CAAN,CAAoBJ,QAApB,CAAH,EAAiC;AAACI,UAAAA,MAAM,CAAC,QAAD,CAAN,CAAiBL,SAAjB,EAA2BC,QAA3B,EAAoCC,MAApC,EAA2ClvB,OAA3C;AAAoDovB,UAAAA,OAAO,GAAC,IAAR;AAAa;AAAC,OAAtJ;AAAwJ,aAAOA,OAAP;AAAe,KAA3S;;AAA4S,QAAIE,sBAAsB,GAAC,CAAChF,MAAD,EAAQtf,IAAR,EAAa1L,GAAb,EAAiBqvB,OAAjB,EAAyBC,QAAzB,EAAkC7uB,MAAlC,EAAyCC,OAAzC,EAAiDuvB,cAAjD,EAAgEzB,MAAhE,EAAuE0B,SAAvE,KAAmF;AAAC,UAAIP,QAAQ,GAACjkB,IAAI,GAACob,OAAO,CAACvoB,OAAR,CAAgBymB,IAAI,CAACuB,KAAL,CAAWyE,MAAX,EAAkBtf,IAAlB,CAAhB,CAAD,GAA0Csf,MAA3D;AAAkE,UAAIgE,GAAG,GAAC5qB,sBAAsB,CAAE,MAAKurB,QAAS,EAAhB,CAA9B;;AAAiD,eAASQ,WAAT,CAAqBT,SAArB,EAA+B;AAAC,iBAASE,MAAT,CAAgBF,SAAhB,EAA0B;AAAC,cAAGQ,SAAH,EAAaA,SAAS;;AAAG,cAAG,CAACD,cAAJ,EAAmB;AAACd,YAAAA,iBAAiB,CAACnE,MAAD,EAAQtf,IAAR,EAAagkB,SAAb,EAAuBL,OAAvB,EAA+BC,QAA/B,EAAwCd,MAAxC,CAAjB;AAAiE;;AAAA,cAAG/tB,MAAH,EAAUA,MAAM;AAAG8D,UAAAA,mBAAmB,CAACyqB,GAAD,CAAnB;AAAyB;;AAAA,YAAGS,yBAAyB,CAACC,SAAD,EAAWC,QAAX,EAAoBC,MAApB,EAA2B,MAAI;AAAC,cAAGlvB,OAAH,EAAWA,OAAO;AAAG6D,UAAAA,mBAAmB,CAACyqB,GAAD,CAAnB;AAAyB,SAA9E,CAA5B,EAA4G;AAAC;AAAO;;AAAAY,QAAAA,MAAM,CAACF,SAAD,CAAN;AAAkB;;AAAAprB,MAAAA,gBAAgB,CAAC0qB,GAAD,CAAhB;;AAAsB,UAAG,OAAOhvB,GAAP,IAAY,QAAf,EAAwB;AAAC8uB,QAAAA,SAAS,CAAC9uB,GAAD,EAAK0vB,SAAS,IAAES,WAAW,CAACT,SAAD,CAA3B,EAAuChvB,OAAvC,CAAT;AAAyD,OAAlF,MAAsF;AAACyvB,QAAAA,WAAW,CAACnwB,GAAD,CAAX;AAAiB;AAAC,KAA5rB;;AAA6rB,QAAIowB,oBAAoB,GAAC1R,GAAG,IAAE;AAAC,UAAI2R,SAAS,GAAC;AAAC,aAAI,CAAL;AAAO,cAAK,CAAZ;AAAc,aAAI,MAAI,EAAJ,GAAO,CAAzB;AAA2B,cAAK,MAAI,EAAJ,GAAO,CAAvC;AAAyC,aAAI,OAAK,EAAL,GAAQ,CAArD;AAAuD,cAAK,OAAK,EAAL,GAAQ;AAApE,OAAd;AAAqF,UAAI1B,KAAK,GAAC0B,SAAS,CAAC3R,GAAD,CAAnB;;AAAyB,UAAG,OAAOiQ,KAAP,IAAc,WAAjB,EAA6B;AAAC,cAAM,IAAIpY,KAAJ,CAAW,2BAA0BmI,GAAI,EAAzC,CAAN;AAAkD;;AAAA,aAAOiQ,KAAP;AAAa,KAA1O;;AAA2O,QAAI2B,UAAU,GAAC,CAACjB,OAAD,EAASC,QAAT,KAAoB;AAAC,UAAIrE,IAAI,GAAC,CAAT;AAAW,UAAGoE,OAAH,EAAWpE,IAAI,IAAE,MAAI,EAAV;AAAa,UAAGqE,QAAH,EAAYrE,IAAI,IAAE,GAAN;AAAU,aAAOA,IAAP;AAAY,KAAzG;;AAA0G,QAAI1nB,EAAE,GAAC;AAAC2iB,MAAAA,IAAI,EAAC,IAAN;AAAWqK,MAAAA,MAAM,EAAC,EAAlB;AAAqBC,MAAAA,OAAO,EAAC,EAA7B;AAAgCC,MAAAA,OAAO,EAAC,EAAxC;AAA2CC,MAAAA,SAAS,EAAC,CAArD;AAAuDC,MAAAA,SAAS,EAAC,IAAjE;AAAsEC,MAAAA,WAAW,EAAC,GAAlF;AAAsFntB,MAAAA,WAAW,EAAC,KAAlG;AAAwGC,MAAAA,iBAAiB,EAAC,IAA1H;AAA+HylB,MAAAA,UAAU,EAAC,IAA1I;AAA+I0E,MAAAA,aAAa,EAAC,EAA7J;AAAgKgD,MAAAA,WAAW,EAAC,IAA5K;AAAiLC,MAAAA,cAAc,EAAC,CAAhM;;AAAkMC,MAAAA,UAAU,CAAC1xB,IAAD,EAAc;AAAA,YAAR2xB,IAAQ,uEAAH,EAAG;AAAC3xB,QAAAA,IAAI,GAACynB,OAAO,CAACvoB,OAAR,CAAgBc,IAAhB,CAAL;AAA2B,YAAG,CAACA,IAAJ,EAAS,OAAM;AAACA,UAAAA,IAAI,EAAC,EAAN;AAAS4pB,UAAAA,IAAI,EAAC;AAAd,SAAN;AAA0B,YAAIgI,QAAQ,GAAC;AAACC,UAAAA,YAAY,EAAC,IAAd;AAAmBC,UAAAA,aAAa,EAAC;AAAjC,SAAb;AAAiDH,QAAAA,IAAI,GAACtyB,MAAM,CAACC,MAAP,CAAcsyB,QAAd,EAAuBD,IAAvB,CAAL;;AAAkC,YAAGA,IAAI,CAACG,aAAL,GAAmB,CAAtB,EAAwB;AAAC,gBAAM,IAAI5tB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAI5D,KAAK,GAAClmB,IAAI,CAACymB,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuBC,CAAC,IAAE,CAAC,CAACA,CAA5B,CAAV;AAAyC,YAAIoL,OAAO,GAAC7tB,EAAE,CAAC2iB,IAAf;AAAoB,YAAImL,YAAY,GAAC,GAAjB;;AAAqB,aAAI,IAAIvnB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACyb,KAAK,CAACriB,MAApB,EAA2B4G,CAAC,EAA5B,EAA+B;AAAC,cAAIwnB,MAAM,GAACxnB,CAAC,KAAGyb,KAAK,CAACriB,MAAN,GAAa,CAA5B;;AAA8B,cAAGouB,MAAM,IAAEN,IAAI,CAAChG,MAAhB,EAAuB;AAAC;AAAM;;AAAAoG,UAAAA,OAAO,GAAC7tB,EAAE,CAAC2qB,UAAH,CAAckD,OAAd,EAAsB7L,KAAK,CAACzb,CAAD,CAA3B,CAAR;AAAwCunB,UAAAA,YAAY,GAACrM,IAAI,CAACuB,KAAL,CAAW8K,YAAX,EAAwB9L,KAAK,CAACzb,CAAD,CAA7B,CAAb;;AAA+C,cAAGvG,EAAE,CAACguB,YAAH,CAAgBH,OAAhB,CAAH,EAA4B;AAAC,gBAAG,CAACE,MAAD,IAASA,MAAM,IAAEN,IAAI,CAACE,YAAzB,EAAsC;AAACE,cAAAA,OAAO,GAACA,OAAO,CAACI,OAAR,CAAgBtL,IAAxB;AAA6B;AAAC;;AAAA,cAAG,CAACoL,MAAD,IAASN,IAAI,CAACS,MAAjB,EAAwB;AAAC,gBAAIzjB,KAAK,GAAC,CAAV;;AAAY,mBAAMzK,EAAE,CAACkpB,MAAH,CAAU2E,OAAO,CAACnG,IAAlB,CAAN,EAA8B;AAAC,kBAAIgB,IAAI,GAAC1oB,EAAE,CAAC2oB,QAAH,CAAYmF,YAAZ,CAAT;AAAmCA,cAAAA,YAAY,GAACvK,OAAO,CAACvoB,OAAR,CAAgBymB,IAAI,CAACiB,OAAL,CAAaoL,YAAb,CAAhB,EAA2CpF,IAA3C,CAAb;AAA8D,kBAAIV,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAcM,YAAd,EAA2B;AAACF,gBAAAA,aAAa,EAACH,IAAI,CAACG,aAAL,GAAmB;AAAlC,eAA3B,CAAX;AAA4EC,cAAAA,OAAO,GAAC7F,MAAM,CAACtC,IAAf;;AAAoB,kBAAGjb,KAAK,KAAG,EAAX,EAAc;AAAC,sBAAM,IAAIzK,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;AAAC;AAAC;AAAC;;AAAA,eAAM;AAAC9pB,UAAAA,IAAI,EAACgyB,YAAN;AAAmBpI,UAAAA,IAAI,EAACmI;AAAxB,SAAN;AAAuC,OAAlmC;;AAAmmCM,MAAAA,OAAO,CAACzI,IAAD,EAAM;AAAC,YAAI5pB,IAAJ;;AAAS,eAAM,IAAN,EAAW;AAAC,cAAGkE,EAAE,CAACouB,MAAH,CAAU1I,IAAV,CAAH,EAAmB;AAAC,gBAAI6B,KAAK,GAAC7B,IAAI,CAAC6B,KAAL,CAAW8G,UAArB;AAAgC,gBAAG,CAACvyB,IAAJ,EAAS,OAAOyrB,KAAP;AAAa,mBAAOA,KAAK,CAACA,KAAK,CAAC5nB,MAAN,GAAa,CAAd,CAAL,KAAwB,GAAxB,GAA6B,GAAE4nB,KAAM,IAAGzrB,IAAK,EAA7C,GAA+CyrB,KAAK,GAACzrB,IAA5D;AAAiE;;AAAAA,UAAAA,IAAI,GAACA,IAAI,GAAE,GAAE4pB,IAAI,CAACvd,IAAK,IAAGrM,IAAK,EAAtB,GAAwB4pB,IAAI,CAACvd,IAAtC;AAA2Cud,UAAAA,IAAI,GAACA,IAAI,CAAC+B,MAAV;AAAiB;AAAC,OAA90C;;AAA+0C6G,MAAAA,QAAQ,CAACC,QAAD,EAAUpmB,IAAV,EAAe;AAAC,YAAIqmB,IAAI,GAAC,CAAT;;AAAW,aAAI,IAAIjoB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4B,IAAI,CAACxI,MAAnB,EAA0B4G,CAAC,EAA3B,EAA8B;AAACioB,UAAAA,IAAI,GAAC,CAACA,IAAI,IAAE,CAAP,IAAUA,IAAV,GAAermB,IAAI,CAACoH,UAAL,CAAgBhJ,CAAhB,CAAf,GAAkC,CAAvC;AAAyC;;AAAA,eAAM,CAACgoB,QAAQ,GAACC,IAAT,KAAgB,CAAjB,IAAoBxuB,EAAE,CAACotB,SAAH,CAAaztB,MAAvC;AAA8C,OAAx+C;;AAAy+C8uB,MAAAA,WAAW,CAAC/I,IAAD,EAAM;AAAC,YAAI8I,IAAI,GAACxuB,EAAE,CAACsuB,QAAH,CAAY5I,IAAI,CAAC+B,MAAL,CAAY3mB,EAAxB,EAA2B4kB,IAAI,CAACvd,IAAhC,CAAT;AAA+Cud,QAAAA,IAAI,CAACgJ,SAAL,GAAe1uB,EAAE,CAACotB,SAAH,CAAaoB,IAAb,CAAf;AAAkCxuB,QAAAA,EAAE,CAACotB,SAAH,CAAaoB,IAAb,IAAmB9I,IAAnB;AAAwB,OAApmD;;AAAqmDiJ,MAAAA,cAAc,CAACjJ,IAAD,EAAM;AAAC,YAAI8I,IAAI,GAACxuB,EAAE,CAACsuB,QAAH,CAAY5I,IAAI,CAAC+B,MAAL,CAAY3mB,EAAxB,EAA2B4kB,IAAI,CAACvd,IAAhC,CAAT;;AAA+C,YAAGnI,EAAE,CAACotB,SAAH,CAAaoB,IAAb,MAAqB9I,IAAxB,EAA6B;AAAC1lB,UAAAA,EAAE,CAACotB,SAAH,CAAaoB,IAAb,IAAmB9I,IAAI,CAACgJ,SAAxB;AAAkC,SAAhE,MAAoE;AAAC,cAAIb,OAAO,GAAC7tB,EAAE,CAACotB,SAAH,CAAaoB,IAAb,CAAZ;;AAA+B,iBAAMX,OAAN,EAAc;AAAC,gBAAGA,OAAO,CAACa,SAAR,KAAoBhJ,IAAvB,EAA4B;AAACmI,cAAAA,OAAO,CAACa,SAAR,GAAkBhJ,IAAI,CAACgJ,SAAvB;AAAiC;AAAM;;AAAAb,YAAAA,OAAO,GAACA,OAAO,CAACa,SAAhB;AAA0B;AAAC;AAAC,OAA53D;;AAA63D/D,MAAAA,UAAU,CAAClD,MAAD,EAAQtf,IAAR,EAAa;AAAC,YAAIymB,OAAO,GAAC5uB,EAAE,CAAC6uB,SAAH,CAAapH,MAAb,CAAZ;;AAAiC,YAAGmH,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,EAA0BnH,MAA1B,CAAN;AAAwC;;AAAA,YAAI+G,IAAI,GAACxuB,EAAE,CAACsuB,QAAH,CAAY7G,MAAM,CAAC3mB,EAAnB,EAAsBqH,IAAtB,CAAT;;AAAqC,aAAI,IAAIud,IAAI,GAAC1lB,EAAE,CAACotB,SAAH,CAAaoB,IAAb,CAAb,EAAgC9I,IAAhC,EAAqCA,IAAI,GAACA,IAAI,CAACgJ,SAA/C,EAAyD;AAAC,cAAII,QAAQ,GAACpJ,IAAI,CAACvd,IAAlB;;AAAuB,cAAGud,IAAI,CAAC+B,MAAL,CAAY3mB,EAAZ,KAAiB2mB,MAAM,CAAC3mB,EAAxB,IAA4BguB,QAAQ,KAAG3mB,IAA1C,EAA+C;AAAC,mBAAOud,IAAP;AAAY;AAAC;;AAAA,eAAO1lB,EAAE,CAACgoB,MAAH,CAAUP,MAAV,EAAiBtf,IAAjB,CAAP;AAA8B,OAA3rE;;AAA4rEqf,MAAAA,UAAU,CAACC,MAAD,EAAQtf,IAAR,EAAauf,IAAb,EAAkB/B,IAAlB,EAAuB;AAAC,YAAID,IAAI,GAAC,IAAI1lB,EAAE,CAAC+uB,MAAP,CAActH,MAAd,EAAqBtf,IAArB,EAA0Buf,IAA1B,EAA+B/B,IAA/B,CAAT;AAA8C3lB,QAAAA,EAAE,CAACyuB,WAAH,CAAe/I,IAAf;AAAqB,eAAOA,IAAP;AAAY,OAA7yE;;AAA8yEsJ,MAAAA,WAAW,CAACtJ,IAAD,EAAM;AAAC1lB,QAAAA,EAAE,CAAC2uB,cAAH,CAAkBjJ,IAAlB;AAAwB,OAAx1E;;AAAy1E0I,MAAAA,MAAM,CAAC1I,IAAD,EAAM;AAAC,eAAOA,IAAI,KAAGA,IAAI,CAAC+B,MAAnB;AAA0B,OAAh4E;;AAAi4EuG,MAAAA,YAAY,CAACtI,IAAD,EAAM;AAAC,eAAM,CAAC,CAACA,IAAI,CAACuI,OAAb;AAAqB,OAAz6E;;AAA06EjF,MAAAA,MAAM,CAACtB,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,KAArB;AAA2B,OAAl9E;;AAAm9EoB,MAAAA,KAAK,CAACpB,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,KAArB;AAA2B,OAA1/E;;AAA2/EwB,MAAAA,MAAM,CAACxB,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,KAArB;AAA2B,OAAniF;;AAAoiFyB,MAAAA,QAAQ,CAACzB,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,IAArB;AAA0B,OAA7kF;;AAA8kFC,MAAAA,QAAQ,CAACD,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,KAArB;AAA2B,OAAxnF;;AAAynFE,MAAAA,MAAM,CAACF,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,IAArB;AAA0B,OAAhqF;;AAAiqFuH,MAAAA,QAAQ,CAACvH,IAAD,EAAM;AAAC,eAAM,CAACA,IAAI,GAAC,KAAN,MAAe,KAArB;AAA2B,OAA3sF;;AAA4sFwH,MAAAA,uBAAuB,CAACC,IAAD,EAAM;AAAC,YAAIC,KAAK,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,EAAeD,IAAI,GAAC,CAApB,CAAV;;AAAiC,YAAGA,IAAI,GAAC,GAAR,EAAY;AAACC,UAAAA,KAAK,IAAE,GAAP;AAAW;;AAAA,eAAOA,KAAP;AAAa,OAAhzF;;AAAizFC,MAAAA,eAAe,CAAC3J,IAAD,EAAM0J,KAAN,EAAY;AAAC,YAAGpvB,EAAE,CAACG,iBAAN,EAAwB;AAAC,iBAAO,CAAP;AAAS;;AAAA,YAAGivB,KAAK,CAACld,QAAN,CAAe,GAAf,KAAqB,EAAEwT,IAAI,CAACgC,IAAL,GAAU,GAAZ,CAAxB,EAAyC;AAAC,iBAAO,CAAP;AAAS,SAAnD,MAAwD,IAAG0H,KAAK,CAACld,QAAN,CAAe,GAAf,KAAqB,EAAEwT,IAAI,CAACgC,IAAL,GAAU,GAAZ,CAAxB,EAAyC;AAAC,iBAAO,CAAP;AAAS,SAAnD,MAAwD,IAAG0H,KAAK,CAACld,QAAN,CAAe,GAAf,KAAqB,EAAEwT,IAAI,CAACgC,IAAL,GAAU,EAAZ,CAAxB,EAAwC;AAAC,iBAAO,CAAP;AAAS;;AAAA,eAAO,CAAP;AAAS,OAA1hG;;AAA2hGmH,MAAAA,SAAS,CAACjM,GAAD,EAAK;AAAC,YAAIgM,OAAO,GAAC5uB,EAAE,CAACqvB,eAAH,CAAmBzM,GAAnB,EAAuB,GAAvB,CAAZ;AAAwC,YAAGgM,OAAH,EAAW,OAAOA,OAAP;AAAe,YAAG,CAAChM,GAAG,CAACkF,QAAJ,CAAaE,MAAjB,EAAwB,OAAO,CAAP;AAAS,eAAO,CAAP;AAAS,OAAtpG;;AAAupGsH,MAAAA,SAAS,CAAC1M,GAAD,EAAKza,IAAL,EAAU;AAAC,YAAG;AAAC,cAAIud,IAAI,GAAC1lB,EAAE,CAAC2qB,UAAH,CAAc/H,GAAd,EAAkBza,IAAlB,CAAT;AAAiC,iBAAO,EAAP;AAAU,SAA/C,CAA+C,OAAM/G,CAAN,EAAQ,CAAE;;AAAA,eAAOpB,EAAE,CAACqvB,eAAH,CAAmBzM,GAAnB,EAAuB,IAAvB,CAAP;AAAoC,OAAxwG;;AAAywG2M,MAAAA,SAAS,CAAC3M,GAAD,EAAKza,IAAL,EAAUqnB,KAAV,EAAgB;AAAC,YAAI9J,IAAJ;;AAAS,YAAG;AAACA,UAAAA,IAAI,GAAC1lB,EAAE,CAAC2qB,UAAH,CAAc/H,GAAd,EAAkBza,IAAlB,CAAL;AAA6B,SAAjC,CAAiC,OAAM/G,CAAN,EAAQ;AAAC,iBAAOA,CAAC,CAACquB,KAAT;AAAe;;AAAA,YAAIb,OAAO,GAAC5uB,EAAE,CAACqvB,eAAH,CAAmBzM,GAAnB,EAAuB,IAAvB,CAAZ;;AAAyC,YAAGgM,OAAH,EAAW;AAAC,iBAAOA,OAAP;AAAe;;AAAA,YAAGY,KAAH,EAAS;AAAC,cAAG,CAACxvB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAJ,EAAwB;AAAC,mBAAO,EAAP;AAAU;;AAAA,cAAG1nB,EAAE,CAACouB,MAAH,CAAU1I,IAAV,KAAiB1lB,EAAE,CAACmuB,OAAH,CAAWzI,IAAX,MAAmB1lB,EAAE,CAAC0jB,GAAH,EAAvC,EAAgD;AAAC,mBAAO,EAAP;AAAU;AAAC,SAAzG,MAA6G;AAAC,cAAG1jB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAH,EAAuB;AAAC,mBAAO,EAAP;AAAU;AAAC;;AAAA,eAAO,CAAP;AAAS,OAAnkH;;AAAokHgI,MAAAA,OAAO,CAAChK,IAAD,EAAM0F,KAAN,EAAY;AAAC,YAAG,CAAC1F,IAAJ,EAAS;AAAC,iBAAO,EAAP;AAAU;;AAAA,YAAG1lB,EAAE,CAACkpB,MAAH,CAAUxD,IAAI,CAACgC,IAAf,CAAH,EAAwB;AAAC,iBAAO,EAAP;AAAU,SAAnC,MAAwC,IAAG1nB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAH,EAAuB;AAAC,cAAG1nB,EAAE,CAACkvB,uBAAH,CAA2B9D,KAA3B,MAAoC,GAApC,IAAyCA,KAAK,GAAC,GAAlD,EAAsD;AAAC,mBAAO,EAAP;AAAU;AAAC;;AAAA,eAAOprB,EAAE,CAACqvB,eAAH,CAAmB3J,IAAnB,EAAwB1lB,EAAE,CAACkvB,uBAAH,CAA2B9D,KAA3B,CAAxB,CAAP;AAAkE,OAAhzH;;AAAizHuE,MAAAA,YAAY,EAAC,IAA9zH;;AAAm0HC,MAAAA,MAAM,GAAE;AAAC,aAAI,IAAIC,EAAE,GAAC,CAAX,EAAaA,EAAE,IAAE7vB,EAAE,CAAC2vB,YAApB,EAAiCE,EAAE,EAAnC,EAAsC;AAAC,cAAG,CAAC7vB,EAAE,CAACktB,OAAH,CAAW2C,EAAX,CAAJ,EAAmB;AAAC,mBAAOA,EAAP;AAAU;AAAC;;AAAA,cAAM,IAAI7vB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B,OAA96H;;AAA+6HkK,MAAAA,gBAAgB,CAACD,EAAD,EAAI;AAAC,YAAIrK,MAAM,GAACxlB,EAAE,CAAC+vB,SAAH,CAAaF,EAAb,CAAX;;AAA4B,YAAG,CAACrK,MAAJ,EAAW;AAAC,gBAAM,IAAIxlB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,eAAOJ,MAAP;AAAc,OAArhI;;AAAshIuK,MAAAA,SAAS,EAACF,EAAE,IAAE7vB,EAAE,CAACktB,OAAH,CAAW2C,EAAX,CAApiI;;AAAmjIG,MAAAA,YAAY,CAACxK,MAAD,EAAc;AAAA,YAANqK,EAAM,uEAAH,CAAC,CAAE;;AAAC,YAAG,CAAC7vB,EAAE,CAACiwB,QAAP,EAAgB;AAACjwB,UAAAA,EAAE,CAACiwB,QAAH,GAAY,YAAU;AAAC,iBAAKC,MAAL,GAAY,EAAZ;AAAe,WAAtC;;AAAuClwB,UAAAA,EAAE,CAACiwB,QAAH,CAAYhjB,SAAZ,GAAsB,EAAtB;AAAyB9R,UAAAA,MAAM,CAACg1B,gBAAP,CAAwBnwB,EAAE,CAACiwB,QAAH,CAAYhjB,SAApC,EAA8C;AAACmjB,YAAAA,MAAM,EAAC;AAACpe,cAAAA,GAAG,GAAE;AAAC,uBAAO,KAAK0T,IAAZ;AAAiB,eAAxB;;AAAyB7N,cAAAA,GAAG,CAAC4O,GAAD,EAAK;AAAC,qBAAKf,IAAL,GAAUe,GAAV;AAAc;;AAAhD,aAAR;AAA0D4J,YAAAA,MAAM,EAAC;AAACre,cAAAA,GAAG,GAAE;AAAC,uBAAM,CAAC,KAAKoZ,KAAL,GAAW,OAAZ,MAAuB,CAA7B;AAA+B;;AAAtC,aAAjE;AAAyGkF,YAAAA,OAAO,EAAC;AAACte,cAAAA,GAAG,GAAE;AAAC,uBAAM,CAAC,KAAKoZ,KAAL,GAAW,OAAZ,MAAuB,CAA7B;AAA+B;;AAAtC,aAAjH;AAAyJmF,YAAAA,QAAQ,EAAC;AAACve,cAAAA,GAAG,GAAE;AAAC,uBAAO,KAAKoZ,KAAL,GAAW,IAAlB;AAAuB;;AAA9B,aAAlK;AAAkMA,YAAAA,KAAK,EAAC;AAACpZ,cAAAA,GAAG,GAAE;AAAC,uBAAO,KAAKke,MAAL,CAAY9E,KAAnB;AAAyB,eAAhC;;AAAiCvT,cAAAA,GAAG,CAAC4O,GAAD,EAAK;AAAC,qBAAKyJ,MAAL,CAAY9E,KAAZ,GAAkB3E,GAAlB;AAAsB;;AAAhE,aAAxM;AAA0QuE,YAAAA,QAAQ,EAAC;AAAChZ,cAAAA,GAAG,GAAE;AAAC,uBAAO,KAAKke,MAAL,CAAYlF,QAAnB;AAA4B,eAAnC;;AAAoCnT,cAAAA,GAAG,CAAC4O,GAAD,EAAK;AAAC,qBAAKyJ,MAAL,CAAYlF,QAAZ,GAAqBvE,GAArB;AAAyB;;AAAtE;AAAnR,WAA9C;AAA2Y;;AAAAjB,QAAAA,MAAM,GAACrqB,MAAM,CAACC,MAAP,CAAc,IAAI4E,EAAE,CAACiwB,QAAP,EAAd,EAA8BzK,MAA9B,CAAP;;AAA6C,YAAGqK,EAAE,IAAE,CAAC,CAAR,EAAU;AAACA,UAAAA,EAAE,GAAC7vB,EAAE,CAAC4vB,MAAH,EAAH;AAAe;;AAAApK,QAAAA,MAAM,CAACqK,EAAP,GAAUA,EAAV;AAAa7vB,QAAAA,EAAE,CAACktB,OAAH,CAAW2C,EAAX,IAAerK,MAAf;AAAsB,eAAOA,MAAP;AAAc,OAAlqJ;;AAAmqJgL,MAAAA,WAAW,CAACX,EAAD,EAAI;AAAC7vB,QAAAA,EAAE,CAACktB,OAAH,CAAW2C,EAAX,IAAe,IAAf;AAAoB,OAAvsJ;;AAAwsJhH,MAAAA,iBAAiB,EAAC;AAACjsB,QAAAA,IAAI,CAAC4oB,MAAD,EAAQ;AAAC,cAAIiL,MAAM,GAACzwB,EAAE,CAAC0wB,SAAH,CAAalL,MAAM,CAACE,IAAP,CAAYC,IAAzB,CAAX;AAA0CH,UAAAA,MAAM,CAACD,UAAP,GAAkBkL,MAAM,CAAClL,UAAzB;;AAAoC,cAAGC,MAAM,CAACD,UAAP,CAAkB3oB,IAArB,EAA0B;AAAC4oB,YAAAA,MAAM,CAACD,UAAP,CAAkB3oB,IAAlB,CAAuB4oB,MAAvB;AAA+B;AAAC,SAAvJ;;AAAwJ+C,QAAAA,MAAM,GAAE;AAAC,gBAAM,IAAIvoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAA7L,OAA1tJ;AAAy5J+K,MAAAA,KAAK,EAACzL,GAAG,IAAEA,GAAG,IAAE,CAAz6J;AAA26J0L,MAAAA,KAAK,EAAC1L,GAAG,IAAEA,GAAG,GAAC,GAA17J;AAA87J2L,MAAAA,OAAO,EAAC,CAACC,EAAD,EAAIC,EAAJ,KAASD,EAAE,IAAE,CAAJ,GAAMC,EAAr9J;;AAAw9JzL,MAAAA,cAAc,CAACJ,GAAD,EAAKC,GAAL,EAAS;AAACnlB,QAAAA,EAAE,CAACitB,OAAH,CAAW/H,GAAX,IAAgB;AAACK,UAAAA,UAAU,EAACJ;AAAZ,SAAhB;AAAiC,OAAjhK;;AAAkhKuL,MAAAA,SAAS,EAACxL,GAAG,IAAEllB,EAAE,CAACitB,OAAH,CAAW/H,GAAX,CAAjiK;;AAAijK8L,MAAAA,SAAS,CAACzJ,KAAD,EAAO;AAAC,YAAIyF,MAAM,GAAC,EAAX;AAAc,YAAIiE,KAAK,GAAC,CAAC1J,KAAD,CAAV;;AAAkB,eAAM0J,KAAK,CAACtxB,MAAZ,EAAmB;AAAC,cAAIuxB,CAAC,GAACD,KAAK,CAAC5rB,GAAN,EAAN;AAAkB2nB,UAAAA,MAAM,CAAClmB,IAAP,CAAYoqB,CAAZ;AAAeD,UAAAA,KAAK,CAACnqB,IAAN,CAAW4I,KAAX,CAAiBuhB,KAAjB,EAAuBC,CAAC,CAAClE,MAAzB;AAAiC;;AAAA,eAAOA,MAAP;AAAc,OAAtsK;;AAAusKmE,MAAAA,MAAM,CAACC,QAAD,EAAUlwB,QAAV,EAAmB;AAAC,YAAG,OAAOkwB,QAAP,IAAiB,UAApB,EAA+B;AAAClwB,UAAAA,QAAQ,GAACkwB,QAAT;AAAkBA,UAAAA,QAAQ,GAAC,KAAT;AAAe;;AAAApxB,QAAAA,EAAE,CAACutB,cAAH;;AAAoB,YAAGvtB,EAAE,CAACutB,cAAH,GAAkB,CAArB,EAAuB;AAAC/vB,UAAAA,GAAG,CAAE,YAAWwC,EAAE,CAACutB,cAAe,yEAA/B,CAAH;AAA4G;;AAAA,YAAIP,MAAM,GAAChtB,EAAE,CAACgxB,SAAH,CAAahxB,EAAE,CAAC2iB,IAAH,CAAQ4E,KAArB,CAAX;AAAuC,YAAI8J,SAAS,GAAC,CAAd;;AAAgB,iBAASC,UAAT,CAAoB1C,OAApB,EAA4B;AAAC5uB,UAAAA,EAAE,CAACutB,cAAH;AAAoB,iBAAOrsB,QAAQ,CAAC0tB,OAAD,CAAf;AAAyB;;AAAA,iBAAS2C,IAAT,CAAc3C,OAAd,EAAsB;AAAC,cAAGA,OAAH,EAAW;AAAC,gBAAG,CAAC2C,IAAI,CAACC,OAAT,EAAiB;AAACD,cAAAA,IAAI,CAACC,OAAL,GAAa,IAAb;AAAkB,qBAAOF,UAAU,CAAC1C,OAAD,CAAjB;AAA2B;;AAAA;AAAO;;AAAA,cAAG,EAAEyC,SAAF,IAAarE,MAAM,CAACrtB,MAAvB,EAA8B;AAAC2xB,YAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB;AAAC;;AAAAtE,QAAAA,MAAM,CAAC7mB,OAAP,CAAeohB,KAAK,IAAE;AAAC,cAAG,CAACA,KAAK,CAAC1jB,IAAN,CAAWstB,MAAf,EAAsB;AAAC,mBAAOI,IAAI,CAAC,IAAD,CAAX;AAAkB;;AAAAhK,UAAAA,KAAK,CAAC1jB,IAAN,CAAWstB,MAAX,CAAkB5J,KAAlB,EAAwB6J,QAAxB,EAAiCG,IAAjC;AAAuC,SAAvG;AAAyG,OAA9zL;;AAA+zLhK,MAAAA,KAAK,CAAC1jB,IAAD,EAAM4pB,IAAN,EAAWY,UAAX,EAAsB;AAAC,YAAI1L,IAAI,GAAC0L,UAAU,KAAG,GAAtB;AAA0B,YAAIoD,MAAM,GAAC,CAACpD,UAAZ;AAAuB,YAAI3I,IAAJ;;AAAS,YAAG/C,IAAI,IAAE3iB,EAAE,CAAC2iB,IAAZ,EAAiB;AAAC,gBAAM,IAAI3iB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B,SAA9C,MAAmD,IAAG,CAACjD,IAAD,IAAO,CAAC8O,MAAX,EAAkB;AAAC,cAAIzJ,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAca,UAAd,EAAyB;AAACV,YAAAA,YAAY,EAAC;AAAd,WAAzB,CAAX;AAA0DU,UAAAA,UAAU,GAACrG,MAAM,CAAClsB,IAAlB;AAAuB4pB,UAAAA,IAAI,GAACsC,MAAM,CAACtC,IAAZ;;AAAiB,cAAG1lB,EAAE,CAACguB,YAAH,CAAgBtI,IAAhB,CAAH,EAAyB;AAAC,kBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,cAAG,CAAC5lB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAJ,EAAwB;AAAC,kBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;AAAC;;AAAA,YAAI2B,KAAK,GAAC;AAAC1jB,UAAAA,IAAI,EAACA,IAAN;AAAW4pB,UAAAA,IAAI,EAACA,IAAhB;AAAqBY,UAAAA,UAAU,EAACA,UAAhC;AAA2CrB,UAAAA,MAAM,EAAC;AAAlD,SAAV;AAAgE,YAAI0E,SAAS,GAAC7tB,IAAI,CAAC0jB,KAAL,CAAWA,KAAX,CAAd;AAAgCmK,QAAAA,SAAS,CAACnK,KAAV,GAAgBA,KAAhB;AAAsBA,QAAAA,KAAK,CAAC5E,IAAN,GAAW+O,SAAX;;AAAqB,YAAG/O,IAAH,EAAQ;AAAC3iB,UAAAA,EAAE,CAAC2iB,IAAH,GAAQ+O,SAAR;AAAkB,SAA3B,MAAgC,IAAGhM,IAAH,EAAQ;AAACA,UAAAA,IAAI,CAACuI,OAAL,GAAa1G,KAAb;;AAAmB,cAAG7B,IAAI,CAAC6B,KAAR,EAAc;AAAC7B,YAAAA,IAAI,CAAC6B,KAAL,CAAWyF,MAAX,CAAkBlmB,IAAlB,CAAuBygB,KAAvB;AAA8B;AAAC;;AAAA,eAAOmK,SAAP;AAAiB,OAA/6M;;AAAg7MC,MAAAA,OAAO,CAACtD,UAAD,EAAY;AAAC,YAAIrG,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAca,UAAd,EAAyB;AAACV,UAAAA,YAAY,EAAC;AAAd,SAAzB,CAAX;;AAA0D,YAAG,CAAC3tB,EAAE,CAACguB,YAAH,CAAgBhG,MAAM,CAACtC,IAAvB,CAAJ,EAAiC;AAAC,gBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIF,IAAI,GAACsC,MAAM,CAACtC,IAAhB;AAAqB,YAAI6B,KAAK,GAAC7B,IAAI,CAACuI,OAAf;AAAuB,YAAIjB,MAAM,GAAChtB,EAAE,CAACgxB,SAAH,CAAazJ,KAAb,CAAX;AAA+BpsB,QAAAA,MAAM,CAAC+Q,IAAP,CAAYlM,EAAE,CAACotB,SAAf,EAA0BjnB,OAA1B,CAAkCqoB,IAAI,IAAE;AAAC,cAAIX,OAAO,GAAC7tB,EAAE,CAACotB,SAAH,CAAaoB,IAAb,CAAZ;;AAA+B,iBAAMX,OAAN,EAAc;AAAC,gBAAI+D,IAAI,GAAC/D,OAAO,CAACa,SAAjB;;AAA2B,gBAAG1B,MAAM,CAAC9a,QAAP,CAAgB2b,OAAO,CAACtG,KAAxB,CAAH,EAAkC;AAACvnB,cAAAA,EAAE,CAACgvB,WAAH,CAAenB,OAAf;AAAwB;;AAAAA,YAAAA,OAAO,GAAC+D,IAAR;AAAa;AAAC,SAA3L;AAA6LlM,QAAAA,IAAI,CAACuI,OAAL,GAAa,IAAb;AAAkB,YAAI9R,GAAG,GAACuJ,IAAI,CAAC6B,KAAL,CAAWyF,MAAX,CAAkB3wB,OAAlB,CAA0BkrB,KAA1B,CAAR;AAAyC7B,QAAAA,IAAI,CAAC6B,KAAL,CAAWyF,MAAX,CAAkBtW,MAAlB,CAAyByF,GAAzB,EAA6B,CAA7B;AAAgC,OAA/5N;;AAAg6N6L,MAAAA,MAAM,CAACP,MAAD,EAAQtf,IAAR,EAAa;AAAC,eAAOsf,MAAM,CAACK,QAAP,CAAgBE,MAAhB,CAAuBP,MAAvB,EAA8Btf,IAA9B,CAAP;AAA2C,OAA/9N;;AAAg+N8f,MAAAA,KAAK,CAACnsB,IAAD,EAAM4rB,IAAN,EAAWxC,GAAX,EAAe;AAAC,YAAI8C,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAAC2rB,UAAAA,MAAM,EAAC;AAAR,SAAnB,CAAX;AAA6C,YAAIA,MAAM,GAACO,MAAM,CAACtC,IAAlB;AAAuB,YAAIvd,IAAI,GAACsZ,IAAI,CAACoB,QAAL,CAAc/mB,IAAd,CAAT;;AAA6B,YAAG,CAACqM,IAAD,IAAOA,IAAI,KAAG,GAAd,IAAmBA,IAAI,KAAG,IAA7B,EAAkC;AAAC,gBAAM,IAAInI,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIgJ,OAAO,GAAC5uB,EAAE,CAACsvB,SAAH,CAAa7H,MAAb,EAAoBtf,IAApB,CAAZ;;AAAsC,YAAGymB,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAA,YAAG,CAACnH,MAAM,CAACK,QAAP,CAAgBG,KAApB,EAA0B;AAAC,gBAAM,IAAIjoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAO6B,MAAM,CAACK,QAAP,CAAgBG,KAAhB,CAAsBR,MAAtB,EAA6Btf,IAA7B,EAAkCuf,IAAlC,EAAuCxC,GAAvC,CAAP;AAAmD,OAAl1O;;AAAm1O5X,MAAAA,MAAM,CAACxR,IAAD,EAAM4rB,IAAN,EAAW;AAACA,QAAAA,IAAI,GAACA,IAAI,KAAG/sB,SAAP,GAAiB+sB,IAAjB,GAAsB,GAA3B;AAA+BA,QAAAA,IAAI,IAAE,IAAN;AAAWA,QAAAA,IAAI,IAAE,KAAN;AAAY,eAAO1nB,EAAE,CAACioB,KAAH,CAASnsB,IAAT,EAAc4rB,IAAd,EAAmB,CAAnB,CAAP;AAA6B,OAAx7O;;AAAy7OmK,MAAAA,KAAK,CAAC/1B,IAAD,EAAM4rB,IAAN,EAAW;AAACA,QAAAA,IAAI,GAACA,IAAI,KAAG/sB,SAAP,GAAiB+sB,IAAjB,GAAsB,GAA3B;AAA+BA,QAAAA,IAAI,IAAE,MAAI,GAAV;AAAcA,QAAAA,IAAI,IAAE,KAAN;AAAY,eAAO1nB,EAAE,CAACioB,KAAH,CAASnsB,IAAT,EAAc4rB,IAAd,EAAmB,CAAnB,CAAP;AAA6B,OAAhiP;;AAAiiPoK,MAAAA,SAAS,CAACh2B,IAAD,EAAM4rB,IAAN,EAAW;AAAC,YAAIqK,IAAI,GAACj2B,IAAI,CAACymB,KAAL,CAAW,GAAX,CAAT;AAAyB,YAAIyP,CAAC,GAAC,EAAN;;AAAS,aAAI,IAAIzrB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwrB,IAAI,CAACpyB,MAAnB,EAA0B,EAAE4G,CAA5B,EAA8B;AAAC,cAAG,CAACwrB,IAAI,CAACxrB,CAAD,CAAR,EAAY;AAASyrB,UAAAA,CAAC,IAAE,MAAID,IAAI,CAACxrB,CAAD,CAAX;;AAAe,cAAG;AAACvG,YAAAA,EAAE,CAAC6xB,KAAH,CAASG,CAAT,EAAWtK,IAAX;AAAiB,WAArB,CAAqB,OAAMtmB,CAAN,EAAQ;AAAC,gBAAGA,CAAC,CAACquB,KAAF,IAAS,EAAZ,EAAe,MAAMruB,CAAN;AAAQ;AAAC;AAAC,OAAltP;;AAAmtP6wB,MAAAA,KAAK,CAACn2B,IAAD,EAAM4rB,IAAN,EAAWxC,GAAX,EAAe;AAAC,YAAG,OAAOA,GAAP,IAAY,WAAf,EAA2B;AAACA,UAAAA,GAAG,GAACwC,IAAJ;AAASA,UAAAA,IAAI,GAAC,GAAL;AAAS;;AAAAA,QAAAA,IAAI,IAAE,IAAN;AAAW,eAAO1nB,EAAE,CAACioB,KAAH,CAASnsB,IAAT,EAAc4rB,IAAd,EAAmBxC,GAAnB,CAAP;AAA+B,OAAh0P;;AAAi0PoD,MAAAA,OAAO,CAACyC,OAAD,EAASmH,OAAT,EAAiB;AAAC,YAAG,CAAC3O,OAAO,CAACvoB,OAAR,CAAgB+vB,OAAhB,CAAJ,EAA6B;AAAC,gBAAM,IAAI/qB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIoC,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc0E,OAAd,EAAsB;AAACzK,UAAAA,MAAM,EAAC;AAAR,SAAtB,CAAX;AAAgD,YAAIA,MAAM,GAACO,MAAM,CAACtC,IAAlB;;AAAuB,YAAG,CAAC+B,MAAJ,EAAW;AAAC,gBAAM,IAAIznB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIkF,OAAO,GAACrJ,IAAI,CAACoB,QAAL,CAAcqP,OAAd,CAAZ;AAAmC,YAAItD,OAAO,GAAC5uB,EAAE,CAACsvB,SAAH,CAAa7H,MAAb,EAAoBqD,OAApB,CAAZ;;AAAyC,YAAG8D,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAA,YAAG,CAACnH,MAAM,CAACK,QAAP,CAAgBQ,OAApB,EAA4B;AAAC,gBAAM,IAAItoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAO6B,MAAM,CAACK,QAAP,CAAgBQ,OAAhB,CAAwBb,MAAxB,EAA+BqD,OAA/B,EAAuCC,OAAvC,CAAP;AAAuD,OAA5uQ;;AAA6uQ7C,MAAAA,MAAM,CAACiK,QAAD,EAAUC,QAAV,EAAmB;AAAC,YAAIC,WAAW,GAAC5Q,IAAI,CAACiB,OAAL,CAAayP,QAAb,CAAhB;AAAuC,YAAIG,WAAW,GAAC7Q,IAAI,CAACiB,OAAL,CAAa0P,QAAb,CAAhB;AAAuC,YAAIG,QAAQ,GAAC9Q,IAAI,CAACoB,QAAL,CAAcsP,QAAd,CAAb;AAAqC,YAAI1H,QAAQ,GAAChJ,IAAI,CAACoB,QAAL,CAAcuP,QAAd,CAAb;AAAqC,YAAIpK,MAAJ,EAAWwK,OAAX,EAAmBhI,OAAnB;AAA2BxC,QAAAA,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc2E,QAAd,EAAuB;AAAC1K,UAAAA,MAAM,EAAC;AAAR,SAAvB,CAAP;AAA6C+K,QAAAA,OAAO,GAACxK,MAAM,CAACtC,IAAf;AAAoBsC,QAAAA,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc4E,QAAd,EAAuB;AAAC3K,UAAAA,MAAM,EAAC;AAAR,SAAvB,CAAP;AAA6C+C,QAAAA,OAAO,GAACxC,MAAM,CAACtC,IAAf;AAAoB,YAAG,CAAC8M,OAAD,IAAU,CAAChI,OAAd,EAAsB,MAAM,IAAIxqB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;;AAA4B,YAAG4M,OAAO,CAACjL,KAAR,KAAgBiD,OAAO,CAACjD,KAA3B,EAAiC;AAAC,gBAAM,IAAIvnB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAI2E,QAAQ,GAACvqB,EAAE,CAAC2qB,UAAH,CAAc6H,OAAd,EAAsBD,QAAtB,CAAb;AAA6C,YAAI5O,QAAQ,GAACJ,OAAO,CAACI,QAAR,CAAiBwO,QAAjB,EAA0BG,WAA1B,CAAb;;AAAoD,YAAG3O,QAAQ,CAAChC,MAAT,CAAgB,CAAhB,MAAqB,GAAxB,EAA4B;AAAC,gBAAM,IAAI3hB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAjC,QAAAA,QAAQ,GAACJ,OAAO,CAACI,QAAR,CAAiByO,QAAjB,EAA0BC,WAA1B,CAAT;;AAAgD,YAAG1O,QAAQ,CAAChC,MAAT,CAAgB,CAAhB,MAAqB,GAAxB,EAA4B;AAAC,gBAAM,IAAI3hB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAI8E,QAAJ;;AAAa,YAAG;AAACA,UAAAA,QAAQ,GAAC1qB,EAAE,CAAC2qB,UAAH,CAAcH,OAAd,EAAsBC,QAAtB,CAAT;AAAyC,SAA7C,CAA6C,OAAMrpB,CAAN,EAAQ,CAAE;;AAAA,YAAGmpB,QAAQ,KAAGG,QAAd,EAAuB;AAAC;AAAO;;AAAA,YAAI8E,KAAK,GAACxvB,EAAE,CAAC8oB,KAAH,CAASyB,QAAQ,CAAC7C,IAAlB,CAAV;AAAkC,YAAIkH,OAAO,GAAC5uB,EAAE,CAACuvB,SAAH,CAAaiD,OAAb,EAAqBD,QAArB,EAA8B/C,KAA9B,CAAZ;;AAAiD,YAAGZ,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAAA,QAAAA,OAAO,GAAClE,QAAQ,GAAC1qB,EAAE,CAACuvB,SAAH,CAAa/E,OAAb,EAAqBC,QAArB,EAA8B+E,KAA9B,CAAD,GAAsCxvB,EAAE,CAACsvB,SAAH,CAAa9E,OAAb,EAAqBC,QAArB,CAAtD;;AAAqF,YAAGmE,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAA,YAAG,CAAC4D,OAAO,CAAC1K,QAAR,CAAiBI,MAArB,EAA4B;AAAC,gBAAM,IAAIloB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAACguB,YAAH,CAAgBzD,QAAhB,KAA2BG,QAAQ,IAAE1qB,EAAE,CAACguB,YAAH,CAAgBtD,QAAhB,CAAxC,EAAkE;AAAC,gBAAM,IAAI1qB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG4E,OAAO,KAAGgI,OAAb,EAAqB;AAAC5D,UAAAA,OAAO,GAAC5uB,EAAE,CAACqvB,eAAH,CAAmBmD,OAAnB,EAA2B,GAA3B,CAAR;;AAAwC,cAAG5D,OAAH,EAAW;AAAC,kBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;AAAC;;AAAA5uB,QAAAA,EAAE,CAAC2uB,cAAH,CAAkBpE,QAAlB;;AAA4B,YAAG;AAACiI,UAAAA,OAAO,CAAC1K,QAAR,CAAiBI,MAAjB,CAAwBqC,QAAxB,EAAiCC,OAAjC,EAAyCC,QAAzC;AAAmD,SAAvD,CAAuD,OAAMrpB,CAAN,EAAQ;AAAC,gBAAMA,CAAN;AAAQ,SAAxE,SAA+E;AAACpB,UAAAA,EAAE,CAACyuB,WAAH,CAAelE,QAAf;AAAyB;AAAC,OAA9pT;;AAA+pTnC,MAAAA,KAAK,CAACtsB,IAAD,EAAM;AAAC,YAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAAC2rB,UAAAA,MAAM,EAAC;AAAR,SAAnB,CAAX;AAA6C,YAAIA,MAAM,GAACO,MAAM,CAACtC,IAAlB;AAAuB,YAAIvd,IAAI,GAACsZ,IAAI,CAACoB,QAAL,CAAc/mB,IAAd,CAAT;AAA6B,YAAI4pB,IAAI,GAAC1lB,EAAE,CAAC2qB,UAAH,CAAclD,MAAd,EAAqBtf,IAArB,CAAT;AAAoC,YAAIymB,OAAO,GAAC5uB,EAAE,CAACuvB,SAAH,CAAa9H,MAAb,EAAoBtf,IAApB,EAAyB,IAAzB,CAAZ;;AAA2C,YAAGymB,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAA,YAAG,CAACnH,MAAM,CAACK,QAAP,CAAgBM,KAApB,EAA0B;AAAC,gBAAM,IAAIpoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAACguB,YAAH,CAAgBtI,IAAhB,CAAH,EAAyB;AAAC,gBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA6B,QAAAA,MAAM,CAACK,QAAP,CAAgBM,KAAhB,CAAsBX,MAAtB,EAA6Btf,IAA7B;AAAmCnI,QAAAA,EAAE,CAACgvB,WAAH,CAAetJ,IAAf;AAAqB,OAA7iU;;AAA8iU2C,MAAAA,OAAO,CAACvsB,IAAD,EAAM;AAAC,YAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,UAAAA,MAAM,EAAC;AAAR,SAAnB,CAAX;AAA6C,YAAIxI,IAAI,GAACsC,MAAM,CAACtC,IAAhB;;AAAqB,YAAG,CAACA,IAAI,CAACoC,QAAL,CAAcO,OAAlB,EAA0B;AAAC,gBAAM,IAAIroB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAOF,IAAI,CAACoC,QAAL,CAAcO,OAAd,CAAsB3C,IAAtB,CAAP;AAAmC,OAAxtU;;AAAytUyC,MAAAA,MAAM,CAACrsB,IAAD,EAAM;AAAC,YAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAAC2rB,UAAAA,MAAM,EAAC;AAAR,SAAnB,CAAX;AAA6C,YAAIA,MAAM,GAACO,MAAM,CAACtC,IAAlB;;AAAuB,YAAG,CAAC+B,MAAJ,EAAW;AAAC,gBAAM,IAAIznB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIzd,IAAI,GAACsZ,IAAI,CAACoB,QAAL,CAAc/mB,IAAd,CAAT;AAA6B,YAAI4pB,IAAI,GAAC1lB,EAAE,CAAC2qB,UAAH,CAAclD,MAAd,EAAqBtf,IAArB,CAAT;AAAoC,YAAIymB,OAAO,GAAC5uB,EAAE,CAACuvB,SAAH,CAAa9H,MAAb,EAAoBtf,IAApB,EAAyB,KAAzB,CAAZ;;AAA4C,YAAGymB,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAA,YAAG,CAACnH,MAAM,CAACK,QAAP,CAAgBK,MAApB,EAA2B;AAAC,gBAAM,IAAInoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAACguB,YAAH,CAAgBtI,IAAhB,CAAH,EAAyB;AAAC,gBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA6B,QAAAA,MAAM,CAACK,QAAP,CAAgBK,MAAhB,CAAuBV,MAAvB,EAA8Btf,IAA9B;AAAoCnI,QAAAA,EAAE,CAACgvB,WAAH,CAAetJ,IAAf;AAAqB,OAAnpV;;AAAopViD,MAAAA,QAAQ,CAAC7sB,IAAD,EAAM;AAAC,YAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,CAAX;AAA+B,YAAI4sB,IAAI,GAACV,MAAM,CAACtC,IAAhB;;AAAqB,YAAG,CAACgD,IAAJ,EAAS;AAAC,gBAAM,IAAI1oB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAAC8C,IAAI,CAACZ,QAAL,CAAca,QAAlB,EAA2B;AAAC,gBAAM,IAAI3oB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAOrC,OAAO,CAACvoB,OAAR,CAAgBgF,EAAE,CAACmuB,OAAH,CAAWzF,IAAI,CAACjB,MAAhB,CAAhB,EAAwCiB,IAAI,CAACZ,QAAL,CAAca,QAAd,CAAuBD,IAAvB,CAAxC,CAAP;AAA6E,OAAl4V;;AAAm4V+J,MAAAA,IAAI,CAAC32B,IAAD,EAAM42B,UAAN,EAAiB;AAAC,YAAI1K,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,UAAAA,MAAM,EAAC,CAACwE;AAAT,SAAnB,CAAX;AAAoD,YAAIhN,IAAI,GAACsC,MAAM,CAACtC,IAAhB;;AAAqB,YAAG,CAACA,IAAJ,EAAS;AAAC,gBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACF,IAAI,CAACoC,QAAL,CAAcD,OAAlB,EAA0B;AAAC,gBAAM,IAAI7nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAOF,IAAI,CAACoC,QAAL,CAAcD,OAAd,CAAsBnC,IAAtB,CAAP;AAAmC,OAAlmW;;AAAmmWiN,MAAAA,KAAK,CAAC72B,IAAD,EAAM;AAAC,eAAOkE,EAAE,CAACyyB,IAAH,CAAQ32B,IAAR,EAAa,IAAb,CAAP;AAA0B,OAAzoW;;AAA0oW82B,MAAAA,KAAK,CAAC92B,IAAD,EAAM4rB,IAAN,EAAWgL,UAAX,EAAsB;AAAC,YAAIhN,IAAJ;;AAAS,YAAG,OAAO5pB,IAAP,IAAa,QAAhB,EAAyB;AAAC,cAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,YAAAA,MAAM,EAAC,CAACwE;AAAT,WAAnB,CAAX;AAAoDhN,UAAAA,IAAI,GAACsC,MAAM,CAACtC,IAAZ;AAAiB,SAA/F,MAAmG;AAACA,UAAAA,IAAI,GAAC5pB,IAAL;AAAU;;AAAA,YAAG,CAAC4pB,IAAI,CAACoC,QAAL,CAAcC,OAAlB,EAA0B;AAAC,gBAAM,IAAI/nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAF,QAAAA,IAAI,CAACoC,QAAL,CAAcC,OAAd,CAAsBrC,IAAtB,EAA2B;AAACgC,UAAAA,IAAI,EAACA,IAAI,GAAC,IAAL,GAAUhC,IAAI,CAACgC,IAAL,GAAU,CAAC,IAA3B;AAAgCtB,UAAAA,SAAS,EAACC,IAAI,CAACC,GAAL;AAA1C,SAA3B;AAAkF,OAAt6W;;AAAu6WuM,MAAAA,MAAM,CAAC/2B,IAAD,EAAM4rB,IAAN,EAAW;AAAC1nB,QAAAA,EAAE,CAAC4yB,KAAH,CAAS92B,IAAT,EAAc4rB,IAAd,EAAmB,IAAnB;AAAyB,OAAl9W;;AAAm9WoL,MAAAA,MAAM,CAACjD,EAAD,EAAInI,IAAJ,EAAS;AAAC,YAAIlC,MAAM,GAACxlB,EAAE,CAAC8vB,gBAAH,CAAoBD,EAApB,CAAX;AAAmC7vB,QAAAA,EAAE,CAAC4yB,KAAH,CAASpN,MAAM,CAACE,IAAhB,EAAqBgC,IAArB;AAA2B,OAAjiX;;AAAkiXqL,MAAAA,KAAK,CAACj3B,IAAD,EAAMguB,GAAN,EAAUC,GAAV,EAAc2I,UAAd,EAAyB;AAAC,YAAIhN,IAAJ;;AAAS,YAAG,OAAO5pB,IAAP,IAAa,QAAhB,EAAyB;AAAC,cAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,YAAAA,MAAM,EAAC,CAACwE;AAAT,WAAnB,CAAX;AAAoDhN,UAAAA,IAAI,GAACsC,MAAM,CAACtC,IAAZ;AAAiB,SAA/F,MAAmG;AAACA,UAAAA,IAAI,GAAC5pB,IAAL;AAAU;;AAAA,YAAG,CAAC4pB,IAAI,CAACoC,QAAL,CAAcC,OAAlB,EAA0B;AAAC,gBAAM,IAAI/nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAF,QAAAA,IAAI,CAACoC,QAAL,CAAcC,OAAd,CAAsBrC,IAAtB,EAA2B;AAACU,UAAAA,SAAS,EAACC,IAAI,CAACC,GAAL;AAAX,SAA3B;AAAmD,OAAlyX;;AAAmyX0M,MAAAA,MAAM,CAACl3B,IAAD,EAAMguB,GAAN,EAAUC,GAAV,EAAc;AAAC/pB,QAAAA,EAAE,CAAC+yB,KAAH,CAASj3B,IAAT,EAAcguB,GAAd,EAAkBC,GAAlB,EAAsB,IAAtB;AAA4B,OAAp1X;;AAAq1XkJ,MAAAA,MAAM,CAACpD,EAAD,EAAI/F,GAAJ,EAAQC,GAAR,EAAY;AAAC,YAAIvE,MAAM,GAACxlB,EAAE,CAAC8vB,gBAAH,CAAoBD,EAApB,CAAX;AAAmC7vB,QAAAA,EAAE,CAAC+yB,KAAH,CAASvN,MAAM,CAACE,IAAhB,EAAqBoE,GAArB,EAAyBC,GAAzB;AAA8B,OAAz6X;;AAA06XmJ,MAAAA,QAAQ,CAACp3B,IAAD,EAAMggB,GAAN,EAAU;AAAC,YAAGA,GAAG,GAAC,CAAP,EAAS;AAAC,gBAAM,IAAI9b,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIF,IAAJ;;AAAS,YAAG,OAAO5pB,IAAP,IAAa,QAAhB,EAAyB;AAAC,cAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,YAAAA,MAAM,EAAC;AAAR,WAAnB,CAAX;AAA6CxI,UAAAA,IAAI,GAACsC,MAAM,CAACtC,IAAZ;AAAiB,SAAxF,MAA4F;AAACA,UAAAA,IAAI,GAAC5pB,IAAL;AAAU;;AAAA,YAAG,CAAC4pB,IAAI,CAACoC,QAAL,CAAcC,OAAlB,EAA0B;AAAC,gBAAM,IAAI/nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAH,EAAuB;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAAC5lB,EAAE,CAACgpB,MAAH,CAAUtD,IAAI,CAACgC,IAAf,CAAJ,EAAyB;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIgJ,OAAO,GAAC5uB,EAAE,CAACqvB,eAAH,CAAmB3J,IAAnB,EAAwB,GAAxB,CAAZ;;AAAyC,YAAGkJ,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAAlJ,QAAAA,IAAI,CAACoC,QAAL,CAAcC,OAAd,CAAsBrC,IAAtB,EAA2B;AAACxc,UAAAA,IAAI,EAAC4S,GAAN;AAAUsK,UAAAA,SAAS,EAACC,IAAI,CAACC,GAAL;AAApB,SAA3B;AAA4D,OAAt4Y;;AAAu4Y6M,MAAAA,SAAS,CAACtD,EAAD,EAAI/T,GAAJ,EAAQ;AAAC,YAAI0J,MAAM,GAACxlB,EAAE,CAAC8vB,gBAAH,CAAoBD,EAApB,CAAX;;AAAmC,YAAG,CAACrK,MAAM,CAAC4F,KAAP,GAAa,OAAd,MAAyB,CAA5B,EAA8B;AAAC,gBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA5lB,QAAAA,EAAE,CAACkzB,QAAH,CAAY1N,MAAM,CAACE,IAAnB,EAAwB5J,GAAxB;AAA6B,OAAphZ;;AAAqhZsX,MAAAA,KAAK,CAACt3B,IAAD,EAAMkuB,KAAN,EAAYC,KAAZ,EAAkB;AAAC,YAAIjC,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,UAAAA,MAAM,EAAC;AAAR,SAAnB,CAAX;AAA6C,YAAIxI,IAAI,GAACsC,MAAM,CAACtC,IAAhB;AAAqBA,QAAAA,IAAI,CAACoC,QAAL,CAAcC,OAAd,CAAsBrC,IAAtB,EAA2B;AAACU,UAAAA,SAAS,EAACzF,IAAI,CAACG,GAAL,CAASkJ,KAAT,EAAeC,KAAf;AAAX,SAA3B;AAA8D,OAA7qZ;;AAA8qZrtB,MAAAA,IAAI,CAACd,IAAD,EAAMsvB,KAAN,EAAY1D,IAAZ,EAAiB;AAAC,YAAG5rB,IAAI,KAAG,EAAV,EAAa;AAAC,gBAAM,IAAIkE,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAwF,QAAAA,KAAK,GAAC,OAAOA,KAAP,IAAc,QAAd,GAAuByB,oBAAoB,CAACzB,KAAD,CAA3C,GAAmDA,KAAzD;AAA+D1D,QAAAA,IAAI,GAAC,OAAOA,IAAP,IAAa,WAAb,GAAyB,GAAzB,GAA6BA,IAAlC;;AAAuC,YAAG0D,KAAK,GAAC,EAAT,EAAY;AAAC1D,UAAAA,IAAI,GAACA,IAAI,GAAC,IAAL,GAAU,KAAf;AAAqB,SAAlC,MAAsC;AAACA,UAAAA,IAAI,GAAC,CAAL;AAAO;;AAAA,YAAIhC,IAAJ;;AAAS,YAAG,OAAO5pB,IAAP,IAAa,QAAhB,EAAyB;AAAC4pB,UAAAA,IAAI,GAAC5pB,IAAL;AAAU,SAApC,MAAwC;AAACA,UAAAA,IAAI,GAAC2lB,IAAI,CAACW,SAAL,CAAetmB,IAAf,CAAL;;AAA0B,cAAG;AAAC,gBAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,cAAAA,MAAM,EAAC,EAAE9C,KAAK,GAAC,MAAR;AAAR,aAAnB,CAAX;AAAwD1F,YAAAA,IAAI,GAACsC,MAAM,CAACtC,IAAZ;AAAiB,WAA7E,CAA6E,OAAMtkB,CAAN,EAAQ,CAAE;AAAC;;AAAA,YAAIiyB,OAAO,GAAC,KAAZ;;AAAkB,YAAGjI,KAAK,GAAC,EAAT,EAAY;AAAC,cAAG1F,IAAH,EAAQ;AAAC,gBAAG0F,KAAK,GAAC,GAAT,EAAa;AAAC,oBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;AAAC,WAApD,MAAwD;AAACF,YAAAA,IAAI,GAAC1lB,EAAE,CAACioB,KAAH,CAASnsB,IAAT,EAAc4rB,IAAd,EAAmB,CAAnB,CAAL;AAA2B2L,YAAAA,OAAO,GAAC,IAAR;AAAa;AAAC;;AAAA,YAAG,CAAC3N,IAAJ,EAAS;AAAC,gBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAACmpB,QAAH,CAAYzD,IAAI,CAACgC,IAAjB,CAAH,EAA0B;AAAC0D,UAAAA,KAAK,IAAE,CAAC,GAAR;AAAY;;AAAA,YAAGA,KAAK,GAAC,KAAN,IAAa,CAACprB,EAAE,CAAC8oB,KAAH,CAASpD,IAAI,CAACgC,IAAd,CAAjB,EAAqC;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACyN,OAAJ,EAAY;AAAC,cAAIzE,OAAO,GAAC5uB,EAAE,CAAC0vB,OAAH,CAAWhK,IAAX,EAAgB0F,KAAhB,CAAZ;;AAAmC,cAAGwD,OAAH,EAAW;AAAC,kBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;AAAC;;AAAA,YAAGxD,KAAK,GAAC,GAAN,IAAW,CAACiI,OAAf,EAAuB;AAACrzB,UAAAA,EAAE,CAACkzB,QAAH,CAAYxN,IAAZ,EAAiB,CAAjB;AAAoB;;AAAA0F,QAAAA,KAAK,IAAE,EAAE,MAAI,GAAJ,GAAQ,MAAV,CAAP;AAAyB,YAAI5F,MAAM,GAACxlB,EAAE,CAACgwB,YAAH,CAAgB;AAACtK,UAAAA,IAAI,EAACA,IAAN;AAAW5pB,UAAAA,IAAI,EAACkE,EAAE,CAACmuB,OAAH,CAAWzI,IAAX,CAAhB;AAAiC0F,UAAAA,KAAK,EAACA,KAAvC;AAA6CvF,UAAAA,QAAQ,EAAC,IAAtD;AAA2DmF,UAAAA,QAAQ,EAAC,CAApE;AAAsEzF,UAAAA,UAAU,EAACG,IAAI,CAACH,UAAtF;AAAiG+N,UAAAA,QAAQ,EAAC,EAA1G;AAA6G71B,UAAAA,KAAK,EAAC;AAAnH,SAAhB,CAAX;;AAAsJ,YAAG+nB,MAAM,CAACD,UAAP,CAAkB3oB,IAArB,EAA0B;AAAC4oB,UAAAA,MAAM,CAACD,UAAP,CAAkB3oB,IAAlB,CAAuB4oB,MAAvB;AAA+B;;AAAA,YAAGlrB,MAAM,CAAC,cAAD,CAAN,IAAwB,EAAE8wB,KAAK,GAAC,CAAR,CAA3B,EAAsC;AAAC,cAAG,CAACprB,EAAE,CAACuzB,SAAP,EAAiBvzB,EAAE,CAACuzB,SAAH,GAAa,EAAb;;AAAgB,cAAG,EAAEz3B,IAAI,IAAIkE,EAAE,CAACuzB,SAAb,CAAH,EAA2B;AAACvzB,YAAAA,EAAE,CAACuzB,SAAH,CAAaz3B,IAAb,IAAmB,CAAnB;AAAqB;AAAC;;AAAA,eAAO0pB,MAAP;AAAc,OAAjzb;;AAAkzbM,MAAAA,KAAK,CAACN,MAAD,EAAQ;AAAC,YAAGxlB,EAAE,CAACwzB,QAAH,CAAYhO,MAAZ,CAAH,EAAuB;AAAC,gBAAM,IAAIxlB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAGJ,MAAM,CAACiO,QAAV,EAAmBjO,MAAM,CAACiO,QAAP,GAAgB,IAAhB;;AAAqB,YAAG;AAAC,cAAGjO,MAAM,CAACD,UAAP,CAAkBO,KAArB,EAA2B;AAACN,YAAAA,MAAM,CAACD,UAAP,CAAkBO,KAAlB,CAAwBN,MAAxB;AAAgC;AAAC,SAAjE,CAAiE,OAAMpkB,CAAN,EAAQ;AAAC,gBAAMA,CAAN;AAAQ,SAAlF,SAAyF;AAACpB,UAAAA,EAAE,CAACwwB,WAAH,CAAehL,MAAM,CAACqK,EAAtB;AAA0B;;AAAArK,QAAAA,MAAM,CAACqK,EAAP,GAAU,IAAV;AAAe,OAA9hc;;AAA+hc2D,MAAAA,QAAQ,CAAChO,MAAD,EAAQ;AAAC,eAAOA,MAAM,CAACqK,EAAP,KAAY,IAAnB;AAAwB,OAAxkc;;AAAykctH,MAAAA,MAAM,CAAC/C,MAAD,EAAQQ,MAAR,EAAekF,MAAf,EAAsB;AAAC,YAAGlrB,EAAE,CAACwzB,QAAH,CAAYhO,MAAZ,CAAH,EAAuB;AAAC,gBAAM,IAAIxlB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG,CAACJ,MAAM,CAACK,QAAR,IAAkB,CAACL,MAAM,CAACD,UAAP,CAAkBgD,MAAxC,EAA+C;AAAC,gBAAM,IAAIvoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAGsF,MAAM,IAAE,CAAR,IAAWA,MAAM,IAAE,CAAnB,IAAsBA,MAAM,IAAE,CAAjC,EAAmC;AAAC,gBAAM,IAAIlrB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAJ,QAAAA,MAAM,CAACwF,QAAP,GAAgBxF,MAAM,CAACD,UAAP,CAAkBgD,MAAlB,CAAyB/C,MAAzB,EAAgCQ,MAAhC,EAAuCkF,MAAvC,CAAhB;AAA+D1F,QAAAA,MAAM,CAAC8N,QAAP,GAAgB,EAAhB;AAAmB,eAAO9N,MAAM,CAACwF,QAAd;AAAuB,OAA94c;;AAA+4chjB,MAAAA,IAAI,CAACwd,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BqrB,QAA7B,EAAsC;AAAC,YAAGrrB,MAAM,GAAC,CAAP,IAAUqrB,QAAQ,GAAC,CAAtB,EAAwB;AAAC,gBAAM,IAAIhrB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAACwzB,QAAH,CAAYhO,MAAZ,CAAH,EAAuB;AAAC,gBAAM,IAAIxlB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG,CAACJ,MAAM,CAAC4F,KAAP,GAAa,OAAd,MAAyB,CAA5B,EAA8B;AAAC,gBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG5lB,EAAE,CAAC8oB,KAAH,CAAStD,MAAM,CAACE,IAAP,CAAYgC,IAArB,CAAH,EAA8B;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACJ,MAAM,CAACD,UAAP,CAAkBvd,IAAtB,EAA2B;AAAC,gBAAM,IAAIhI,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAI8N,OAAO,GAAC,OAAO1I,QAAP,IAAiB,WAA7B;;AAAyC,YAAG,CAAC0I,OAAJ,EAAY;AAAC1I,UAAAA,QAAQ,GAACxF,MAAM,CAACwF,QAAhB;AAAyB,SAAtC,MAA2C,IAAG,CAACxF,MAAM,CAACK,QAAX,EAAoB;AAAC,gBAAM,IAAI7lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIO,SAAS,GAACX,MAAM,CAACD,UAAP,CAAkBvd,IAAlB,CAAuBwd,MAAvB,EAA8B1mB,MAA9B,EAAqCknB,MAArC,EAA4CrmB,MAA5C,EAAmDqrB,QAAnD,CAAd;AAA2E,YAAG,CAAC0I,OAAJ,EAAYlO,MAAM,CAACwF,QAAP,IAAiB7E,SAAjB;AAA2B,eAAOA,SAAP;AAAiB,OAAv9d;;AAAw9dle,MAAAA,KAAK,CAACud,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BqrB,QAA7B,EAAsCC,MAAtC,EAA6C;AAAC,YAAGtrB,MAAM,GAAC,CAAP,IAAUqrB,QAAQ,GAAC,CAAtB,EAAwB;AAAC,gBAAM,IAAIhrB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG5lB,EAAE,CAACwzB,QAAH,CAAYhO,MAAZ,CAAH,EAAuB;AAAC,gBAAM,IAAIxlB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG,CAACJ,MAAM,CAAC4F,KAAP,GAAa,OAAd,MAAyB,CAA5B,EAA8B;AAAC,gBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG5lB,EAAE,CAAC8oB,KAAH,CAAStD,MAAM,CAACE,IAAP,CAAYgC,IAArB,CAAH,EAA8B;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACJ,MAAM,CAACD,UAAP,CAAkBtd,KAAtB,EAA4B;AAAC,gBAAM,IAAIjI,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAGJ,MAAM,CAACK,QAAP,IAAiBL,MAAM,CAAC4F,KAAP,GAAa,IAAjC,EAAsC;AAACprB,UAAAA,EAAE,CAACuoB,MAAH,CAAU/C,MAAV,EAAiB,CAAjB,EAAmB,CAAnB;AAAsB;;AAAA,YAAIkO,OAAO,GAAC,OAAO1I,QAAP,IAAiB,WAA7B;;AAAyC,YAAG,CAAC0I,OAAJ,EAAY;AAAC1I,UAAAA,QAAQ,GAACxF,MAAM,CAACwF,QAAhB;AAAyB,SAAtC,MAA2C,IAAG,CAACxF,MAAM,CAACK,QAAX,EAAoB;AAAC,gBAAM,IAAI7lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAI+N,YAAY,GAACnO,MAAM,CAACD,UAAP,CAAkBtd,KAAlB,CAAwBud,MAAxB,EAA+B1mB,MAA/B,EAAsCknB,MAAtC,EAA6CrmB,MAA7C,EAAoDqrB,QAApD,EAA6DC,MAA7D,CAAjB;AAAsF,YAAG,CAACyI,OAAJ,EAAYlO,MAAM,CAACwF,QAAP,IAAiB2I,YAAjB;AAA8B,eAAOA,YAAP;AAAoB,OAAvnf;;AAAwnfvb,MAAAA,QAAQ,CAACoN,MAAD,EAAQQ,MAAR,EAAermB,MAAf,EAAsB;AAAC,YAAGK,EAAE,CAACwzB,QAAH,CAAYhO,MAAZ,CAAH,EAAuB;AAAC,gBAAM,IAAIxlB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAGI,MAAM,GAAC,CAAP,IAAUrmB,MAAM,IAAE,CAArB,EAAuB;AAAC,gBAAM,IAAIK,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACJ,MAAM,CAAC4F,KAAP,GAAa,OAAd,MAAyB,CAA5B,EAA8B;AAAC,gBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG,CAAC5lB,EAAE,CAACgpB,MAAH,CAAUxD,MAAM,CAACE,IAAP,CAAYgC,IAAtB,CAAD,IAA8B,CAAC1nB,EAAE,CAAC8oB,KAAH,CAAStD,MAAM,CAACE,IAAP,CAAYgC,IAArB,CAAlC,EAA6D;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAACJ,MAAM,CAACD,UAAP,CAAkBnN,QAAtB,EAA+B;AAAC,gBAAM,IAAIpY,EAAE,CAAC4lB,UAAP,CAAkB,GAAlB,CAAN;AAA6B;;AAAAJ,QAAAA,MAAM,CAACD,UAAP,CAAkBnN,QAAlB,CAA2BoN,MAA3B,EAAkCQ,MAAlC,EAAyCrmB,MAAzC;AAAiD,OAAhggB;;AAAiggB6oB,MAAAA,IAAI,CAAChD,MAAD,EAAQ7lB,MAAR,EAAeqrB,QAAf,EAAwBG,IAAxB,EAA6BC,KAA7B,EAAmC;AAAC,YAAG,CAACD,IAAI,GAAC,CAAN,MAAW,CAAX,IAAc,CAACC,KAAK,GAAC,CAAP,MAAY,CAA1B,IAA6B,CAAC5F,MAAM,CAAC4F,KAAP,GAAa,OAAd,MAAyB,CAAzD,EAA2D;AAAC,gBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG,CAACJ,MAAM,CAAC4F,KAAP,GAAa,OAAd,MAAyB,CAA5B,EAA8B;AAAC,gBAAM,IAAIprB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,YAAG,CAACJ,MAAM,CAACD,UAAP,CAAkBiD,IAAtB,EAA2B;AAAC,gBAAM,IAAIxoB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAOJ,MAAM,CAACD,UAAP,CAAkBiD,IAAlB,CAAuBhD,MAAvB,EAA8B7lB,MAA9B,EAAqCqrB,QAArC,EAA8CG,IAA9C,EAAmDC,KAAnD,CAAP;AAAiE,OAAnzgB;;AAAozgB3C,MAAAA,KAAK,CAACjD,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6B2rB,SAA7B,EAAuC;AAAC,YAAG,CAAC9F,MAAM,CAACD,UAAP,CAAkBkD,KAAtB,EAA4B;AAAC,iBAAO,CAAP;AAAS;;AAAA,eAAOjD,MAAM,CAACD,UAAP,CAAkBkD,KAAlB,CAAwBjD,MAAxB,EAA+B1mB,MAA/B,EAAsCknB,MAAtC,EAA6CrmB,MAA7C,EAAoD2rB,SAApD,CAAP;AAAsE,OAA78gB;;AAA88gBsI,MAAAA,MAAM,EAACpO,MAAM,IAAE,CAA79gB;;AAA+9gBqO,MAAAA,KAAK,CAACrO,MAAD,EAAQsO,GAAR,EAAYvU,GAAZ,EAAgB;AAAC,YAAG,CAACiG,MAAM,CAACD,UAAP,CAAkBsO,KAAtB,EAA4B;AAAC,gBAAM,IAAI7zB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,eAAOJ,MAAM,CAACD,UAAP,CAAkBsO,KAAlB,CAAwBrO,MAAxB,EAA+BsO,GAA/B,EAAmCvU,GAAnC,CAAP;AAA+C,OAA7lhB;;AAA8lhBwU,MAAAA,QAAQ,CAACj4B,IAAD,EAAc;AAAA,YAAR2xB,IAAQ,uEAAH,EAAG;AAACA,QAAAA,IAAI,CAACrC,KAAL,GAAWqC,IAAI,CAACrC,KAAL,IAAY,CAAvB;AAAyBqC,QAAAA,IAAI,CAACuG,QAAL,GAAcvG,IAAI,CAACuG,QAAL,IAAe,QAA7B;;AAAsC,YAAGvG,IAAI,CAACuG,QAAL,KAAgB,MAAhB,IAAwBvG,IAAI,CAACuG,QAAL,KAAgB,QAA3C,EAAoD;AAAC,gBAAM,IAAIhhB,KAAJ,CAAW,0BAAyBya,IAAI,CAACuG,QAAS,GAAlD,CAAN;AAA4D;;AAAA,YAAIrqB,GAAJ;AAAQ,YAAI6b,MAAM,GAACxlB,EAAE,CAACpD,IAAH,CAAQd,IAAR,EAAa2xB,IAAI,CAACrC,KAAlB,CAAX;AAAoC,YAAIqH,IAAI,GAACzyB,EAAE,CAACyyB,IAAH,CAAQ32B,IAAR,CAAT;AAAuB,YAAI6D,MAAM,GAAC8yB,IAAI,CAACvpB,IAAhB;AAAqB,YAAI+qB,GAAG,GAAC,IAAIj3B,UAAJ,CAAe2C,MAAf,CAAR;AAA+BK,QAAAA,EAAE,CAACgI,IAAH,CAAQwd,MAAR,EAAeyO,GAAf,EAAmB,CAAnB,EAAqBt0B,MAArB,EAA4B,CAA5B;;AAA+B,YAAG8tB,IAAI,CAACuG,QAAL,KAAgB,MAAnB,EAA0B;AAACrqB,UAAAA,GAAG,GAACsS,iBAAiB,CAACgY,GAAD,EAAK,CAAL,CAArB;AAA6B,SAAxD,MAA6D,IAAGxG,IAAI,CAACuG,QAAL,KAAgB,QAAnB,EAA4B;AAACrqB,UAAAA,GAAG,GAACsqB,GAAJ;AAAQ;;AAAAj0B,QAAAA,EAAE,CAAC8lB,KAAH,CAASN,MAAT;AAAiB,eAAO7b,GAAP;AAAW,OAAzjiB;;AAA0jiBuqB,MAAAA,SAAS,CAACp4B,IAAD,EAAMmf,IAAN,EAAmB;AAAA,YAARwS,IAAQ,uEAAH,EAAG;AAACA,QAAAA,IAAI,CAACrC,KAAL,GAAWqC,IAAI,CAACrC,KAAL,IAAY,GAAvB;AAA2B,YAAI5F,MAAM,GAACxlB,EAAE,CAACpD,IAAH,CAAQd,IAAR,EAAa2xB,IAAI,CAACrC,KAAlB,EAAwBqC,IAAI,CAAC/F,IAA7B,CAAX;;AAA8C,YAAG,OAAOzM,IAAP,IAAa,QAAhB,EAAyB;AAAC,cAAIgZ,GAAG,GAAC,IAAIj3B,UAAJ,CAAe6e,eAAe,CAACZ,IAAD,CAAf,GAAsB,CAArC,CAAR;AAAgD,cAAIkZ,cAAc,GAACjZ,iBAAiB,CAACD,IAAD,EAAMgZ,GAAN,EAAU,CAAV,EAAYA,GAAG,CAACt0B,MAAhB,CAApC;AAA4DK,UAAAA,EAAE,CAACiI,KAAH,CAASud,MAAT,EAAgByO,GAAhB,EAAoB,CAApB,EAAsBE,cAAtB,EAAqCx5B,SAArC,EAA+C8yB,IAAI,CAACxC,MAApD;AAA4D,SAAlM,MAAuM,IAAG7N,WAAW,CAACgX,MAAZ,CAAmBnZ,IAAnB,CAAH,EAA4B;AAACjb,UAAAA,EAAE,CAACiI,KAAH,CAASud,MAAT,EAAgBvK,IAAhB,EAAqB,CAArB,EAAuBA,IAAI,CAAC+E,UAA5B,EAAuCrlB,SAAvC,EAAiD8yB,IAAI,CAACxC,MAAtD;AAA8D,SAA3F,MAA+F;AAAC,gBAAM,IAAIjY,KAAJ,CAAU,uBAAV,CAAN;AAAyC;;AAAAhT,QAAAA,EAAE,CAAC8lB,KAAH,CAASN,MAAT;AAAiB,OAAjgjB;;AAAkgjB9B,MAAAA,GAAG,EAAC,MAAI1jB,EAAE,CAACqtB,WAA7gjB;;AAAyhjBgH,MAAAA,KAAK,CAACv4B,IAAD,EAAM;AAAC,YAAIksB,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,UAAAA,MAAM,EAAC;AAAR,SAAnB,CAAX;;AAA6C,YAAGlG,MAAM,CAACtC,IAAP,KAAc,IAAjB,EAAsB;AAAC,gBAAM,IAAI1lB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAG,CAAC5lB,EAAE,CAAC8oB,KAAH,CAASd,MAAM,CAACtC,IAAP,CAAYgC,IAArB,CAAJ,EAA+B;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAIgJ,OAAO,GAAC5uB,EAAE,CAACqvB,eAAH,CAAmBrH,MAAM,CAACtC,IAA1B,EAA+B,GAA/B,CAAZ;;AAAgD,YAAGkJ,OAAH,EAAW;AAAC,gBAAM,IAAI5uB,EAAE,CAAC4lB,UAAP,CAAkBgJ,OAAlB,CAAN;AAAiC;;AAAA5uB,QAAAA,EAAE,CAACqtB,WAAH,GAAerF,MAAM,CAAClsB,IAAtB;AAA2B,OAAzzjB;;AAA0zjBw4B,MAAAA,wBAAwB,GAAE;AAACt0B,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,MAAT;AAAiB7xB,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,OAAT;AAAkB7xB,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,gBAAT;AAA2B,OAAn5jB;;AAAo5jB0C,MAAAA,oBAAoB,GAAE;AAACv0B,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,MAAT;AAAiB7xB,QAAAA,EAAE,CAACslB,cAAH,CAAkBtlB,EAAE,CAAC6wB,OAAH,CAAW,CAAX,EAAa,CAAb,CAAlB,EAAkC;AAAC7oB,UAAAA,IAAI,EAAC,MAAI,CAAV;AAAYC,UAAAA,KAAK,EAAC,CAACud,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BsmB,GAA7B,KAAmCtmB;AAArD,SAAlC;AAAgGK,QAAAA,EAAE,CAACiyB,KAAH,CAAS,WAAT,EAAqBjyB,EAAE,CAAC6wB,OAAH,CAAW,CAAX,EAAa,CAAb,CAArB;AAAsCzwB,QAAAA,GAAG,CAACoO,QAAJ,CAAaxO,EAAE,CAAC6wB,OAAH,CAAW,CAAX,EAAa,CAAb,CAAb,EAA6BzwB,GAAG,CAAComB,eAAjC;AAAkDpmB,QAAAA,GAAG,CAACoO,QAAJ,CAAaxO,EAAE,CAAC6wB,OAAH,CAAW,CAAX,EAAa,CAAb,CAAb,EAA6BzwB,GAAG,CAAC+mB,gBAAjC;AAAmDnnB,QAAAA,EAAE,CAACiyB,KAAH,CAAS,UAAT,EAAoBjyB,EAAE,CAAC6wB,OAAH,CAAW,CAAX,EAAa,CAAb,CAApB;AAAqC7wB,QAAAA,EAAE,CAACiyB,KAAH,CAAS,WAAT,EAAqBjyB,EAAE,CAAC6wB,OAAH,CAAW,CAAX,EAAa,CAAb,CAArB;AAAsC,YAAI2D,YAAY,GAAC,IAAIx3B,UAAJ,CAAe,IAAf,CAAjB;AAAA,YAAsCy3B,UAAU,GAAC,CAAjD;;AAAmD,YAAIC,UAAU,GAAC,MAAI;AAAC,cAAGD,UAAU,KAAG,CAAhB,EAAkB;AAACA,YAAAA,UAAU,GAACnR,UAAU,CAACkR,YAAD,CAAV,CAAyBxU,UAApC;AAA+C;;AAAA,iBAAOwU,YAAY,CAAC,EAAEC,UAAH,CAAnB;AAAkC,SAAxH;;AAAyHz0B,QAAAA,EAAE,CAAC20B,YAAH,CAAgB,MAAhB,EAAuB,QAAvB,EAAgCD,UAAhC;AAA4C10B,QAAAA,EAAE,CAAC20B,YAAH,CAAgB,MAAhB,EAAuB,SAAvB,EAAiCD,UAAjC;AAA6C10B,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,UAAT;AAAqB7xB,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,cAAT;AAAyB,OAArilB;;AAAsilB+C,MAAAA,wBAAwB,GAAE;AAAC50B,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,OAAT;AAAkB,YAAIgD,SAAS,GAAC70B,EAAE,CAAC6xB,KAAH,CAAS,YAAT,CAAd;AAAqC7xB,QAAAA,EAAE,CAAC6xB,KAAH,CAAS,eAAT;AAA0B7xB,QAAAA,EAAE,CAACunB,KAAH,CAAS;AAACA,UAAAA,KAAK,GAAE;AAAC,gBAAI7B,IAAI,GAAC1lB,EAAE,CAACwnB,UAAH,CAAcqN,SAAd,EAAwB,IAAxB,EAA6B,QAAM,GAAnC,EAAuC,EAAvC,CAAT;AAAoDnP,YAAAA,IAAI,CAACoC,QAAL,GAAc;AAACE,cAAAA,MAAM,CAACP,MAAD,EAAQtf,IAAR,EAAa;AAAC,oBAAI0nB,EAAE,GAAC,CAAC1nB,IAAR;AAAa,oBAAIqd,MAAM,GAACxlB,EAAE,CAAC8vB,gBAAH,CAAoBD,EAApB,CAAX;AAAmC,oBAAIlmB,GAAG,GAAC;AAAC8d,kBAAAA,MAAM,EAAC,IAAR;AAAaF,kBAAAA,KAAK,EAAC;AAAC8G,oBAAAA,UAAU,EAAC;AAAZ,mBAAnB;AAAuCvG,kBAAAA,QAAQ,EAAC;AAACa,oBAAAA,QAAQ,EAAC,MAAInD,MAAM,CAAC1pB;AAArB;AAAhD,iBAAR;AAAoF6N,gBAAAA,GAAG,CAAC8d,MAAJ,GAAW9d,GAAX;AAAe,uBAAOA,GAAP;AAAW;;AAAnL,aAAd;AAAmM,mBAAO+b,IAAP;AAAY;;AAA5Q,SAAT,EAAuR,EAAvR,EAA0R,eAA1R;AAA2S,OAA77lB;;AAA87lBoP,MAAAA,qBAAqB,GAAE;AAAC,YAAGx6B,MAAM,CAAC,OAAD,CAAT,EAAmB;AAAC0F,UAAAA,EAAE,CAAC20B,YAAH,CAAgB,MAAhB,EAAuB,OAAvB,EAA+Br6B,MAAM,CAAC,OAAD,CAArC;AAAgD,SAApE,MAAwE;AAAC0F,UAAAA,EAAE,CAACsoB,OAAH,CAAW,UAAX,EAAsB,YAAtB;AAAoC;;AAAA,YAAGhuB,MAAM,CAAC,QAAD,CAAT,EAAoB;AAAC0F,UAAAA,EAAE,CAAC20B,YAAH,CAAgB,MAAhB,EAAuB,QAAvB,EAAgC,IAAhC,EAAqCr6B,MAAM,CAAC,QAAD,CAA3C;AAAuD,SAA5E,MAAgF;AAAC0F,UAAAA,EAAE,CAACsoB,OAAH,CAAW,UAAX,EAAsB,aAAtB;AAAqC;;AAAA,YAAGhuB,MAAM,CAAC,QAAD,CAAT,EAAoB;AAAC0F,UAAAA,EAAE,CAAC20B,YAAH,CAAgB,MAAhB,EAAuB,QAAvB,EAAgC,IAAhC,EAAqCr6B,MAAM,CAAC,QAAD,CAA3C;AAAuD,SAA5E,MAAgF;AAAC0F,UAAAA,EAAE,CAACsoB,OAAH,CAAW,WAAX,EAAuB,aAAvB;AAAsC;;AAAA,YAAIyM,KAAK,GAAC/0B,EAAE,CAACpD,IAAH,CAAQ,YAAR,EAAqB,CAArB,CAAV;AAAkC,YAAIo4B,MAAM,GAACh1B,EAAE,CAACpD,IAAH,CAAQ,aAAR,EAAsB,CAAtB,CAAX;AAAoC,YAAIq4B,MAAM,GAACj1B,EAAE,CAACpD,IAAH,CAAQ,aAAR,EAAsB,CAAtB,CAAX;AAAoC,OAA15mB;;AAA25mBs4B,MAAAA,gBAAgB,GAAE;AAAC,YAAGl1B,EAAE,CAAC4lB,UAAN,EAAiB;;AAAO5lB,QAAAA,EAAE,CAAC4lB,UAAH,GAAc,SAASA,UAAT,CAAoB6J,KAApB,EAA0B/J,IAA1B,EAA+B;AAAC,eAAKvd,IAAL,GAAU,YAAV;AAAuB,eAAKud,IAAL,GAAUA,IAAV;;AAAe,eAAKyP,QAAL,GAAc,UAAS1F,KAAT,EAAe;AAAC,iBAAKA,KAAL,GAAWA,KAAX;AAAiB,WAA/C;;AAAgD,eAAK0F,QAAL,CAAc1F,KAAd;AAAqB,eAAK3pB,OAAL,GAAa,UAAb;AAAwB,SAAjL;;AAAkL9F,QAAAA,EAAE,CAAC4lB,UAAH,CAAc3Y,SAAd,GAAwB,IAAI+F,KAAJ,EAAxB;AAAkChT,QAAAA,EAAE,CAAC4lB,UAAH,CAAc3Y,SAAd,CAAwBqD,WAAxB,GAAoCtQ,EAAE,CAAC4lB,UAAvC;AAAkD,SAAC,EAAD,EAAKzf,OAAL,CAAaivB,IAAI,IAAE;AAACp1B,UAAAA,EAAE,CAACsqB,aAAH,CAAiB8K,IAAjB,IAAuB,IAAIp1B,EAAE,CAAC4lB,UAAP,CAAkBwP,IAAlB,CAAvB;AAA+Cp1B,UAAAA,EAAE,CAACsqB,aAAH,CAAiB8K,IAAjB,EAAuBriB,KAAvB,GAA6B,2BAA7B;AAAyD,SAA5H;AAA8H,OAA10nB;;AAA20nBsiB,MAAAA,UAAU,GAAE;AAACr1B,QAAAA,EAAE,CAACk1B,gBAAH;AAAsBl1B,QAAAA,EAAE,CAACotB,SAAH,GAAa,IAAI3mB,KAAJ,CAAU,IAAV,CAAb;AAA6BzG,QAAAA,EAAE,CAACunB,KAAH,CAASF,KAAT,EAAe,EAAf,EAAkB,GAAlB;AAAuBrnB,QAAAA,EAAE,CAACs0B,wBAAH;AAA8Bt0B,QAAAA,EAAE,CAACu0B,oBAAH;AAA0Bv0B,QAAAA,EAAE,CAAC40B,wBAAH;AAA8B50B,QAAAA,EAAE,CAACstB,WAAH,GAAe;AAAC,mBAAQjG;AAAT,SAAf;AAA+B,OAAvhoB;;AAAwhoBpnB,MAAAA,IAAI,CAACmlB,KAAD,EAAOC,MAAP,EAAc5nB,KAAd,EAAoB;AAACuC,QAAAA,EAAE,CAACC,IAAH,CAAQC,WAAR,GAAoB,IAApB;AAAyBF,QAAAA,EAAE,CAACk1B,gBAAH;AAAsB56B,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAgB8qB,KAAK,IAAE9qB,MAAM,CAAC,OAAD,CAA7B;AAAuCA,QAAAA,MAAM,CAAC,QAAD,CAAN,GAAiB+qB,MAAM,IAAE/qB,MAAM,CAAC,QAAD,CAA/B;AAA0CA,QAAAA,MAAM,CAAC,QAAD,CAAN,GAAiBmD,KAAK,IAAEnD,MAAM,CAAC,QAAD,CAA9B;AAAyC0F,QAAAA,EAAE,CAAC80B,qBAAH;AAA2B,OAArvoB;;AAAsvoBQ,MAAAA,IAAI,GAAE;AAACt1B,QAAAA,EAAE,CAACC,IAAH,CAAQC,WAAR,GAAoB,KAApB;;AAA0B,aAAI,IAAIqG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACvG,EAAE,CAACktB,OAAH,CAAWvtB,MAAzB,EAAgC4G,CAAC,EAAjC,EAAoC;AAAC,cAAIif,MAAM,GAACxlB,EAAE,CAACktB,OAAH,CAAW3mB,CAAX,CAAX;;AAAyB,cAAG,CAACif,MAAJ,EAAW;AAAC;AAAS;;AAAAxlB,UAAAA,EAAE,CAAC8lB,KAAH,CAASN,MAAT;AAAiB;AAAC,OAA53oB;;AAA63oB+P,MAAAA,UAAU,CAACz5B,IAAD,EAAM05B,mBAAN,EAA0B;AAAC,YAAI7rB,GAAG,GAAC3J,EAAE,CAACy1B,WAAH,CAAe35B,IAAf,EAAoB05B,mBAApB,CAAR;;AAAiD,YAAG,CAAC7rB,GAAG,CAAC+rB,MAAR,EAAe;AAAC,iBAAO,IAAP;AAAY;;AAAA,eAAO/rB,GAAG,CAACymB,MAAX;AAAkB,OAAjgpB;;AAAkgpBqF,MAAAA,WAAW,CAAC35B,IAAD,EAAM05B,mBAAN,EAA0B;AAAC,YAAG;AAAC,cAAIxN,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,YAAAA,MAAM,EAAC,CAACsH;AAAT,WAAnB,CAAX;AAA6D15B,UAAAA,IAAI,GAACksB,MAAM,CAAClsB,IAAZ;AAAiB,SAAlF,CAAkF,OAAMsF,CAAN,EAAQ,CAAE;;AAAA,YAAIuI,GAAG,GAAC;AAACykB,UAAAA,MAAM,EAAC,KAAR;AAAcsH,UAAAA,MAAM,EAAC,KAArB;AAA2Bj4B,UAAAA,KAAK,EAAC,CAAjC;AAAmC0K,UAAAA,IAAI,EAAC,IAAxC;AAA6CrM,UAAAA,IAAI,EAAC,IAAlD;AAAuDs0B,UAAAA,MAAM,EAAC,IAA9D;AAAmEuF,UAAAA,YAAY,EAAC,KAAhF;AAAsFC,UAAAA,UAAU,EAAC,IAAjG;AAAsGC,UAAAA,YAAY,EAAC;AAAnH,SAAR;;AAAiI,YAAG;AAAC,cAAI7N,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAAC2rB,YAAAA,MAAM,EAAC;AAAR,WAAnB,CAAX;AAA6C9d,UAAAA,GAAG,CAACgsB,YAAJ,GAAiB,IAAjB;AAAsBhsB,UAAAA,GAAG,CAACisB,UAAJ,GAAe5N,MAAM,CAAClsB,IAAtB;AAA2B6N,UAAAA,GAAG,CAACksB,YAAJ,GAAiB7N,MAAM,CAACtC,IAAxB;AAA6B/b,UAAAA,GAAG,CAACxB,IAAJ,GAASsZ,IAAI,CAACoB,QAAL,CAAc/mB,IAAd,CAAT;AAA6BksB,UAAAA,MAAM,GAAChoB,EAAE,CAACwtB,UAAH,CAAc1xB,IAAd,EAAmB;AAACoyB,YAAAA,MAAM,EAAC,CAACsH;AAAT,WAAnB,CAAP;AAAyD7rB,UAAAA,GAAG,CAAC+rB,MAAJ,GAAW,IAAX;AAAgB/rB,UAAAA,GAAG,CAAC7N,IAAJ,GAASksB,MAAM,CAAClsB,IAAhB;AAAqB6N,UAAAA,GAAG,CAACymB,MAAJ,GAAWpI,MAAM,CAACtC,IAAlB;AAAuB/b,UAAAA,GAAG,CAACxB,IAAJ,GAAS6f,MAAM,CAACtC,IAAP,CAAYvd,IAArB;AAA0BwB,UAAAA,GAAG,CAACykB,MAAJ,GAAWpG,MAAM,CAAClsB,IAAP,KAAc,GAAzB;AAA6B,SAAxU,CAAwU,OAAMsF,CAAN,EAAQ;AAACuI,UAAAA,GAAG,CAAClM,KAAJ,GAAU2D,CAAC,CAACquB,KAAZ;AAAkB;;AAAA,eAAO9lB,GAAP;AAAW,OAAnnqB;;AAAonqBmsB,MAAAA,UAAU,CAACrO,MAAD,EAAQ3rB,IAAR,EAAagwB,OAAb,EAAqBC,QAArB,EAA8B;AAACtE,QAAAA,MAAM,GAAC,OAAOA,MAAP,IAAe,QAAf,GAAwBA,MAAxB,GAA+BznB,EAAE,CAACmuB,OAAH,CAAW1G,MAAX,CAAtC;AAAyD,YAAIzF,KAAK,GAAClmB,IAAI,CAACymB,KAAL,CAAW,GAAX,EAAgBwT,OAAhB,EAAV;;AAAoC,eAAM/T,KAAK,CAACriB,MAAZ,EAAmB;AAAC,cAAIq2B,IAAI,GAAChU,KAAK,CAAC3c,GAAN,EAAT;AAAqB,cAAG,CAAC2wB,IAAJ,EAAS;AAAS,cAAInI,OAAO,GAACpM,IAAI,CAACuB,KAAL,CAAWyE,MAAX,EAAkBuO,IAAlB,CAAZ;;AAAoC,cAAG;AAACh2B,YAAAA,EAAE,CAAC6xB,KAAH,CAAShE,OAAT;AAAkB,WAAtB,CAAsB,OAAMzsB,CAAN,EAAQ,CAAE;;AAAAqmB,UAAAA,MAAM,GAACoG,OAAP;AAAe;;AAAA,eAAOA,OAAP;AAAe,OAAv5qB;;AAAw5qBoI,MAAAA,UAAU,CAACxO,MAAD,EAAQtf,IAAR,EAAa+tB,UAAb,EAAwBpK,OAAxB,EAAgCC,QAAhC,EAAyC;AAAC,YAAIjwB,IAAI,GAAC2lB,IAAI,CAACuB,KAAL,CAAW,OAAOyE,MAAP,IAAe,QAAf,GAAwBA,MAAxB,GAA+BznB,EAAE,CAACmuB,OAAH,CAAW1G,MAAX,CAA1C,EAA6Dtf,IAA7D,CAAT;AAA4E,YAAIuf,IAAI,GAACqF,UAAU,CAACjB,OAAD,EAASC,QAAT,CAAnB;AAAsC,eAAO/rB,EAAE,CAACsN,MAAH,CAAUxR,IAAV,EAAe4rB,IAAf,CAAP;AAA4B,OAA1lrB;;AAA2lrBsE,MAAAA,cAAc,CAACvE,MAAD,EAAQtf,IAAR,EAAa8S,IAAb,EAAkB6Q,OAAlB,EAA0BC,QAA1B,EAAmCd,MAAnC,EAA0C;AAAC,YAAInvB,IAAI,GAACqM,IAAT;;AAAc,YAAGsf,MAAH,EAAU;AAACA,UAAAA,MAAM,GAAC,OAAOA,MAAP,IAAe,QAAf,GAAwBA,MAAxB,GAA+BznB,EAAE,CAACmuB,OAAH,CAAW1G,MAAX,CAAtC;AAAyD3rB,UAAAA,IAAI,GAACqM,IAAI,GAACsZ,IAAI,CAACuB,KAAL,CAAWyE,MAAX,EAAkBtf,IAAlB,CAAD,GAAyBsf,MAAlC;AAAyC;;AAAA,YAAIC,IAAI,GAACqF,UAAU,CAACjB,OAAD,EAASC,QAAT,CAAnB;AAAsC,YAAIrG,IAAI,GAAC1lB,EAAE,CAACsN,MAAH,CAAUxR,IAAV,EAAe4rB,IAAf,CAAT;;AAA8B,YAAGzM,IAAH,EAAQ;AAAC,cAAG,OAAOA,IAAP,IAAa,QAAhB,EAAyB;AAAC,gBAAI8I,GAAG,GAAC,IAAItd,KAAJ,CAAUwU,IAAI,CAACtb,MAAf,CAAR;;AAA+B,iBAAI,IAAI4G,CAAC,GAAC,CAAN,EAAQuV,GAAG,GAACb,IAAI,CAACtb,MAArB,EAA4B4G,CAAC,GAACuV,GAA9B,EAAkC,EAAEvV,CAApC,EAAsCwd,GAAG,CAACxd,CAAD,CAAH,GAAO0U,IAAI,CAAC1L,UAAL,CAAgBhJ,CAAhB,CAAP;;AAA0B0U,YAAAA,IAAI,GAAC8I,GAAL;AAAS;;AAAA/jB,UAAAA,EAAE,CAAC4yB,KAAH,CAASlN,IAAT,EAAcgC,IAAI,GAAC,GAAnB;AAAwB,cAAIlC,MAAM,GAACxlB,EAAE,CAACpD,IAAH,CAAQ8oB,IAAR,EAAa,GAAb,CAAX;AAA6B1lB,UAAAA,EAAE,CAACiI,KAAH,CAASud,MAAT,EAAgBvK,IAAhB,EAAqB,CAArB,EAAuBA,IAAI,CAACtb,MAA5B,EAAmC,CAAnC,EAAqCsrB,MAArC;AAA6CjrB,UAAAA,EAAE,CAAC8lB,KAAH,CAASN,MAAT;AAAiBxlB,UAAAA,EAAE,CAAC4yB,KAAH,CAASlN,IAAT,EAAcgC,IAAd;AAAoB;;AAAA,eAAOhC,IAAP;AAAY,OAAjnsB;;AAAknsBiP,MAAAA,YAAY,CAAClN,MAAD,EAAQtf,IAAR,EAAaid,KAAb,EAAmBC,MAAnB,EAA0B;AAAC,YAAIvpB,IAAI,GAAC2lB,IAAI,CAACuB,KAAL,CAAW,OAAOyE,MAAP,IAAe,QAAf,GAAwBA,MAAxB,GAA+BznB,EAAE,CAACmuB,OAAH,CAAW1G,MAAX,CAA1C,EAA6Dtf,IAA7D,CAAT;AAA4E,YAAIuf,IAAI,GAACqF,UAAU,CAAC,CAAC,CAAC3H,KAAH,EAAS,CAAC,CAACC,MAAX,CAAnB;AAAsC,YAAG,CAACrlB,EAAE,CAAC20B,YAAH,CAAgBhE,KAApB,EAA0B3wB,EAAE,CAAC20B,YAAH,CAAgBhE,KAAhB,GAAsB,EAAtB;AAAyB,YAAIzL,GAAG,GAACllB,EAAE,CAAC6wB,OAAH,CAAW7wB,EAAE,CAAC20B,YAAH,CAAgBhE,KAAhB,EAAX,EAAmC,CAAnC,CAAR;AAA8C3wB,QAAAA,EAAE,CAACslB,cAAH,CAAkBJ,GAAlB,EAAsB;AAACtoB,UAAAA,IAAI,CAAC4oB,MAAD,EAAQ;AAACA,YAAAA,MAAM,CAACK,QAAP,GAAgB,KAAhB;AAAsB,WAApC;;AAAqCC,UAAAA,KAAK,CAACN,MAAD,EAAQ;AAAC,gBAAGH,MAAM,IAAEA,MAAM,CAACvmB,MAAf,IAAuBumB,MAAM,CAACvmB,MAAP,CAAca,MAAxC,EAA+C;AAAC0lB,cAAAA,MAAM,CAAC,EAAD,CAAN;AAAW;AAAC,WAA/G;;AAAgHrd,UAAAA,IAAI,CAACwd,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BsmB,GAA7B,EAAiC;AAAC,gBAAIE,SAAS,GAAC,CAAd;;AAAgB,iBAAI,IAAI5f,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB4G,CAAC,EAAtB,EAAyB;AAAC,kBAAI3D,MAAJ;;AAAW,kBAAG;AAACA,gBAAAA,MAAM,GAACwiB,KAAK,EAAZ;AAAe,eAAnB,CAAmB,OAAMhkB,CAAN,EAAQ;AAAC,sBAAM,IAAIpB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,kBAAGhjB,MAAM,KAAGjI,SAAT,IAAoBwrB,SAAS,KAAG,CAAnC,EAAqC;AAAC,sBAAM,IAAInmB,EAAE,CAAC4lB,UAAP,CAAkB,CAAlB,CAAN;AAA2B;;AAAA,kBAAGhjB,MAAM,KAAG,IAAT,IAAeA,MAAM,KAAGjI,SAA3B,EAAqC;AAAMwrB,cAAAA,SAAS;AAAGrnB,cAAAA,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAN,GAAiB3D,MAAjB;AAAwB;;AAAA,gBAAGujB,SAAH,EAAa;AAACX,cAAAA,MAAM,CAACE,IAAP,CAAYU,SAAZ,GAAsBC,IAAI,CAACC,GAAL,EAAtB;AAAiC;;AAAA,mBAAOH,SAAP;AAAiB,WAAnd;;AAAodle,UAAAA,KAAK,CAACud,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BsmB,GAA7B,EAAiC;AAAC,iBAAI,IAAI1f,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5G,MAAd,EAAqB4G,CAAC,EAAtB,EAAyB;AAAC,kBAAG;AAAC8e,gBAAAA,MAAM,CAACvmB,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAP,CAAN;AAAyB,eAA7B,CAA6B,OAAMnF,CAAN,EAAQ;AAAC,sBAAM,IAAIpB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;AAAC;;AAAA,gBAAGjmB,MAAH,EAAU;AAAC6lB,cAAAA,MAAM,CAACE,IAAP,CAAYU,SAAZ,GAAsBC,IAAI,CAACC,GAAL,EAAtB;AAAiC;;AAAA,mBAAO/f,CAAP;AAAS;;AAA7oB,SAAtB;AAAsqB,eAAOvG,EAAE,CAACiyB,KAAH,CAASn2B,IAAT,EAAc4rB,IAAd,EAAmBxC,GAAnB,CAAP;AAA+B,OAAjjuB;;AAAkjuBiR,MAAAA,aAAa,CAACnrB,GAAD,EAAK;AAAC,YAAGA,GAAG,CAACorB,QAAJ,IAAcprB,GAAG,CAACqrB,QAAlB,IAA4BrrB,GAAG,CAAC0d,IAAhC,IAAsC1d,GAAG,CAAC+d,QAA7C,EAAsD,OAAO,IAAP;;AAAY,YAAG,OAAOpsB,cAAP,IAAuB,WAA1B,EAAsC;AAAC,gBAAM,IAAIqW,KAAJ,CAAU,kMAAV,CAAN;AAAoN,SAA3P,MAAgQ,IAAGjX,KAAH,EAAS;AAAC,cAAG;AAACiP,YAAAA,GAAG,CAAC+d,QAAJ,GAAaxE,kBAAkB,CAACxoB,KAAK,CAACiP,GAAG,CAACvO,GAAL,CAAN,EAAgB,IAAhB,CAA/B;AAAqDuO,YAAAA,GAAG,CAACie,SAAJ,GAAcje,GAAG,CAAC+d,QAAJ,CAAappB,MAA3B;AAAkC,WAA3F,CAA2F,OAAMyB,CAAN,EAAQ;AAAC,kBAAM,IAAIpB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;AAAC,SAA3I,MAA+I;AAAC,gBAAM,IAAI5S,KAAJ,CAAU,+CAAV,CAAN;AAAiE;AAAC,OAAzlvB;;AAA0lvBsjB,MAAAA,cAAc,CAAC7O,MAAD,EAAQtf,IAAR,EAAa1L,GAAb,EAAiBqvB,OAAjB,EAAyBC,QAAzB,EAAkC;AAAC,iBAASwK,cAAT,GAAyB;AAAC,eAAKC,WAAL,GAAiB,KAAjB;AAAuB,eAAKC,MAAL,GAAY,EAAZ;AAAe;;AAAAF,QAAAA,cAAc,CAACtpB,SAAf,CAAyB+E,GAAzB,GAA6B,SAAS0kB,kBAAT,CAA4Bva,GAA5B,EAAgC;AAAC,cAAGA,GAAG,GAAC,KAAKxc,MAAL,GAAY,CAAhB,IAAmBwc,GAAG,GAAC,CAA1B,EAA4B;AAAC,mBAAOxhB,SAAP;AAAiB;;AAAA,cAAIg8B,WAAW,GAACxa,GAAG,GAAC,KAAKya,SAAzB;AAAmC,cAAIC,QAAQ,GAAC1a,GAAG,GAAC,KAAKya,SAAT,GAAmB,CAAhC;AAAkC,iBAAO,KAAKhvB,MAAL,CAAYivB,QAAZ,EAAsBF,WAAtB,CAAP;AAA0C,SAA3N;;AAA4NJ,QAAAA,cAAc,CAACtpB,SAAf,CAAyB6pB,aAAzB,GAAuC,SAASC,4BAAT,CAAsCnvB,MAAtC,EAA6C;AAAC,eAAKA,MAAL,GAAYA,MAAZ;AAAmB,SAAxG;;AAAyG2uB,QAAAA,cAAc,CAACtpB,SAAf,CAAyB+pB,WAAzB,GAAqC,SAASC,0BAAT,GAAqC;AAAC,cAAIv6B,GAAG,GAAC,IAAIC,cAAJ,EAAR;AAA2BD,UAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAgBH,GAAhB,EAAoB,KAApB;AAA2BC,UAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AAAe,cAAG,EAAEH,GAAG,CAAClB,MAAJ,IAAY,GAAZ,IAAiBkB,GAAG,CAAClB,MAAJ,GAAW,GAA5B,IAAiCkB,GAAG,CAAClB,MAAJ,KAAa,GAAhD,CAAH,EAAwD,MAAM,IAAIwX,KAAJ,CAAU,mBAAiBvW,GAAjB,GAAqB,YAArB,GAAkCC,GAAG,CAAClB,MAAhD,CAAN;AAA8D,cAAI07B,UAAU,GAACC,MAAM,CAACz6B,GAAG,CAAC06B,iBAAJ,CAAsB,gBAAtB,CAAD,CAArB;AAA+D,cAAIC,MAAJ;AAAW,cAAIC,cAAc,GAAC,CAACD,MAAM,GAAC36B,GAAG,CAAC06B,iBAAJ,CAAsB,eAAtB,CAAR,KAAiDC,MAAM,KAAG,OAA7E;AAAqF,cAAIE,QAAQ,GAAC,CAACF,MAAM,GAAC36B,GAAG,CAAC06B,iBAAJ,CAAsB,kBAAtB,CAAR,KAAoDC,MAAM,KAAG,MAA1E;AAAiF,cAAIT,SAAS,GAAC,OAAK,IAAnB;AAAwB,cAAG,CAACU,cAAJ,EAAmBV,SAAS,GAACM,UAAV;;AAAqB,cAAIM,KAAK,GAAC,CAAC5T,IAAD,EAAMC,EAAN,KAAW;AAAC,gBAAGD,IAAI,GAACC,EAAR,EAAW,MAAM,IAAI7Q,KAAJ,CAAU,oBAAkB4Q,IAAlB,GAAuB,IAAvB,GAA4BC,EAA5B,GAA+B,0BAAzC,CAAN;AAA2E,gBAAGA,EAAE,GAACqT,UAAU,GAAC,CAAjB,EAAmB,MAAM,IAAIlkB,KAAJ,CAAU,UAAQkkB,UAAR,GAAmB,qCAA7B,CAAN;AAA0E,gBAAIx6B,GAAG,GAAC,IAAIC,cAAJ,EAAR;AAA2BD,YAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAeH,GAAf,EAAmB,KAAnB;AAA0B,gBAAGy6B,UAAU,KAAGN,SAAhB,EAA0Bl6B,GAAG,CAAC+6B,gBAAJ,CAAqB,OAArB,EAA6B,WAAS7T,IAAT,GAAc,GAAd,GAAkBC,EAA/C;AAAmDnnB,YAAAA,GAAG,CAACK,YAAJ,GAAiB,aAAjB;;AAA+B,gBAAGL,GAAG,CAACg7B,gBAAP,EAAwB;AAACh7B,cAAAA,GAAG,CAACg7B,gBAAJ,CAAqB,oCAArB;AAA2D;;AAAAh7B,YAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AAAe,gBAAG,EAAEH,GAAG,CAAClB,MAAJ,IAAY,GAAZ,IAAiBkB,GAAG,CAAClB,MAAJ,GAAW,GAA5B,IAAiCkB,GAAG,CAAClB,MAAJ,KAAa,GAAhD,CAAH,EAAwD,MAAM,IAAIwX,KAAJ,CAAU,mBAAiBvW,GAAjB,GAAqB,YAArB,GAAkCC,GAAG,CAAClB,MAAhD,CAAN;;AAA8D,gBAAGkB,GAAG,CAACO,QAAJ,KAAetC,SAAlB,EAA4B;AAAC,qBAAO,IAAIqC,UAAJ,CAAeN,GAAG,CAACO,QAAJ,IAAc,EAA7B,CAAP;AAAwC;;AAAA,mBAAOsnB,kBAAkB,CAAC7nB,GAAG,CAACI,YAAJ,IAAkB,EAAnB,EAAsB,IAAtB,CAAzB;AAAqD,WAA7rB;;AAA8rB,cAAI66B,SAAS,GAAC,IAAd;AAAmBA,UAAAA,SAAS,CAACb,aAAV,CAAwBD,QAAQ,IAAE;AAAC,gBAAI7S,KAAK,GAAC6S,QAAQ,GAACD,SAAnB;AAA6B,gBAAI3S,GAAG,GAAC,CAAC4S,QAAQ,GAAC,CAAV,IAAaD,SAAb,GAAuB,CAA/B;AAAiC3S,YAAAA,GAAG,GAACtD,IAAI,CAACC,GAAL,CAASqD,GAAT,EAAaiT,UAAU,GAAC,CAAxB,CAAJ;;AAA+B,gBAAG,OAAOS,SAAS,CAAClB,MAAV,CAAiBI,QAAjB,CAAP,IAAmC,WAAtC,EAAkD;AAACc,cAAAA,SAAS,CAAClB,MAAV,CAAiBI,QAAjB,IAA2BW,KAAK,CAACxT,KAAD,EAAOC,GAAP,CAAhC;AAA4C;;AAAA,gBAAG,OAAO0T,SAAS,CAAClB,MAAV,CAAiBI,QAAjB,CAAP,IAAmC,WAAtC,EAAkD,MAAM,IAAI7jB,KAAJ,CAAU,eAAV,CAAN;AAAiC,mBAAO2kB,SAAS,CAAClB,MAAV,CAAiBI,QAAjB,CAAP;AAAkC,WAApV;;AAAsV,cAAGU,QAAQ,IAAE,CAACL,UAAd,EAAyB;AAACN,YAAAA,SAAS,GAACM,UAAU,GAAC,CAArB;AAAuBA,YAAAA,UAAU,GAAC,KAAKtvB,MAAL,CAAY,CAAZ,EAAejI,MAA1B;AAAiCi3B,YAAAA,SAAS,GAACM,UAAV;AAAqB95B,YAAAA,GAAG,CAAC,6EAAD,CAAH;AAAmF;;AAAA,eAAKw6B,OAAL,GAAaV,UAAb;AAAwB,eAAKW,UAAL,GAAgBjB,SAAhB;AAA0B,eAAKJ,WAAL,GAAiB,IAAjB;AAAsB,SAA/1D;;AAAg2D,YAAG,OAAO75B,cAAP,IAAuB,WAA1B,EAAsC;AAAC,cAAG,CAAChB,qBAAJ,EAA0B,MAAK,qHAAL;AAA2H,cAAIg8B,SAAS,GAAC,IAAIpB,cAAJ,EAAd;AAAiCp7B,UAAAA,MAAM,CAACg1B,gBAAP,CAAwBwH,SAAxB,EAAkC;AAACh4B,YAAAA,MAAM,EAAC;AAACqS,cAAAA,GAAG,EAAC,YAAU;AAAC,oBAAG,CAAC,KAAKwkB,WAAT,EAAqB;AAAC,uBAAKQ,WAAL;AAAmB;;AAAA,uBAAO,KAAKY,OAAZ;AAAoB;AAA7E,aAAR;AAAuFhB,YAAAA,SAAS,EAAC;AAAC5kB,cAAAA,GAAG,EAAC,YAAU;AAAC,oBAAG,CAAC,KAAKwkB,WAAT,EAAqB;AAAC,uBAAKQ,WAAL;AAAmB;;AAAA,uBAAO,KAAKa,UAAZ;AAAuB;AAAhF;AAAjG,WAAlC;AAAuN,cAAI3B,UAAU,GAAC;AAACE,YAAAA,QAAQ,EAAC,KAAV;AAAgBrN,YAAAA,QAAQ,EAAC4O;AAAzB,WAAf;AAAmD,SAAve,MAA2e;AAAC,cAAIzB,UAAU,GAAC;AAACE,YAAAA,QAAQ,EAAC,KAAV;AAAgB35B,YAAAA,GAAG,EAACA;AAApB,WAAf;AAAwC;;AAAA,YAAIipB,IAAI,GAAC1lB,EAAE,CAACi2B,UAAH,CAAcxO,MAAd,EAAqBtf,IAArB,EAA0B+tB,UAA1B,EAAqCpK,OAArC,EAA6CC,QAA7C,CAAT;;AAAgE,YAAGmK,UAAU,CAACnN,QAAd,EAAuB;AAACrD,UAAAA,IAAI,CAACqD,QAAL,GAAcmN,UAAU,CAACnN,QAAzB;AAAkC,SAA1D,MAA+D,IAAGmN,UAAU,CAACz5B,GAAd,EAAkB;AAACipB,UAAAA,IAAI,CAACqD,QAAL,GAAc,IAAd;AAAmBrD,UAAAA,IAAI,CAACjpB,GAAL,GAASy5B,UAAU,CAACz5B,GAApB;AAAwB;;AAAAtB,QAAAA,MAAM,CAACg1B,gBAAP,CAAwBzK,IAAxB,EAA6B;AAACuD,UAAAA,SAAS,EAAC;AAACjX,YAAAA,GAAG,EAAC,YAAU;AAAC,qBAAO,KAAK+W,QAAL,CAAcppB,MAArB;AAA4B;AAA5C;AAAX,SAA7B;AAAwF,YAAI4lB,UAAU,GAAC,EAAf;AAAkB,YAAIrZ,IAAI,GAAC/Q,MAAM,CAAC+Q,IAAP,CAAYwZ,IAAI,CAACH,UAAjB,CAAT;AAAsCrZ,QAAAA,IAAI,CAAC/F,OAAL,CAAa0kB,GAAG,IAAE;AAAC,cAAIne,EAAE,GAACgZ,IAAI,CAACH,UAAL,CAAgBsF,GAAhB,CAAP;;AAA4BtF,UAAAA,UAAU,CAACsF,GAAD,CAAV,GAAgB,SAASiN,iBAAT,GAA4B;AAAC93B,YAAAA,EAAE,CAACm2B,aAAH,CAAiBzQ,IAAjB;AAAuB,mBAAOhZ,EAAE,CAACgD,KAAH,CAAS,IAAT,EAAcC,SAAd,CAAP;AAAgC,WAApG;AAAqG,SAApJ;;AAAsJ,iBAASooB,WAAT,CAAqBvS,MAArB,EAA4B1mB,MAA5B,EAAmCknB,MAAnC,EAA0CrmB,MAA1C,EAAiDqrB,QAAjD,EAA0D;AAAC,cAAIjC,QAAQ,GAACvD,MAAM,CAACE,IAAP,CAAYqD,QAAzB;AAAkC,cAAGiC,QAAQ,IAAEjC,QAAQ,CAACppB,MAAtB,EAA6B,OAAO,CAAP;AAAS,cAAIuJ,IAAI,GAACyX,IAAI,CAACC,GAAL,CAASmI,QAAQ,CAACppB,MAAT,GAAgBqrB,QAAzB,EAAkCrrB,MAAlC,CAAT;;AAAmD,cAAGopB,QAAQ,CAAC5O,KAAZ,EAAkB;AAAC,iBAAI,IAAI5T,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC2C,IAAd,EAAmB3C,CAAC,EAApB,EAAuB;AAACzH,cAAAA,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAN,GAAiBwiB,QAAQ,CAACiC,QAAQ,GAACzkB,CAAV,CAAzB;AAAsC;AAAC,WAAlF,MAAsF;AAAC,iBAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC2C,IAAd,EAAmB3C,CAAC,EAApB,EAAuB;AAACzH,cAAAA,MAAM,CAACknB,MAAM,GAACzf,CAAR,CAAN,GAAiBwiB,QAAQ,CAAC/W,GAAT,CAAagZ,QAAQ,GAACzkB,CAAtB,CAAjB;AAA0C;AAAC;;AAAA,iBAAO2C,IAAP;AAAY;;AAAAqc,QAAAA,UAAU,CAACvd,IAAX,GAAgB,CAACwd,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BqrB,QAA7B,KAAwC;AAAChrB,UAAAA,EAAE,CAACm2B,aAAH,CAAiBzQ,IAAjB;AAAuB,iBAAOqS,WAAW,CAACvS,MAAD,EAAQ1mB,MAAR,EAAeknB,MAAf,EAAsBrmB,MAAtB,EAA6BqrB,QAA7B,CAAlB;AAAyD,SAAzI;;AAA0IzF,QAAAA,UAAU,CAACiD,IAAX,GAAgB,CAAChD,MAAD,EAAQ7lB,MAAR,EAAeqrB,QAAf,EAAwBG,IAAxB,EAA6BC,KAA7B,KAAqC;AAACprB,UAAAA,EAAE,CAACm2B,aAAH,CAAiBzQ,IAAjB;AAAuB,cAAI/hB,GAAG,GAACyjB,SAAS,CAACznB,MAAD,CAAjB;;AAA0B,cAAG,CAACgE,GAAJ,EAAQ;AAAC,kBAAM,IAAI3D,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAAmS,UAAAA,WAAW,CAACvS,MAAD,EAAQpnB,KAAR,EAAcuF,GAAd,EAAkBhE,MAAlB,EAAyBqrB,QAAzB,CAAX;AAA8C,iBAAM;AAACrnB,YAAAA,GAAG,EAACA,GAAL;AAASuU,YAAAA,SAAS,EAAC;AAAnB,WAAN;AAA+B,SAAzN;;AAA0NwN,QAAAA,IAAI,CAACH,UAAL,GAAgBA,UAAhB;AAA2B,eAAOG,IAAP;AAAY;;AAA9k3B,KAAP;AAAul3B,QAAIsS,QAAQ,GAAC;AAACC,MAAAA,gBAAgB,EAAC,CAAlB;;AAAoBC,MAAAA,WAAW,CAACC,KAAD,EAAOr8B,IAAP,EAAYs8B,UAAZ,EAAuB;AAAC,YAAG3W,IAAI,CAACC,KAAL,CAAW5lB,IAAX,CAAH,EAAoB;AAAC,iBAAOA,IAAP;AAAY;;AAAA,YAAI8mB,GAAJ;;AAAQ,YAAGuV,KAAK,KAAG,CAAC,GAAZ,EAAgB;AAACvV,UAAAA,GAAG,GAAC5iB,EAAE,CAAC0jB,GAAH,EAAJ;AAAa,SAA9B,MAAkC;AAAC,cAAI2U,SAAS,GAACL,QAAQ,CAACM,eAAT,CAAyBH,KAAzB,CAAd;AAA8CvV,UAAAA,GAAG,GAACyV,SAAS,CAACv8B,IAAd;AAAmB;;AAAA,YAAGA,IAAI,CAAC6D,MAAL,IAAa,CAAhB,EAAkB;AAAC,cAAG,CAACy4B,UAAJ,EAAe;AAAC,kBAAM,IAAIp4B,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,iBAAOhD,GAAP;AAAW;;AAAA,eAAOnB,IAAI,CAACuB,KAAL,CAAWJ,GAAX,EAAe9mB,IAAf,CAAP;AAA4B,OAA1S;;AAA2Sy8B,MAAAA,MAAM,CAACxmB,IAAD,EAAMjW,IAAN,EAAWm4B,GAAX,EAAe;AAAC,YAAG;AAAC,cAAIxB,IAAI,GAAC1gB,IAAI,CAACjW,IAAD,CAAb;AAAoB,SAAxB,CAAwB,OAAMsF,CAAN,EAAQ;AAAC,cAAGA,CAAC,IAAEA,CAAC,CAACskB,IAAL,IAAWjE,IAAI,CAACW,SAAL,CAAetmB,IAAf,MAAuB2lB,IAAI,CAACW,SAAL,CAAepiB,EAAE,CAACmuB,OAAH,CAAW/sB,CAAC,CAACskB,IAAb,CAAf,CAArC,EAAwE;AAAC,mBAAM,CAAC,EAAP;AAAU;;AAAA,gBAAMtkB,CAAN;AAAQ;;AAAA5C,QAAAA,MAAM,CAACy1B,GAAG,IAAE,CAAN,CAAN,GAAexB,IAAI,CAACvN,GAApB;AAAwB1mB,QAAAA,MAAM,CAACy1B,GAAG,GAAC,CAAJ,IAAO,CAAR,CAAN,GAAiBxB,IAAI,CAAC/K,IAAtB;AAA2BjpB,QAAAA,OAAO,CAACw1B,GAAG,GAAC,CAAJ,IAAO,CAAR,CAAP,GAAkBxB,IAAI,CAAC5I,KAAvB;AAA6BrrB,QAAAA,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkBxB,IAAI,CAAC3I,GAAvB;AAA2BtrB,QAAAA,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkBxB,IAAI,CAAC1I,GAAvB;AAA2BvrB,QAAAA,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkBxB,IAAI,CAAC9M,IAAvB;AAA4BpiB,QAAAA,OAAO,GAAC,CAACkvB,IAAI,CAACvpB,IAAL,KAAY,CAAb,GAAgB5F,UAAU,GAACmvB,IAAI,CAACvpB,IAAhB,EAAqB,CAACyX,IAAI,CAAC6X,GAAL,CAASl1B,UAAT,CAAD,IAAuB,CAAvB,GAAyBA,UAAU,GAAC,CAAX,GAAa,CAACqd,IAAI,CAAC8X,KAAL,CAAWn1B,UAAU,GAAC,UAAtB,CAAD,KAAqC,CAAlD,GAAoD,CAAC,CAAC,CAACqd,IAAI,CAAC0J,IAAL,CAAU,CAAC/mB,UAAU,GAAC,EAAE,CAAC,CAACA,UAAF,KAAe,CAAjB,CAAZ,IAAiC,UAA3C,CAAH,KAA4D,CAAzI,GAA2I,CAAhL,EAAR,EAA4L9E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAArN,EAAyN/E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAAlP;AAAsP/E,QAAAA,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB,IAAlB;AAAuBz1B,QAAAA,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkBxB,IAAI,CAACrI,MAAvB;AAA8B,YAAIJ,KAAK,GAACyI,IAAI,CAACzI,KAAL,CAAW0O,OAAX,EAAV;AAA+B,YAAIzO,KAAK,GAACwI,IAAI,CAACxI,KAAL,CAAWyO,OAAX,EAAV;AAA+B,YAAIxO,KAAK,GAACuI,IAAI,CAACvI,KAAL,CAAWwO,OAAX,EAAV;AAA+Bn1B,QAAAA,OAAO,GAAC,CAACod,IAAI,CAAC8X,KAAL,CAAWzO,KAAK,GAAC,GAAjB,MAAwB,CAAzB,GAA4B1mB,UAAU,GAACqd,IAAI,CAAC8X,KAAL,CAAWzO,KAAK,GAAC,GAAjB,CAAX,EAAiC,CAACrJ,IAAI,CAAC6X,GAAL,CAASl1B,UAAT,CAAD,IAAuB,CAAvB,GAAyBA,UAAU,GAAC,CAAX,GAAa,CAACqd,IAAI,CAAC8X,KAAL,CAAWn1B,UAAU,GAAC,UAAtB,CAAD,KAAqC,CAAlD,GAAoD,CAAC,CAAC,CAACqd,IAAI,CAAC0J,IAAL,CAAU,CAAC/mB,UAAU,GAAC,EAAE,CAAC,CAACA,UAAF,KAAe,CAAjB,CAAZ,IAAiC,UAA3C,CAAH,KAA4D,CAAzI,GAA2I,CAAxM,EAAR,EAAoN9E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAA7O,EAAiP/E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAA1Q;AAA8Q9E,QAAAA,OAAO,CAACw1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAP,GAAmBjK,KAAK,GAAC,GAAN,GAAU,GAA7B;AAAiCzmB,QAAAA,OAAO,GAAC,CAACod,IAAI,CAAC8X,KAAL,CAAWxO,KAAK,GAAC,GAAjB,MAAwB,CAAzB,GAA4B3mB,UAAU,GAACqd,IAAI,CAAC8X,KAAL,CAAWxO,KAAK,GAAC,GAAjB,CAAX,EAAiC,CAACtJ,IAAI,CAAC6X,GAAL,CAASl1B,UAAT,CAAD,IAAuB,CAAvB,GAAyBA,UAAU,GAAC,CAAX,GAAa,CAACqd,IAAI,CAAC8X,KAAL,CAAWn1B,UAAU,GAAC,UAAtB,CAAD,KAAqC,CAAlD,GAAoD,CAAC,CAAC,CAACqd,IAAI,CAAC0J,IAAL,CAAU,CAAC/mB,UAAU,GAAC,EAAE,CAAC,CAACA,UAAF,KAAe,CAAjB,CAAZ,IAAiC,UAA3C,CAAH,KAA4D,CAAzI,GAA2I,CAAxM,EAAR,EAAoN9E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAA7O,EAAiP/E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAA1Q;AAA8Q9E,QAAAA,OAAO,CAACw1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAP,GAAmBhK,KAAK,GAAC,GAAN,GAAU,GAA7B;AAAiC1mB,QAAAA,OAAO,GAAC,CAACod,IAAI,CAAC8X,KAAL,CAAWvO,KAAK,GAAC,GAAjB,MAAwB,CAAzB,GAA4B5mB,UAAU,GAACqd,IAAI,CAAC8X,KAAL,CAAWvO,KAAK,GAAC,GAAjB,CAAX,EAAiC,CAACvJ,IAAI,CAAC6X,GAAL,CAASl1B,UAAT,CAAD,IAAuB,CAAvB,GAAyBA,UAAU,GAAC,CAAX,GAAa,CAACqd,IAAI,CAAC8X,KAAL,CAAWn1B,UAAU,GAAC,UAAtB,CAAD,KAAqC,CAAlD,GAAoD,CAAC,CAAC,CAACqd,IAAI,CAAC0J,IAAL,CAAU,CAAC/mB,UAAU,GAAC,EAAE,CAAC,CAACA,UAAF,KAAe,CAAjB,CAAZ,IAAiC,UAA3C,CAAH,KAA4D,CAAzI,GAA2I,CAAxM,EAAR,EAAoN9E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAA7O,EAAiP/E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAA1Q;AAA8Q9E,QAAAA,OAAO,CAACw1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAP,GAAmB/J,KAAK,GAAC,GAAN,GAAU,GAA7B;AAAiC3mB,QAAAA,OAAO,GAAC,CAACkvB,IAAI,CAAC7I,GAAL,KAAW,CAAZ,GAAetmB,UAAU,GAACmvB,IAAI,CAAC7I,GAAhB,EAAoB,CAACjJ,IAAI,CAAC6X,GAAL,CAASl1B,UAAT,CAAD,IAAuB,CAAvB,GAAyBA,UAAU,GAAC,CAAX,GAAa,CAACqd,IAAI,CAAC8X,KAAL,CAAWn1B,UAAU,GAAC,UAAtB,CAAD,KAAqC,CAAlD,GAAoD,CAAC,CAAC,CAACqd,IAAI,CAAC0J,IAAL,CAAU,CAAC/mB,UAAU,GAAC,EAAE,CAAC,CAACA,UAAF,KAAe,CAAjB,CAAZ,IAAiC,UAA3C,CAAH,KAA4D,CAAzI,GAA2I,CAA9K,EAAR,EAA0L9E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAAnN,EAAuN/E,MAAM,CAACy1B,GAAG,GAAC,EAAJ,IAAQ,CAAT,CAAN,GAAkB1wB,OAAO,CAAC,CAAD,CAAhP;AAAoP,eAAO,CAAP;AAAS,OAAjnE;;AAAknEo1B,MAAAA,OAAO,CAACC,IAAD,EAAMpT,MAAN,EAAa1J,GAAb,EAAiBsP,KAAjB,EAAuBpF,MAAvB,EAA8B;AAAC,YAAG,CAAChmB,EAAE,CAACgpB,MAAH,CAAUxD,MAAM,CAACE,IAAP,CAAYgC,IAAtB,CAAJ,EAAgC;AAAC,gBAAM,IAAI1nB,EAAE,CAAC4lB,UAAP,CAAkB,EAAlB,CAAN;AAA4B;;AAAA,YAAGwF,KAAK,GAAC,CAAT,EAAW;AAAC,iBAAO,CAAP;AAAS;;AAAA,YAAItsB,MAAM,GAACT,MAAM,CAAC8b,KAAP,CAAaye,IAAb,EAAkBA,IAAI,GAAC9c,GAAvB,CAAX;AAAuC9b,QAAAA,EAAE,CAACyoB,KAAH,CAASjD,MAAT,EAAgB1mB,MAAhB,EAAuBknB,MAAvB,EAA8BlK,GAA9B,EAAkCsP,KAAlC;AAAyC,OAA1zE;;AAA2zEyN,MAAAA,OAAO,EAACl+B,SAAn0E;;AAA60EqX,MAAAA,GAAG,GAAE;AAAC,YAAIrI,GAAG,GAACnL,MAAM,CAAC,CAACw5B,QAAQ,CAACa,OAAV,IAAmB,CAApB,CAAd;AAAqCb,QAAAA,QAAQ,CAACa,OAAT,IAAkB,CAAlB;AAAoB,eAAOlvB,GAAP;AAAW,OAAv5E;;AAAw5EmvB,MAAAA,IAAI,GAAE;AAAC,eAAOd,QAAQ,CAAChmB,GAAT,EAAP;AAAsB,OAAr7E;;AAAs7E+mB,MAAAA,MAAM,CAACp1B,GAAD,EAAK;AAAC,YAAIgG,GAAG,GAACgT,YAAY,CAAChZ,GAAD,CAApB;AAA0B,eAAOgG,GAAP;AAAW,OAAv+E;;AAAw+E2uB,MAAAA,eAAe,CAACzI,EAAD,EAAI;AAAC,YAAIrK,MAAM,GAACxlB,EAAE,CAAC8vB,gBAAH,CAAoBD,EAApB,CAAX;AAAmC,eAAOrK,MAAP;AAAc;;AAA7iF,KAAb;;AAA4jF,QAAIwT,YAAY,GAAC,CAACC,SAAD,EAAWC,WAAX,KAAyB;AAAC,UAAIC,OAAO,GAAC,CAAZ;AAAcjY,MAAAA,aAAa,GAAG/a,OAAhB,CAAwB,CAACizB,MAAD,EAAQ7yB,CAAR,KAAY;AAAC,YAAI5C,GAAG,GAACu1B,WAAW,GAACC,OAApB;AAA4B16B,QAAAA,OAAO,CAACw6B,SAAS,GAAC1yB,CAAC,GAAC,CAAZ,IAAe,CAAhB,CAAP,GAA0B5C,GAA1B;AAA8B6d,QAAAA,aAAa,CAAC4X,MAAD,EAAQz1B,GAAR,CAAb;AAA0Bw1B,QAAAA,OAAO,IAAEC,MAAM,CAACz5B,MAAP,GAAc,CAAvB;AAAyB,OAAlJ;AAAoJ,aAAO,CAAP;AAAS,KAAtN;;AAAuN,QAAI05B,kBAAkB,GAAC,CAACC,cAAD,EAAgBC,iBAAhB,KAAoC;AAAC,UAAIpY,OAAO,GAACD,aAAa,EAAzB;AAA4BziB,MAAAA,OAAO,CAAC66B,cAAc,IAAE,CAAjB,CAAP,GAA2BnY,OAAO,CAACxhB,MAAnC;AAA0C,UAAIw5B,OAAO,GAAC,CAAZ;AAAchY,MAAAA,OAAO,CAAChb,OAAR,CAAgBizB,MAAM,IAAED,OAAO,IAAEC,MAAM,CAACz5B,MAAP,GAAc,CAA/C;AAAkDlB,MAAAA,OAAO,CAAC86B,iBAAiB,IAAE,CAApB,CAAP,GAA8BJ,OAA9B;AAAsC,aAAO,CAAP;AAAS,KAAjP;;AAAkP,aAASK,SAAT,CAAmB3J,EAAnB,EAAsB;AAAC,UAAG;AAAC,YAAIrK,MAAM,GAACwS,QAAQ,CAACM,eAAT,CAAyBzI,EAAzB,CAAX;AAAwC7vB,QAAAA,EAAE,CAAC8lB,KAAH,CAASN,MAAT;AAAiB,eAAO,CAAP;AAAS,OAAtE,CAAsE,OAAMpkB,CAAN,EAAQ;AAAC,YAAG,OAAOpB,EAAP,IAAW,WAAX,IAAwB,EAAEoB,CAAC,CAAC+G,IAAF,KAAS,YAAX,CAA3B,EAAoD,MAAM/G,CAAN;AAAQ,eAAOA,CAAC,CAACquB,KAAT;AAAe;AAAC;;AAAA,QAAIgK,OAAO,GAAC,CAACjU,MAAD,EAAQkU,GAAR,EAAYC,MAAZ,EAAmB3T,MAAnB,KAA4B;AAAC,UAAIrc,GAAG,GAAC,CAAR;;AAAU,WAAI,IAAIpD,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACozB,MAAd,EAAqBpzB,CAAC,EAAtB,EAAyB;AAAC,YAAI5C,GAAG,GAAClF,OAAO,CAACi7B,GAAG,IAAE,CAAN,CAAf;AAAwB,YAAI5d,GAAG,GAACrd,OAAO,CAACi7B,GAAG,GAAC,CAAJ,IAAO,CAAR,CAAf;AAA0BA,QAAAA,GAAG,IAAE,CAAL;AAAO,YAAIE,IAAI,GAAC55B,EAAE,CAACgI,IAAH,CAAQwd,MAAR,EAAepnB,KAAf,EAAqBuF,GAArB,EAAyBmY,GAAzB,EAA6BkK,MAA7B,CAAT;AAA8C,YAAG4T,IAAI,GAAC,CAAR,EAAU,OAAM,CAAC,CAAP;AAASjwB,QAAAA,GAAG,IAAEiwB,IAAL;AAAU,YAAGA,IAAI,GAAC9d,GAAR,EAAY;;AAAM,YAAG,OAAOkK,MAAP,KAAgB,WAAnB,EAA+B;AAACA,UAAAA,MAAM,IAAE4T,IAAR;AAAa;AAAC;;AAAA,aAAOjwB,GAAP;AAAW,KAA5R;;AAA6R,aAASkwB,QAAT,CAAkBhK,EAAlB,EAAqB6J,GAArB,EAAyBC,MAAzB,EAAgCG,IAAhC,EAAqC;AAAC,UAAG;AAAC,YAAItU,MAAM,GAACwS,QAAQ,CAACM,eAAT,CAAyBzI,EAAzB,CAAX;AAAwC,YAAIlQ,GAAG,GAAC8Z,OAAO,CAACjU,MAAD,EAAQkU,GAAR,EAAYC,MAAZ,CAAf;AAAmCl7B,QAAAA,OAAO,CAACq7B,IAAI,IAAE,CAAP,CAAP,GAAiBna,GAAjB;AAAqB,eAAO,CAAP;AAAS,OAA7G,CAA6G,OAAMve,CAAN,EAAQ;AAAC,YAAG,OAAOpB,EAAP,IAAW,WAAX,IAAwB,EAAEoB,CAAC,CAAC+G,IAAF,KAAS,YAAX,CAA3B,EAAoD,MAAM/G,CAAN;AAAQ,eAAOA,CAAC,CAACquB,KAAT;AAAe;AAAC;;AAAA,QAAIsK,0BAA0B,GAAC,CAACC,EAAD,EAAIC,EAAJ,KAASA,EAAE,GAAC,OAAH,KAAa,CAAb,GAAe,UAAQ,CAAC,CAACD,EAAzB,GAA4B,CAACA,EAAE,KAAG,CAAN,IAASC,EAAE,GAAC,UAAxC,GAAmDC,GAA3F;;AAA+F,aAASC,QAAT,CAAkBtK,EAAlB,EAAqBuK,UAArB,EAAgCC,WAAhC,EAA4CnP,MAA5C,EAAmDoP,SAAnD,EAA6D;AAAC,UAAItU,MAAM,GAAC+T,0BAA0B,CAACK,UAAD,EAAYC,WAAZ,CAArC;;AAA8D,UAAG;AAAC,YAAGE,KAAK,CAACvU,MAAD,CAAR,EAAiB,OAAO,EAAP;AAAU,YAAIR,MAAM,GAACwS,QAAQ,CAACM,eAAT,CAAyBzI,EAAzB,CAAX;AAAwC7vB,QAAAA,EAAE,CAACuoB,MAAH,CAAU/C,MAAV,EAAiBQ,MAAjB,EAAwBkF,MAAxB;AAAgC3nB,QAAAA,OAAO,GAAC,CAACiiB,MAAM,CAACwF,QAAP,KAAkB,CAAnB,GAAsB1nB,UAAU,GAACkiB,MAAM,CAACwF,QAAlB,EAA2B,CAACrK,IAAI,CAAC6X,GAAL,CAASl1B,UAAT,CAAD,IAAuB,CAAvB,GAAyBA,UAAU,GAAC,CAAX,GAAa,CAACqd,IAAI,CAAC8X,KAAL,CAAWn1B,UAAU,GAAC,UAAtB,CAAD,KAAqC,CAAlD,GAAoD,CAAC,CAAC,CAACqd,IAAI,CAAC0J,IAAL,CAAU,CAAC/mB,UAAU,GAAC,EAAE,CAAC,CAACA,UAAF,KAAe,CAAjB,CAAZ,IAAiC,UAA3C,CAAH,KAA4D,CAAzI,GAA2I,CAA5L,EAAR,EAAwM9E,MAAM,CAAC87B,SAAS,IAAE,CAAZ,CAAN,GAAqB/2B,OAAO,CAAC,CAAD,CAApO,EAAwO/E,MAAM,CAAC87B,SAAS,GAAC,CAAV,IAAa,CAAd,CAAN,GAAuB/2B,OAAO,CAAC,CAAD,CAAtQ;AAA0Q,YAAGiiB,MAAM,CAACiO,QAAP,IAAiBzN,MAAM,KAAG,CAA1B,IAA6BkF,MAAM,KAAG,CAAzC,EAA2C1F,MAAM,CAACiO,QAAP,GAAgB,IAAhB;AAAqB,eAAO,CAAP;AAAS,OAA1b,CAA0b,OAAMryB,CAAN,EAAQ;AAAC,YAAG,OAAOpB,EAAP,IAAW,WAAX,IAAwB,EAAEoB,CAAC,CAAC+G,IAAF,KAAS,YAAX,CAA3B,EAAoD,MAAM/G,CAAN;AAAQ,eAAOA,CAAC,CAACquB,KAAT;AAAe;AAAC;;AAAA,QAAI+K,QAAQ,GAAC,CAAChV,MAAD,EAAQkU,GAAR,EAAYC,MAAZ,EAAmB3T,MAAnB,KAA4B;AAAC,UAAIrc,GAAG,GAAC,CAAR;;AAAU,WAAI,IAAIpD,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACozB,MAAd,EAAqBpzB,CAAC,EAAtB,EAAyB;AAAC,YAAI5C,GAAG,GAAClF,OAAO,CAACi7B,GAAG,IAAE,CAAN,CAAf;AAAwB,YAAI5d,GAAG,GAACrd,OAAO,CAACi7B,GAAG,GAAC,CAAJ,IAAO,CAAR,CAAf;AAA0BA,QAAAA,GAAG,IAAE,CAAL;AAAO,YAAIE,IAAI,GAAC55B,EAAE,CAACiI,KAAH,CAASud,MAAT,EAAgBpnB,KAAhB,EAAsBuF,GAAtB,EAA0BmY,GAA1B,EAA8BkK,MAA9B,CAAT;AAA+C,YAAG4T,IAAI,GAAC,CAAR,EAAU,OAAM,CAAC,CAAP;AAASjwB,QAAAA,GAAG,IAAEiwB,IAAL;;AAAU,YAAG,OAAO5T,MAAP,KAAgB,WAAnB,EAA+B;AAACA,UAAAA,MAAM,IAAE4T,IAAR;AAAa;AAAC;;AAAA,aAAOjwB,GAAP;AAAW,KAA5Q;;AAA6Q,aAAS8wB,SAAT,CAAmB5K,EAAnB,EAAsB6J,GAAtB,EAA0BC,MAA1B,EAAiCG,IAAjC,EAAsC;AAAC,UAAG;AAAC,YAAItU,MAAM,GAACwS,QAAQ,CAACM,eAAT,CAAyBzI,EAAzB,CAAX;AAAwC,YAAIlQ,GAAG,GAAC6a,QAAQ,CAAChV,MAAD,EAAQkU,GAAR,EAAYC,MAAZ,CAAhB;AAAoCl7B,QAAAA,OAAO,CAACq7B,IAAI,IAAE,CAAP,CAAP,GAAiBna,GAAjB;AAAqB,eAAO,CAAP;AAAS,OAA9G,CAA8G,OAAMve,CAAN,EAAQ;AAAC,YAAG,OAAOpB,EAAP,IAAW,WAAX,IAAwB,EAAEoB,CAAC,CAAC+G,IAAF,KAAS,YAAX,CAA3B,EAAoD,MAAM/G,CAAN;AAAQ,eAAOA,CAAC,CAACquB,KAAT;AAAe;AAAC;;AAAA,QAAIiL,UAAU,GAACC,IAAI,IAAEA,IAAI,GAAC,CAAL,KAAS,CAAT,KAAaA,IAAI,GAAC,GAAL,KAAW,CAAX,IAAcA,IAAI,GAAC,GAAL,KAAW,CAAtC,CAArB;;AAA8D,QAAIC,QAAQ,GAAC,CAAC9lB,KAAD,EAAO+lB,KAAP,KAAe;AAAC,UAAIC,GAAG,GAAC,CAAR;;AAAU,WAAI,IAAIv0B,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAEs0B,KAAf,EAAqBC,GAAG,IAAEhmB,KAAK,CAACvO,CAAC,EAAF,CAA/B,EAAqC,CAAE;;AAAA,aAAOu0B,GAAP;AAAW,KAAzF;;AAA0F,QAAIC,eAAe,GAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkC,EAAlC,CAApB;AAA0D,QAAIC,kBAAkB,GAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkC,EAAlC,CAAvB;;AAA6D,QAAIC,OAAO,GAAC,CAACC,IAAD,EAAMC,IAAN,KAAa;AAAC,UAAIC,OAAO,GAAC,IAAI/U,IAAJ,CAAS6U,IAAI,CAACxC,OAAL,EAAT,CAAZ;;AAAqC,aAAMyC,IAAI,GAAC,CAAX,EAAa;AAAC,YAAIE,IAAI,GAACX,UAAU,CAACU,OAAO,CAACE,WAAR,EAAD,CAAnB;AAA2C,YAAIC,YAAY,GAACH,OAAO,CAACI,QAAR,EAAjB;AAAoC,YAAIC,kBAAkB,GAAC,CAACJ,IAAI,GAACN,eAAD,GAAiBC,kBAAtB,EAA0CO,YAA1C,CAAvB;;AAA+E,YAAGJ,IAAI,GAACM,kBAAkB,GAACL,OAAO,CAACM,OAAR,EAA3B,EAA6C;AAACP,UAAAA,IAAI,IAAEM,kBAAkB,GAACL,OAAO,CAACM,OAAR,EAAnB,GAAqC,CAA3C;AAA6CN,UAAAA,OAAO,CAACO,OAAR,CAAgB,CAAhB;;AAAmB,cAAGJ,YAAY,GAAC,EAAhB,EAAmB;AAACH,YAAAA,OAAO,CAACQ,QAAR,CAAiBL,YAAY,GAAC,CAA9B;AAAiC,WAArD,MAAyD;AAACH,YAAAA,OAAO,CAACQ,QAAR,CAAiB,CAAjB;AAAoBR,YAAAA,OAAO,CAACS,WAAR,CAAoBT,OAAO,CAACE,WAAR,KAAsB,CAA1C;AAA6C;AAAC,SAA1O,MAA8O;AAACF,UAAAA,OAAO,CAACO,OAAR,CAAgBP,OAAO,CAACM,OAAR,KAAkBP,IAAlC;AAAwC,iBAAOC,OAAP;AAAe;AAAC;;AAAA,aAAOA,OAAP;AAAe,KAAjiB;;AAAkiB,QAAIU,kBAAkB,GAAC,CAAChnB,KAAD,EAAOhW,MAAP,KAAgB;AAACV,MAAAA,KAAK,CAACyZ,GAAN,CAAU/C,KAAV,EAAgBhW,MAAhB;AAAwB,KAAhE;;AAAiE,QAAIi9B,SAAS,GAAC,CAACC,CAAD,EAAGC,OAAH,EAAWC,MAAX,EAAkBC,EAAlB,KAAuB;AAAC,UAAIC,OAAO,GAAC39B,OAAO,CAAC09B,EAAE,GAAC,EAAH,IAAO,CAAR,CAAnB;AAA8B,UAAIjB,IAAI,GAAC;AAACmB,QAAAA,MAAM,EAAC79B,MAAM,CAAC29B,EAAE,IAAE,CAAL,CAAd;AAAsBG,QAAAA,MAAM,EAAC99B,MAAM,CAAC29B,EAAE,GAAC,CAAH,IAAM,CAAP,CAAnC;AAA6CI,QAAAA,OAAO,EAAC/9B,MAAM,CAAC29B,EAAE,GAAC,CAAH,IAAM,CAAP,CAA3D;AAAqEK,QAAAA,OAAO,EAACh+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAAnF;AAA8FM,QAAAA,MAAM,EAACj+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAA3G;AAAsHO,QAAAA,OAAO,EAACl+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAApI;AAA+IQ,QAAAA,OAAO,EAACn+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAA7J;AAAwKS,QAAAA,OAAO,EAACp+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAAtL;AAAiMU,QAAAA,QAAQ,EAACr+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAAhN;AAA2NW,QAAAA,SAAS,EAACt+B,MAAM,CAAC29B,EAAE,GAAC,EAAH,IAAO,CAAR,CAA3O;AAAsPC,QAAAA,OAAO,EAACA,OAAO,GAACzf,YAAY,CAACyf,OAAD,CAAb,GAAuB;AAA5R,OAAT;AAAyS,UAAIW,OAAO,GAACpgB,YAAY,CAACuf,MAAD,CAAxB;AAAiC,UAAIc,iBAAiB,GAAC;AAAC,cAAK,sBAAN;AAA6B,cAAK,UAAlC;AAA6C,cAAK,UAAlD;AAA6D,cAAK,IAAlE;AAAuE,cAAK,aAA5E;AAA0F,cAAK,OAA/F;AAAuG,cAAK,UAA5G;AAAuH,cAAK,UAA5H;AAAuI,cAAK,UAA5I;AAAuJ,eAAM,IAA7J;AAAkK,eAAM,IAAxK;AAA6K,eAAM,UAAnL;AAA8L,eAAM,UAApM;AAA+M,eAAM,IAArN;AAA0N,eAAM,IAAhO;AAAqO,eAAM,IAA3O;AAAgP,eAAM,IAAtP;AAA2P,eAAM,IAAjQ;AAAsQ,eAAM,IAA5Q;AAAiR,eAAM,IAAvR;AAA4R,eAAM,IAAlS;AAAuS,eAAM,IAA7S;AAAkT,eAAM,IAAxT;AAA6T,eAAM,IAAnU;AAAwU,eAAM,IAA9U;AAAmV,eAAM,IAAzV;AAA8V,eAAM,IAApW;AAAyW,eAAM;AAA/W,OAAtB;;AAA2Y,WAAI,IAAIC,IAAR,IAAgBD,iBAAhB,EAAkC;AAACD,QAAAA,OAAO,GAACA,OAAO,CAACxgC,OAAR,CAAgB,IAAI2gC,MAAJ,CAAWD,IAAX,EAAgB,GAAhB,CAAhB,EAAqCD,iBAAiB,CAACC,IAAD,CAAtD,CAAR;AAAsE;;AAAA,UAAIE,QAAQ,GAAC,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA6B,WAA7B,EAAyC,UAAzC,EAAoD,QAApD,EAA6D,UAA7D,CAAb;AAAsF,UAAIC,MAAM,GAAC,CAAC,SAAD,EAAW,UAAX,EAAsB,OAAtB,EAA8B,OAA9B,EAAsC,KAAtC,EAA4C,MAA5C,EAAmD,MAAnD,EAA0D,QAA1D,EAAmE,WAAnE,EAA+E,SAA/E,EAAyF,UAAzF,EAAoG,UAApG,CAAX;;AAA2H,eAASC,gBAAT,CAA0B5xB,KAA1B,EAAgC6xB,MAAhC,EAAuCC,SAAvC,EAAiD;AAAC,YAAIpiB,GAAG,GAAC,OAAO1P,KAAP,IAAc,QAAd,GAAuBA,KAAK,CAACwH,QAAN,EAAvB,GAAwCxH,KAAK,IAAE,EAAvD;;AAA0D,eAAM0P,GAAG,CAACxb,MAAJ,GAAW29B,MAAjB,EAAwB;AAACniB,UAAAA,GAAG,GAACoiB,SAAS,CAAC,CAAD,CAAT,GAAapiB,GAAjB;AAAqB;;AAAA,eAAOA,GAAP;AAAW;;AAAA,eAASqiB,YAAT,CAAsB/xB,KAAtB,EAA4B6xB,MAA5B,EAAmC;AAAC,eAAOD,gBAAgB,CAAC5xB,KAAD,EAAO6xB,MAAP,EAAc,GAAd,CAAvB;AAA0C;;AAAA,eAASG,YAAT,CAAsBC,KAAtB,EAA4BC,KAA5B,EAAkC;AAAC,iBAASC,GAAT,CAAanyB,KAAb,EAAmB;AAAC,iBAAOA,KAAK,GAAC,CAAN,GAAQ,CAAC,CAAT,GAAWA,KAAK,GAAC,CAAN,GAAQ,CAAR,GAAU,CAA5B;AAA8B;;AAAA,YAAIoyB,OAAJ;;AAAY,YAAG,CAACA,OAAO,GAACD,GAAG,CAACF,KAAK,CAACpC,WAAN,KAAoBqC,KAAK,CAACrC,WAAN,EAArB,CAAZ,MAAyD,CAA5D,EAA8D;AAAC,cAAG,CAACuC,OAAO,GAACD,GAAG,CAACF,KAAK,CAAClC,QAAN,KAAiBmC,KAAK,CAACnC,QAAN,EAAlB,CAAZ,MAAmD,CAAtD,EAAwD;AAACqC,YAAAA,OAAO,GAACD,GAAG,CAACF,KAAK,CAAChC,OAAN,KAAgBiC,KAAK,CAACjC,OAAN,EAAjB,CAAX;AAA6C;AAAC;;AAAA,eAAOmC,OAAP;AAAe;;AAAA,eAASC,qBAAT,CAA+BC,SAA/B,EAAyC;AAAC,gBAAOA,SAAS,CAACC,MAAV,EAAP;AAA2B,eAAK,CAAL;AAAO,mBAAO,IAAI3X,IAAJ,CAAS0X,SAAS,CAACzC,WAAV,KAAwB,CAAjC,EAAmC,EAAnC,EAAsC,EAAtC,CAAP;;AAAiD,eAAK,CAAL;AAAO,mBAAOyC,SAAP;;AAAiB,eAAK,CAAL;AAAO,mBAAO,IAAI1X,IAAJ,CAAS0X,SAAS,CAACzC,WAAV,EAAT,EAAiC,CAAjC,EAAmC,CAAnC,CAAP;;AAA6C,eAAK,CAAL;AAAO,mBAAO,IAAIjV,IAAJ,CAAS0X,SAAS,CAACzC,WAAV,EAAT,EAAiC,CAAjC,EAAmC,CAAnC,CAAP;;AAA6C,eAAK,CAAL;AAAO,mBAAO,IAAIjV,IAAJ,CAAS0X,SAAS,CAACzC,WAAV,EAAT,EAAiC,CAAjC,EAAmC,CAAnC,CAAP;;AAA6C,eAAK,CAAL;AAAO,mBAAO,IAAIjV,IAAJ,CAAS0X,SAAS,CAACzC,WAAV,KAAwB,CAAjC,EAAmC,EAAnC,EAAsC,EAAtC,CAAP;;AAAiD,eAAK,CAAL;AAAO,mBAAO,IAAIjV,IAAJ,CAAS0X,SAAS,CAACzC,WAAV,KAAwB,CAAjC,EAAmC,EAAnC,EAAsC,EAAtC,CAAP;AAAtU;AAAwX;;AAAA,eAAS2C,gBAAT,CAA0B/C,IAA1B,EAA+B;AAAC,YAAIgD,QAAQ,GAACjD,OAAO,CAAC,IAAI5U,IAAJ,CAAS6U,IAAI,CAACwB,OAAL,GAAa,IAAtB,EAA2B,CAA3B,EAA6B,CAA7B,CAAD,EAAiCxB,IAAI,CAAC0B,OAAtC,CAApB;AAAmE,YAAIuB,iBAAiB,GAAC,IAAI9X,IAAJ,CAAS6X,QAAQ,CAAC5C,WAAT,EAAT,EAAgC,CAAhC,EAAkC,CAAlC,CAAtB;AAA2D,YAAI8C,iBAAiB,GAAC,IAAI/X,IAAJ,CAAS6X,QAAQ,CAAC5C,WAAT,KAAuB,CAAhC,EAAkC,CAAlC,EAAoC,CAApC,CAAtB;AAA6D,YAAI+C,sBAAsB,GAACP,qBAAqB,CAACK,iBAAD,CAAhD;AAAoE,YAAIG,sBAAsB,GAACR,qBAAqB,CAACM,iBAAD,CAAhD;;AAAoE,YAAGX,YAAY,CAACY,sBAAD,EAAwBH,QAAxB,CAAZ,IAA+C,CAAlD,EAAoD;AAAC,cAAGT,YAAY,CAACa,sBAAD,EAAwBJ,QAAxB,CAAZ,IAA+C,CAAlD,EAAoD;AAAC,mBAAOA,QAAQ,CAAC5C,WAAT,KAAuB,CAA9B;AAAgC;;AAAA,iBAAO4C,QAAQ,CAAC5C,WAAT,EAAP;AAA8B;;AAAA,eAAO4C,QAAQ,CAAC5C,WAAT,KAAuB,CAA9B;AAAgC;;AAAA,UAAIiD,iBAAiB,GAAC;AAAC,cAAKrD,IAAI,IAAEiC,QAAQ,CAACjC,IAAI,CAACyB,OAAN,CAAR,CAAuB3lB,SAAvB,CAAiC,CAAjC,EAAmC,CAAnC,CAAZ;AAAkD,cAAKkkB,IAAI,IAAEiC,QAAQ,CAACjC,IAAI,CAACyB,OAAN,CAArE;AAAoF,cAAKzB,IAAI,IAAEkC,MAAM,CAAClC,IAAI,CAACuB,MAAN,CAAN,CAAoBzlB,SAApB,CAA8B,CAA9B,EAAgC,CAAhC,CAA/F;AAAkI,cAAKkkB,IAAI,IAAEkC,MAAM,CAAClC,IAAI,CAACuB,MAAN,CAAnJ;AAAiK,cAAKvB,IAAI,IAAE;AAAC,cAAIP,IAAI,GAACO,IAAI,CAACwB,OAAL,GAAa,IAAtB;AAA2B,iBAAOc,YAAY,CAAC7C,IAAI,GAAC,GAAL,GAAS,CAAV,EAAY,CAAZ,CAAnB;AAAkC,SAA1O;AAA2O,cAAKO,IAAI,IAAEsC,YAAY,CAACtC,IAAI,CAACsB,OAAN,EAAc,CAAd,CAAlQ;AAAmR,cAAKtB,IAAI,IAAEmC,gBAAgB,CAACnC,IAAI,CAACsB,OAAN,EAAc,CAAd,EAAgB,GAAhB,CAA9S;AAAmU,cAAKtB,IAAI,IAAE+C,gBAAgB,CAAC/C,IAAD,CAAhB,CAAuBjoB,QAAvB,GAAkC+D,SAAlC,CAA4C,CAA5C,CAA9U;AAA6X,cAAKkkB,IAAI,IAAE+C,gBAAgB,CAAC/C,IAAD,CAAxZ;AAA+Z,cAAKA,IAAI,IAAEsC,YAAY,CAACtC,IAAI,CAACqB,OAAN,EAAc,CAAd,CAAtb;AAAuc,cAAKrB,IAAI,IAAE;AAAC,cAAIsD,UAAU,GAACtD,IAAI,CAACqB,OAApB;AAA4B,cAAGiC,UAAU,IAAE,CAAf,EAAiBA,UAAU,GAAC,EAAX,CAAjB,KAAoC,IAAGA,UAAU,GAAC,EAAd,EAAiBA,UAAU,IAAE,EAAZ;AAAe,iBAAOhB,YAAY,CAACgB,UAAD,EAAY,CAAZ,CAAnB;AAAkC,SAArlB;AAAslB,cAAKtD,IAAI,IAAEsC,YAAY,CAACtC,IAAI,CAACsB,OAAL,GAAa5B,QAAQ,CAACF,UAAU,CAACQ,IAAI,CAACwB,OAAL,GAAa,IAAd,CAAV,GAA8B3B,eAA9B,GAA8CC,kBAA/C,EAAkEE,IAAI,CAACuB,MAAL,GAAY,CAA9E,CAAtB,EAAuG,CAAvG,CAA7mB;AAAutB,cAAKvB,IAAI,IAAEsC,YAAY,CAACtC,IAAI,CAACuB,MAAL,GAAY,CAAb,EAAe,CAAf,CAA9uB;AAAgwB,cAAKvB,IAAI,IAAEsC,YAAY,CAACtC,IAAI,CAACoB,MAAN,EAAa,CAAb,CAAvxB;AAAuyB,cAAK,MAAI,IAAhzB;AAAqzB,cAAKpB,IAAI,IAAE;AAAC,cAAGA,IAAI,CAACqB,OAAL,IAAc,CAAd,IAAiBrB,IAAI,CAACqB,OAAL,GAAa,EAAjC,EAAoC;AAAC,mBAAM,IAAN;AAAW;;AAAA,iBAAM,IAAN;AAAW,SAA53B;AAA63B,cAAKrB,IAAI,IAAEsC,YAAY,CAACtC,IAAI,CAACmB,MAAN,EAAa,CAAb,CAAp5B;AAAo6B,cAAK,MAAI,IAA76B;AAAk7B,cAAKnB,IAAI,IAAEA,IAAI,CAACyB,OAAL,IAAc,CAA38B;AAA68B,cAAKzB,IAAI,IAAE;AAAC,cAAIC,IAAI,GAACD,IAAI,CAAC0B,OAAL,GAAa,CAAb,GAAe1B,IAAI,CAACyB,OAA7B;AAAqC,iBAAOa,YAAY,CAAC7c,IAAI,CAAC8X,KAAL,CAAW0C,IAAI,GAAC,CAAhB,CAAD,EAAoB,CAApB,CAAnB;AAA0C,SAAxiC;AAAyiC,cAAKD,IAAI,IAAE;AAAC,cAAIzU,GAAG,GAAC9F,IAAI,CAAC8X,KAAL,CAAW,CAACyC,IAAI,CAAC0B,OAAL,GAAa,CAAb,GAAe,CAAC1B,IAAI,CAACyB,OAAL,GAAa,CAAd,IAAiB,CAAjC,IAAoC,CAA/C,CAAR;;AAA0D,cAAG,CAACzB,IAAI,CAACyB,OAAL,GAAa,GAAb,GAAiBzB,IAAI,CAAC0B,OAAtB,GAA8B,CAA/B,IAAkC,CAAlC,IAAqC,CAAxC,EAA0C;AAACnW,YAAAA,GAAG;AAAG;;AAAA,cAAG,CAACA,GAAJ,EAAQ;AAACA,YAAAA,GAAG,GAAC,EAAJ;AAAO,gBAAIgY,KAAK,GAAC,CAACvD,IAAI,CAACyB,OAAL,GAAa,CAAb,GAAezB,IAAI,CAAC0B,OAApB,GAA4B,CAA7B,IAAgC,CAA1C;;AAA4C,gBAAG6B,KAAK,IAAE,CAAP,IAAUA,KAAK,IAAE,CAAP,IAAU/D,UAAU,CAACQ,IAAI,CAACwB,OAAL,GAAa,GAAb,GAAiB,CAAlB,CAAjC,EAAsD;AAACjW,cAAAA,GAAG;AAAG;AAAC,WAA1H,MAA+H,IAAGA,GAAG,IAAE,EAAR,EAAW;AAAC,gBAAIiY,IAAI,GAAC,CAACxD,IAAI,CAACyB,OAAL,GAAa,GAAb,GAAiBzB,IAAI,CAAC0B,OAAvB,IAAgC,CAAzC;AAA2C,gBAAG8B,IAAI,IAAE,CAAN,KAAUA,IAAI,IAAE,CAAN,IAAS,CAAChE,UAAU,CAACQ,IAAI,CAACwB,OAAN,CAA9B,CAAH,EAAiDjW,GAAG,GAAC,CAAJ;AAAM;;AAAA,iBAAO+W,YAAY,CAAC/W,GAAD,EAAK,CAAL,CAAnB;AAA2B,SAAx6C;AAAy6C,cAAKyU,IAAI,IAAEA,IAAI,CAACyB,OAAz7C;AAAi8C,cAAKzB,IAAI,IAAE;AAAC,cAAIC,IAAI,GAACD,IAAI,CAAC0B,OAAL,GAAa,CAAb,GAAe,CAAC1B,IAAI,CAACyB,OAAL,GAAa,CAAd,IAAiB,CAAzC;AAA2C,iBAAOa,YAAY,CAAC7c,IAAI,CAAC8X,KAAL,CAAW0C,IAAI,GAAC,CAAhB,CAAD,EAAoB,CAApB,CAAnB;AAA0C,SAAliD;AAAmiD,cAAKD,IAAI,IAAE,CAACA,IAAI,CAACwB,OAAL,GAAa,IAAd,EAAoBzpB,QAApB,GAA+B+D,SAA/B,CAAyC,CAAzC,CAA9iD;AAA0lD,cAAKkkB,IAAI,IAAEA,IAAI,CAACwB,OAAL,GAAa,IAAlnD;AAAunD,cAAKxB,IAAI,IAAE;AAAC,cAAIyD,GAAG,GAACzD,IAAI,CAAC4B,SAAb;AAAuB,cAAI8B,KAAK,GAACD,GAAG,IAAE,CAAf;AAAiBA,UAAAA,GAAG,GAAChe,IAAI,CAAC6X,GAAL,CAASmG,GAAT,IAAc,EAAlB;AAAqBA,UAAAA,GAAG,GAACA,GAAG,GAAC,EAAJ,GAAO,GAAP,GAAWA,GAAG,GAAC,EAAnB;AAAsB,iBAAM,CAACC,KAAK,GAAC,GAAD,GAAK,GAAX,IAAgBr1B,MAAM,CAAC,SAAOo1B,GAAR,CAAN,CAAmBxkB,KAAnB,CAAyB,CAAC,CAA1B,CAAtB;AAAmD,SAAzwD;AAA0wD,cAAK+gB,IAAI,IAAEA,IAAI,CAACkB,OAA1xD;AAAkyD,cAAK,MAAI;AAA3yD,OAAtB;AAAs0DW,MAAAA,OAAO,GAACA,OAAO,CAACxgC,OAAR,CAAgB,KAAhB,EAAsB,MAAtB,CAAR;;AAAsC,WAAI,IAAI0gC,IAAR,IAAgBsB,iBAAhB,EAAkC;AAAC,YAAGxB,OAAO,CAAC7qB,QAAR,CAAiB+qB,IAAjB,CAAH,EAA0B;AAACF,UAAAA,OAAO,GAACA,OAAO,CAACxgC,OAAR,CAAgB,IAAI2gC,MAAJ,CAAWD,IAAX,EAAgB,GAAhB,CAAhB,EAAqCsB,iBAAiB,CAACtB,IAAD,CAAjB,CAAwB/B,IAAxB,CAArC,CAAR;AAA4E;AAAC;;AAAA6B,MAAAA,OAAO,GAACA,OAAO,CAACxgC,OAAR,CAAgB,OAAhB,EAAwB,GAAxB,CAAR;AAAqC,UAAIsiC,KAAK,GAACta,kBAAkB,CAACwY,OAAD,EAAS,KAAT,CAA5B;;AAA4C,UAAG8B,KAAK,CAACl/B,MAAN,GAAas8B,OAAhB,EAAwB;AAAC,eAAO,CAAP;AAAS;;AAAAH,MAAAA,kBAAkB,CAAC+C,KAAD,EAAO7C,CAAP,CAAlB;AAA4B,aAAO6C,KAAK,CAACl/B,MAAN,GAAa,CAApB;AAAsB,KAArsJ;;AAAssJ,QAAIm/B,WAAW,GAAC,CAAC9C,CAAD,EAAGC,OAAH,EAAWC,MAAX,EAAkBC,EAAlB,EAAqB4C,GAArB,KAA2BhD,SAAS,CAACC,CAAD,EAAGC,OAAH,EAAWC,MAAX,EAAkBC,EAAlB,CAApD;;AAA0E,QAAI6C,QAAQ,GAACC,KAAK,IAAE;AAAC,UAAIltB,IAAI,GAACzX,MAAM,CAAC,MAAI2kC,KAAL,CAAf;AAA2B,aAAOltB,IAAP;AAAY,KAA5D;;AAA6D,QAAImtB,mBAAmB,GAAC/jB,GAAG,IAAE;AAAC,UAAIjS,IAAI,GAAC2S,eAAe,CAACV,GAAD,CAAf,GAAqB,CAA9B;AAAgC,UAAIxR,GAAG,GAACw1B,UAAU,CAACj2B,IAAD,CAAlB;AAAyByS,MAAAA,YAAY,CAACR,GAAD,EAAKxR,GAAL,EAAST,IAAT,CAAZ;AAA2B,aAAOS,GAAP;AAAW,KAA7H;;AAA8H,QAAIy1B,KAAK,GAAC,CAACH,KAAD,EAAOI,UAAP,EAAkBhqB,QAAlB,EAA2B1D,IAA3B,EAAgC8b,IAAhC,KAAuC;AAAC,UAAI6R,GAAG,GAAC;AAAC,kBAASnkB,GAAG,IAAE;AAAC,cAAIxR,GAAG,GAAC,CAAR;;AAAU,cAAGwR,GAAG,KAAG,IAAN,IAAYA,GAAG,KAAGxgB,SAAlB,IAA6BwgB,GAAG,KAAG,CAAtC,EAAwC;AAACxR,YAAAA,GAAG,GAACu1B,mBAAmB,CAAC/jB,GAAD,CAAvB;AAA6B;;AAAA,iBAAOxR,GAAP;AAAW,SAA3G;AAA4G,iBAAQoa,GAAG,IAAE;AAAC,cAAIpa,GAAG,GAACw1B,UAAU,CAACpb,GAAG,CAACpkB,MAAL,CAAlB;AAA+Bm8B,UAAAA,kBAAkB,CAAC/X,GAAD,EAAKpa,GAAL,CAAlB;AAA4B,iBAAOA,GAAP;AAAW;AAAhM,OAAR;;AAA0M,eAAS41B,kBAAT,CAA4B51B,GAA5B,EAAgC;AAAC,YAAG01B,UAAU,KAAG,QAAhB,EAAyB;AAAC,iBAAO1iB,YAAY,CAAChT,GAAD,CAAnB;AAAyB;;AAAA,YAAG01B,UAAU,KAAG,SAAhB,EAA0B,OAAOG,OAAO,CAAC71B,GAAD,CAAd;AAAoB,eAAOA,GAAP;AAAW;;AAAA,UAAIoI,IAAI,GAACitB,QAAQ,CAACC,KAAD,CAAjB;AAAyB,UAAIQ,KAAK,GAAC,EAAV;AAAa,UAAI1sB,KAAK,GAAC,CAAV;;AAAY,UAAGpB,IAAH,EAAQ;AAAC,aAAI,IAAIpL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACoL,IAAI,CAAChS,MAAnB,EAA0B4G,CAAC,EAA3B,EAA8B;AAAC,cAAIm5B,SAAS,GAACJ,GAAG,CAACjqB,QAAQ,CAAC9O,CAAD,CAAT,CAAjB;;AAA+B,cAAGm5B,SAAH,EAAa;AAAC,gBAAG3sB,KAAK,KAAG,CAAX,EAAaA,KAAK,GAAC4sB,SAAS,EAAf;AAAkBF,YAAAA,KAAK,CAACl5B,CAAD,CAAL,GAASm5B,SAAS,CAAC/tB,IAAI,CAACpL,CAAD,CAAL,CAAlB;AAA4B,WAAzE,MAA6E;AAACk5B,YAAAA,KAAK,CAACl5B,CAAD,CAAL,GAASoL,IAAI,CAACpL,CAAD,CAAb;AAAiB;AAAC;AAAC;;AAAA,UAAIoD,GAAG,GAACoI,IAAI,CAACrC,KAAL,CAAW,IAAX,EAAgB+vB,KAAhB,CAAR;;AAA+B,eAASG,MAAT,CAAgBj2B,GAAhB,EAAoB;AAAC,YAAGoJ,KAAK,KAAG,CAAX,EAAa8sB,YAAY,CAAC9sB,KAAD,CAAZ;AAAoB,eAAOwsB,kBAAkB,CAAC51B,GAAD,CAAzB;AAA+B;;AAAAA,MAAAA,GAAG,GAACi2B,MAAM,CAACj2B,GAAD,CAAV;AAAgB,aAAOA,GAAP;AAAW,KAAlvB;;AAAmvB/D,IAAAA,aAAa,GAACtL,MAAM,CAAC,eAAD,CAAN,GAAwB,MAAMsL,aAAN,SAA4BoN,KAA5B,CAAiC;AAAC1C,MAAAA,WAAW,CAACxK,OAAD,EAAS;AAAC,cAAMA,OAAN;AAAe,aAAKqC,IAAL,GAAU,eAAV;AAA0B;;AAA/D,KAAvE;AAAwIkB,IAAAA,qBAAqB;AAAGQ,IAAAA,YAAY,GAACvP,MAAM,CAAC,cAAD,CAAN,GAAuB,MAAMuP,YAAN,SAA2BmJ,KAA3B,CAAgC;AAAC1C,MAAAA,WAAW,CAACxK,OAAD,EAAS;AAAC,cAAMA,OAAN;AAAe,aAAKqC,IAAL,GAAU,cAAV;AAAyB;;AAA9D,KAApE;AAAoIuG,IAAAA,gBAAgB;AAAG/B,IAAAA,WAAW;AAAG0E,IAAAA,sBAAsB;AAAG6B,IAAAA,gBAAgB,GAAC5Y,MAAM,CAAC,kBAAD,CAAN,GAA2BqY,WAAW,CAACK,KAAD,EAAO,kBAAP,CAAvD;AAAkFgF,IAAAA,mBAAmB;AAAGY,IAAAA,UAAU;;AAAG,QAAImW,MAAM,GAAC,UAAStH,MAAT,EAAgBtf,IAAhB,EAAqBuf,IAArB,EAA0B/B,IAA1B,EAA+B;AAAC,UAAG,CAAC8B,MAAJ,EAAW;AAACA,QAAAA,MAAM,GAAC,IAAP;AAAY;;AAAA,WAAKA,MAAL,GAAYA,MAAZ;AAAmB,WAAKF,KAAL,GAAWE,MAAM,CAACF,KAAlB;AAAwB,WAAK0G,OAAL,GAAa,IAAb;AAAkB,WAAKntB,EAAL,GAAQd,EAAE,CAACmtB,SAAH,EAAR;AAAuB,WAAKhlB,IAAL,GAAUA,IAAV;AAAe,WAAKuf,IAAL,GAAUA,IAAV;AAAe,WAAKI,QAAL,GAAc,EAAd;AAAiB,WAAKvC,UAAL,GAAgB,EAAhB;AAAmB,WAAKI,IAAL,GAAUA,IAAV;AAAe,KAAxO;;AAAyO,QAAIma,QAAQ,GAAC,MAAI,EAAjB;AAAoB,QAAIC,SAAS,GAAC,GAAd;AAAkB5kC,IAAAA,MAAM,CAACg1B,gBAAP,CAAwBpB,MAAM,CAAC9hB,SAA/B,EAAyC;AAACjF,MAAAA,IAAI,EAAC;AAACgK,QAAAA,GAAG,EAAC,YAAU;AAAC,iBAAM,CAAC,KAAK0V,IAAL,GAAUoY,QAAX,MAAuBA,QAA7B;AAAsC,SAAtD;AAAuDjoB,QAAAA,GAAG,EAAC,UAAS4O,GAAT,EAAa;AAACA,UAAAA,GAAG,GAAC,KAAKiB,IAAL,IAAWoY,QAAZ,GAAqB,KAAKpY,IAAL,IAAW,CAACoY,QAApC;AAA6C;AAAtH,OAAN;AAA8H73B,MAAAA,KAAK,EAAC;AAAC+J,QAAAA,GAAG,EAAC,YAAU;AAAC,iBAAM,CAAC,KAAK0V,IAAL,GAAUqY,SAAX,MAAwBA,SAA9B;AAAwC,SAAxD;AAAyDloB,QAAAA,GAAG,EAAC,UAAS4O,GAAT,EAAa;AAACA,UAAAA,GAAG,GAAC,KAAKiB,IAAL,IAAWqY,SAAZ,GAAsB,KAAKrY,IAAL,IAAW,CAACqY,SAArC;AAA+C;AAA1H,OAApI;AAAgQ1J,MAAAA,QAAQ,EAAC;AAACrkB,QAAAA,GAAG,EAAC,YAAU;AAAC,iBAAOhS,EAAE,CAAC8oB,KAAH,CAAS,KAAKpB,IAAd,CAAP;AAA2B;AAA3C,OAAzQ;AAAsT0O,MAAAA,QAAQ,EAAC;AAACpkB,QAAAA,GAAG,EAAC,YAAU;AAAC,iBAAOhS,EAAE,CAACmpB,QAAH,CAAY,KAAKzB,IAAjB,CAAP;AAA8B;AAA9C;AAA/T,KAAzC;AAA0Z1nB,IAAAA,EAAE,CAAC+uB,MAAH,GAAUA,MAAV;AAAiB/uB,IAAAA,EAAE,CAACggC,mBAAH,GAAuBvT,sBAAvB;AAA8CzsB,IAAAA,EAAE,CAACq1B,UAAH;AAAgB,QAAItyB,WAAW,GAAC;AAACivB,MAAAA,CAAC,EAAC/sB,YAAH;AAAgBg7B,MAAAA,CAAC,EAACl5B,6BAAlB;AAAgDkc,MAAAA,CAAC,EAACxa,8BAAlD;AAAiFy3B,MAAAA,CAAC,EAACl3B,wBAAnF;AAA4Gm3B,MAAAA,CAAC,EAAC/1B,sBAA9G;AAAqIg2B,MAAAA,CAAC,EAACxsB,uBAAvI;AAA+JysB,MAAAA,CAAC,EAACjqB,mCAAjK;AAAqMxM,MAAAA,CAAC,EAAC+M,gCAAvM;AAAwO2pB,MAAAA,CAAC,EAAC/oB,gCAA1O;AAA2QgpB,MAAAA,CAAC,EAACznB,uBAA7Q;AAAqS2J,MAAAA,CAAC,EAACvJ,sBAAvS;AAA8T3S,MAAAA,CAAC,EAACiT,4BAAhU;AAA6VM,MAAAA,CAAC,EAACE,uBAA/V;AAAuXmD,MAAAA,CAAC,EAAClD,0BAAzX;AAAoZumB,MAAAA,CAAC,EAACnmB,yBAAtZ;AAAgbjZ,MAAAA,CAAC,EAACwZ,6BAAlb;AAAgda,MAAAA,CAAC,EAACmB,4BAAld;AAA+ezH,MAAAA,CAAC,EAACmJ,6BAAjf;AAA+gBpW,MAAAA,CAAC,EAAC4W,6BAAjhB;AAA+iBjgB,MAAAA,CAAC,EAACmgB,qCAAjjB;AAAulBkS,MAAAA,CAAC,EAACjS,8BAAzlB;AAAwnB3P,MAAAA,CAAC,EAAC4P,oCAA1nB;AAA+pBuhB,MAAAA,CAAC,EAACthB,sBAAjqB;AAAwrBuhB,MAAAA,CAAC,EAACloB,cAA1rB;AAAysBmoB,MAAAA,CAAC,EAACthB,cAA3sB;AAA0tBhT,MAAAA,CAAC,EAACiT,kBAA5tB;AAA+uB0c,MAAAA,CAAC,EAACxc,MAAjvB;AAAwvBohB,MAAAA,CAAC,EAACnhB,qBAA1vB;AAAgxBohB,MAAAA,CAAC,EAAC3gB,uBAAlxB;AAA0yB4gB,MAAAA,CAAC,EAAC9H,YAA5yB;AAAyzB+H,MAAAA,CAAC,EAAC1H,kBAA3zB;AAA80B2H,MAAAA,CAAC,EAACxH,SAAh1B;AAA01ByH,MAAAA,CAAC,EAACpH,QAA51B;AAAq2B/hB,MAAAA,CAAC,EAACqiB,QAAv2B;AAAg3B+G,MAAAA,CAAC,EAACzG,SAAl3B;AAA43Bla,MAAAA,CAAC,EAACue;AAA93B,KAAhB;AAA25B,QAAI57B,WAAW,GAACL,UAAU,EAA1B;;AAA6B,QAAIs+B,kBAAkB,GAAC,MAAI,CAACA,kBAAkB,GAACj+B,WAAW,CAAC,GAAD,CAA/B,GAA3B;;AAAmE,QAAIqa,OAAO,GAACjjB,MAAM,CAAC,SAAD,CAAN,GAAkB8mC,EAAE,IAAE,CAAC7jB,OAAO,GAACjjB,MAAM,CAAC,SAAD,CAAN,GAAkB4I,WAAW,CAAC,GAAD,CAAtC,EAA6Ck+B,EAA7C,CAAlC;;AAAmF,QAAI/tB,KAAK,GAAC/Y,MAAM,CAAC,OAAD,CAAN,GAAgB8mC,EAAE,IAAE,CAAC/tB,KAAK,GAAC/Y,MAAM,CAAC,OAAD,CAAN,GAAgB4I,WAAW,CAAC,GAAD,CAAlC,EAAyCk+B,EAAzC,CAA9B;;AAA2E,QAAIhuB,cAAc,GAACguB,EAAE,IAAE,CAAChuB,cAAc,GAAClQ,WAAW,CAAC,GAAD,CAA3B,EAAkCk+B,EAAlC,CAAvB;;AAA6D,QAAIC,4BAA4B,GAAC/mC,MAAM,CAAC,8BAAD,CAAN,GAAuC,MAAI,CAAC+mC,4BAA4B,GAAC/mC,MAAM,CAAC,8BAAD,CAAN,GAAuC4I,WAAW,CAAC,GAAD,CAAhF,GAA5E;;AAAqK,QAAIo+B,iBAAiB,GAAC,MAAI,CAACA,iBAAiB,GAACp+B,WAAW,CAAC,kBAAD,CAA9B,GAA1B;;AAAgF,QAAIy8B,SAAS,GAAC,MAAI,CAACA,SAAS,GAACz8B,WAAW,CAAC,GAAD,CAAtB,GAAlB;;AAAiD,QAAI28B,YAAY,GAACuB,EAAE,IAAE,CAACvB,YAAY,GAAC38B,WAAW,CAAC,GAAD,CAAzB,EAAgCk+B,EAAhC,CAArB;;AAAyD,QAAIjC,UAAU,GAACiC,EAAE,IAAE,CAACjC,UAAU,GAACj8B,WAAW,CAAC,GAAD,CAAvB,EAA8Bk+B,EAA9B,CAAnB;;AAAqD,QAAIG,mCAAmC,GAACH,EAAE,IAAE,CAACG,mCAAmC,GAACr+B,WAAW,CAAC,oCAAD,CAAhD,EAAwFk+B,EAAxF,CAA5C;;AAAwI,QAAIv8B,sBAAsB,GAACu8B,EAAE,IAAE,CAACv8B,sBAAsB,GAAC3B,WAAW,CAAC,GAAD,CAAnC,EAA0Ck+B,EAA1C,CAA/B;;AAA6E,QAAII,YAAY,GAAClnC,MAAM,CAAC,cAAD,CAAN,GAAuB,CAAC8mC,EAAD,EAAIK,EAAJ,EAAOC,EAAP,EAAUC,EAAV,EAAaC,EAAb,KAAkB,CAACJ,YAAY,GAAClnC,MAAM,CAAC,cAAD,CAAN,GAAuB4I,WAAW,CAAC,GAAD,CAAhD,EAAuDk+B,EAAvD,EAA0DK,EAA1D,EAA6DC,EAA7D,EAAgEC,EAAhE,EAAmEC,EAAnE,CAA1D;;AAAiI,QAAIC,cAAc,GAACvnC,MAAM,CAAC,gBAAD,CAAN,GAAyB,CAAC8mC,EAAD,EAAIK,EAAJ,EAAOC,EAAP,EAAUC,EAAV,EAAaC,EAAb,EAAgBE,EAAhB,EAAmBC,EAAnB,KAAwB,CAACF,cAAc,GAACvnC,MAAM,CAAC,gBAAD,CAAN,GAAyB4I,WAAW,CAAC,GAAD,CAApD,EAA2Dk+B,EAA3D,EAA8DK,EAA9D,EAAiEC,EAAjE,EAAoEC,EAApE,EAAuEC,EAAvE,EAA0EE,EAA1E,EAA6EC,EAA7E,CAApE;;AAAqJ,QAAIC,cAAc,GAAC1nC,MAAM,CAAC,gBAAD,CAAN,GAAyB,CAAC8mC,EAAD,EAAIK,EAAJ,EAAOC,EAAP,EAAUC,EAAV,EAAaC,EAAb,EAAgBE,EAAhB,EAAmBC,EAAnB,KAAwB,CAACC,cAAc,GAAC1nC,MAAM,CAAC,gBAAD,CAAN,GAAyB4I,WAAW,CAAC,GAAD,CAApD,EAA2Dk+B,EAA3D,EAA8DK,EAA9D,EAAiEC,EAAjE,EAAoEC,EAApE,EAAuEC,EAAvE,EAA0EE,EAA1E,EAA6EC,EAA7E,CAApE;;AAAqJ,QAAIE,eAAe,GAAC3nC,MAAM,CAAC,iBAAD,CAAN,GAA0B,CAAC8mC,EAAD,EAAIK,EAAJ,EAAOC,EAAP,EAAUC,EAAV,EAAaC,EAAb,EAAgBE,EAAhB,EAAmBC,EAAnB,EAAsBG,EAAtB,EAAyBC,EAAzB,KAA8B,CAACF,eAAe,GAAC3nC,MAAM,CAAC,iBAAD,CAAN,GAA0B4I,WAAW,CAAC,GAAD,CAAtD,EAA6Dk+B,EAA7D,EAAgEK,EAAhE,EAAmEC,EAAnE,EAAsEC,EAAtE,EAAyEC,EAAzE,EAA4EE,EAA5E,EAA+EC,EAA/E,EAAkFG,EAAlF,EAAqFC,EAArF,CAA5E;;AAAqK,QAAIC,gBAAgB,GAAC9nC,MAAM,CAAC,kBAAD,CAAN,GAA2B,CAAC8mC,EAAD,EAAIK,EAAJ,EAAOC,EAAP,EAAUC,EAAV,EAAaC,EAAb,EAAgBE,EAAhB,EAAmBC,EAAnB,EAAsBG,EAAtB,EAAyBC,EAAzB,EAA4BE,EAA5B,KAAiC,CAACD,gBAAgB,GAAC9nC,MAAM,CAAC,kBAAD,CAAN,GAA2B4I,WAAW,CAAC,GAAD,CAAxD,EAA+Dk+B,EAA/D,EAAkEK,EAAlE,EAAqEC,EAArE,EAAwEC,EAAxE,EAA2EC,EAA3E,EAA8EE,EAA9E,EAAiFC,EAAjF,EAAoFG,EAApF,EAAuFC,EAAvF,EAA0FE,EAA1F,CAAjF;;AAA+K/nC,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAgB8kC,KAAhB;AAAsB,QAAIkD,SAAJ;;AAAc1hC,IAAAA,qBAAqB,GAAC,SAAS2hC,SAAT,GAAoB;AAAC,UAAG,CAACD,SAAJ,EAAcE,GAAG;AAAG,UAAG,CAACF,SAAJ,EAAc1hC,qBAAqB,GAAC2hC,SAAtB;AAAgC,KAA7G;;AAA8G,aAASC,GAAT,GAAc;AAAC,UAAG9hC,eAAe,GAAC,CAAnB,EAAqB;AAAC;AAAO;;AAAAhB,MAAAA,MAAM;;AAAG,UAAGgB,eAAe,GAAC,CAAnB,EAAqB;AAAC;AAAO;;AAAA,eAAS+hC,KAAT,GAAgB;AAAC,YAAGH,SAAH,EAAa;AAAOA,QAAAA,SAAS,GAAC,IAAV;AAAehoC,QAAAA,MAAM,CAAC,WAAD,CAAN,GAAoB,IAApB;AAAyB,YAAGyD,KAAH,EAAS;AAAOgC,QAAAA,WAAW;AAAGlF,QAAAA,mBAAmB,CAACP,MAAD,CAAnB;AAA4B,YAAGA,MAAM,CAAC,sBAAD,CAAT,EAAkCA,MAAM,CAAC,sBAAD,CAAN;AAAiC+F,QAAAA,OAAO;AAAG;;AAAA,UAAG/F,MAAM,CAAC,WAAD,CAAT,EAAuB;AAACA,QAAAA,MAAM,CAAC,WAAD,CAAN,CAAoB,YAApB;AAAkCooC,QAAAA,UAAU,CAAC,YAAU;AAACA,UAAAA,UAAU,CAAC,YAAU;AAACpoC,YAAAA,MAAM,CAAC,WAAD,CAAN,CAAoB,EAApB;AAAwB,WAApC,EAAqC,CAArC,CAAV;AAAkDmoC,UAAAA,KAAK;AAAG,SAAtE,EAAuE,CAAvE,CAAV;AAAoF,OAA9I,MAAkJ;AAACA,QAAAA,KAAK;AAAG;AAAC;;AAAA,QAAGnoC,MAAM,CAAC,SAAD,CAAT,EAAqB;AAAC,UAAG,OAAOA,MAAM,CAAC,SAAD,CAAb,IAA0B,UAA7B,EAAwCA,MAAM,CAAC,SAAD,CAAN,GAAkB,CAACA,MAAM,CAAC,SAAD,CAAP,CAAlB;;AAAsC,aAAMA,MAAM,CAAC,SAAD,CAAN,CAAkBqF,MAAlB,GAAyB,CAA/B,EAAiC;AAACrF,QAAAA,MAAM,CAAC,SAAD,CAAN,CAAkB+K,GAAlB;AAA0B;AAAC;;AAAAm9B,IAAAA,GAAG;AAG1u/G,WAAO5nC,SAAS,CAAC+nC,KAAjB;AACD,GAPC;AAUD,CAbY,GAAb;;AAcA,eAAeroC,MAAf","sourcesContent":["\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"process.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"K\"];updateMemoryViews();wasmTable=wasmExports[\"O\"];addOnInit(wasmExports[\"L\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_throw=(ptr,type,destructor)=>{var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast};var tupleRegistrations={};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var InternalError;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};var __embind_finalize_value_array=rawTupleType=>{var reg=tupleRegistrations[rawTupleType];delete tupleRegistrations[rawTupleType];var elements=reg.elements;var elementsLength=elements.length;var elementTypes=elements.map(elt=>elt.getterReturnType).concat(elements.map(elt=>elt.setterArgumentType));var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;whenDependentTypesAreResolved([rawTupleType],elementTypes,function(elementTypes){elements.forEach((elt,i)=>{var getterReturnType=elementTypes[i];var getter=elt.getter;var getterContext=elt.getterContext;var setterArgumentType=elementTypes[i+elementsLength];var setter=elt.setter;var setterContext=elt.setterContext;elt.read=ptr=>getterReturnType[\"fromWireType\"](getter(getterContext,ptr));elt.write=(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}});return[{name:reg.name,\"fromWireType\":ptr=>{var rv=new Array(elementsLength);for(var i=0;i<elementsLength;++i){rv[i]=elements[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":(destructors,o)=>{if(elementsLength!==o.length){throw new TypeError(`Incorrect number of tuple elements for ${reg.name}: expected=${elementsLength}, actual=${o.length}`)}var ptr=rawConstructor();for(var i=0;i<elementsLength;++i){elements[i].write(ptr,o[i])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};var structRegistrations={};var __embind_finalize_value_object=structType=>{var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType[\"fromWireType\"](getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":ptr=>{var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":(destructors,o)=>{for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(`Missing field: \"${fieldName}\"`)}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var shallowCopyInternalPointer=o=>({count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType});var throwInstanceAlreadyDeleted=obj=>{function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")};var finalizationRegistry=false;var detachFinalizer=handle=>{};var runDestructor=$$=>{if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}};var releaseClassHandle=$$=>{$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}};var downcastPointer=(ptr,ptrClass,desiredClass)=>{if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)};var registeredPointers={};var getInheritedInstanceCount=()=>Object.keys(registeredInstances).length;var getLiveInheritedInstances=()=>{var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv};var deletionQueue=[];var flushPendingDeletes=()=>{while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}};var delayFunction;var setDelayFunction=fn=>{delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}};var init_embind=()=>{Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction};var registeredInstances={};var getBasestPointer=(class_,ptr)=>{if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr};var getInheritedInstance=(class_,ptr)=>{ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]};var makeClassHandle=(prototype,record)=>{if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))};function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}var attachFinalizer=handle=>{if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)};var init_ClassHandle=()=>{Object.assign(ClassHandle.prototype,{\"isAliasOf\"(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;other.$$=other.$$;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right},\"clone\"(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}},\"delete\"(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}},\"isDeleted\"(){return!this.$$.ptr},\"deleteLater\"(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}})};function ClassHandle(){}var char_0=48;var char_9=57;var makeLegalFunctionName=name=>{if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return`_${name}`}return name};function createNamedFunction(name,body){name=makeLegalFunctionName(name);return{[name]:function(){return body.apply(this,arguments)}}[name]}var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}var upcastPointer=(ptr,ptrClass,desiredClass)=>{while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr};function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(()=>clonedHandle[\"delete\"]()));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var init_RegisteredPointer=()=>{Object.assign(RegisteredPointer.prototype,{getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr},destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,\"deleteObject\"(handle){if(handle!==null){handle[\"delete\"]()}},\"fromWireType\":RegisteredPointer_fromWireType})};function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var dynCall=(sig,ptr,args)=>{if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn};var getDynCaller=(sig,ptr)=>{var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}};var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError;var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([\", \"]))};var __embind_register_class=(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor)=>{name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`)}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);if(registeredClass.baseClass){if(registeredClass.baseClass.__derivedClasses===undefined){registeredClass.baseClass.__derivedClasses=[]}registeredClass.baseClass.__derivedClasses.push(registeredClass)}var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})};var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array};function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=`\\n        return function ${makeLegalFunctionName(humanName)}(${argsList}) {\\n        if (arguments.length !== ${argCount-2}) {\\n          throwBindingError('function ${humanName} called with ' + arguments.length + ' arguments, expected ${argCount-2}');\\n        }`;if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns||isAsync?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);return newFunc(Function,args1).apply(null,args2)}var __embind_register_class_constructor=(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor)=>{var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=`constructor ${classType.name}`;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`)}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})};var __embind_register_class_function=(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync)=>{var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=`${classType.name}.${methodName}`;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})};var validateThis=(this_,classType,humanName)=>{if(!(this_ instanceof Object)){throwBindingError(`${humanName} with invalid \"this\": ${this_}`)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(`${humanName} incompatible with \"this\" of type ${this_.constructor.name}`)}if(!this_.$$.ptr){throwBindingError(`cannot call emscripten binding method ${humanName} on deleted object`)}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)};var __embind_register_class_property=(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext)=>{fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=`${classType.name}.${fieldName}`;var desc={get(){throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`,[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=()=>throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`,[getterReturnType,setterArgumentType])}else{desc.set=v=>throwBindingError(humanName+\" is a read-only property\")}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})};function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return this.allocated[id]!==undefined},allocate(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id},free(id){this.allocated[id]=undefined;this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[undefined];this.freelist=[]}var emval_handles=new HandleAllocator;var __emval_decref=handle=>{if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle)}};var count_emval_handles=()=>{var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count}}return count};var init_emval=()=>{emval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles.get(handle).value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value})}}}};var __embind_register_emval=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})};var enumReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?function(pointer){return this[\"fromWireType\"](HEAP8[pointer>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>0])};case 2:return signed?function(pointer){return this[\"fromWireType\"](HEAP16[pointer>>1])}:function(pointer){return this[\"fromWireType\"](HEAPU16[pointer>>1])};case 4:return signed?function(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}:function(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])};default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_enum=(rawType,name,size,isSigned)=>{name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":function(c){return this.constructor.values[c]},\"toWireType\":(destructors,c)=>c.value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":enumReadValueFromPointer(name,size,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)};var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl};var __embind_register_enum_value=(rawEnumType,name,enumValue)=>{var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(`${enumType.name}_${name}`,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value};var embindRepr=v=>{if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};var __embind_register_function=(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync)=>{var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>0]:pointer=>HEAPU8[pointer>>0];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_value_array=(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor)=>{tupleRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),elements:[]}};var __embind_register_value_array_element=(rawTupleType,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext)=>{tupleRegistrations[rawTupleType].elements.push({getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})};var __embind_register_value_object=(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor)=>{structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}};var __embind_register_value_object_field=(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext)=>{structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};var __emval_incref=handle=>{if(handle>4){emval_handles.get(handle).refcount+=1}};var __emval_take_value=(type,arg)=>{type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)};var _abort=()=>{abort(\"\")};var _emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}HEAP8[buffer>>0]=0};var PATH={isAbs:path=>path.charAt(0)===\"/\",splitPath:filename=>{var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join(\"/\"))},join2:(l,r)=>PATH.normalize(l+\"/\"+r)};var initRandomFill=()=>{if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){return view=>crypto.getRandomValues(view)}else abort(\"initRandomDevice\")};var randomFill=view=>(randomFill=initRandomFill())(view);var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(p=>!!p),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}FS_stdin_getChar_buffer=intArrayFromString(result,true)}return FS_stdin_getChar_buffer.shift()};var TTY={ttys:[],init(){},shutdown(){},register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close(stream){stream.tty.ops.fsync(stream.tty)},fsync(stream){stream.tty.ops.fsync(stream.tty)},read(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char(tty){return FS_stdin_getChar()},put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}},ioctl_tcgets(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets(tty,optional_actions,data){return 0},ioctl_tiocgwinsz(tty){return[24,80]}},default_tty1_ops:{put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var mmapAlloc=size=>{abort()};var MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===HEAP8.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=!noRunDep?getUniqueRunDependency(`al ${url}`):\"\";readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file \"${url}\" failed (no arrayBuffer).`);onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw`Loading data file \"${url}\" failed.`}});if(dep)addRunDependency(dep)};var FS_createDataFile=(parent,name,fileData,canRead,canWrite,canOwn)=>FS.createDataFile(parent,name,fileData,canRead,canWrite,canOwn);var preloadPlugins=Module[\"preloadPlugins\"]||[];var FS_handledByPreloadPlugin=(byteArray,fullname,finish,onerror)=>{if(typeof Browser!=\"undefined\")Browser.init();var handled=false;preloadPlugins.forEach(plugin=>{if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,onerror);handled=true}});return handled};var FS_createPreloadedFile=(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(`cp ${fullname}`);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS_createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}};var FS_modeStringToFlags=str=>{var flagModes={\"r\":0,\"r+\":2,\"w\":512|64|1,\"w+\":512|64|2,\"a\":1024|64|1,\"a+\":1024|64|2};var flags=flagModes[str];if(typeof flags==\"undefined\"){throw new Error(`Unknown file open mode: ${str}`)}return flags};var FS_getMode=(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(path,opts={}){path=PATH_FS.resolve(path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=path.split(\"/\").filter(p=>!!p);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?`${mount}/${path}`:mount+path}path=path?`${node.name}/${path}`:node.name;node=node.parent}},hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode(node){FS.hashRemoveNode(node)},isRoot(node){return node===node.parent},isMountpoint(node){return!!node.mounted},isFile(mode){return(mode&61440)===32768},isDir(mode){return(mode&61440)===16384},isLink(mode){return(mode&61440)===40960},isChrdev(mode){return(mode&61440)===8192},isBlkdev(mode){return(mode&61440)===24576},isFIFO(mode){return(mode&61440)===4096},isSocket(mode){return(mode&49152)===49152},flagsToPermissionString(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd(){for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStreamChecked(fd){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}return stream},getStream:fd=>FS.streams[fd],createStream(stream,fd=-1){if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return(this.flags&2097155)!==1}},isWrite:{get(){return(this.flags&2097155)!==0}},isAppend:{get(){return this.flags&1024}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);if(fd==-1){fd=FS.nextfd()}stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream(fd){FS.streams[fd]=null},chrdev_stream_ops:{open(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek(){throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs(populate,callback){if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`)}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup(parent,name){return parent.node_ops.lookup(parent,name)},mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev(path,mode,dev){if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat(path){return FS.stat(path,true)},chmod(path,mode,dontFollow){var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod(path,mode){FS.chmod(path,mode,true)},fchmod(fd,mode){var stream=FS.getStreamChecked(fd);FS.chmod(stream.node,mode)},chown(path,uid,gid,dontFollow){var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown(path,uid,gid){FS.chown(path,uid,gid,true)},fchown(fd,uid,gid){var stream=FS.getStreamChecked(fd);FS.chown(stream.node,uid,gid)},truncate(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate(fd,len){var stream=FS.getStreamChecked(fd);if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open(path,flags,mode){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS_modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed(stream){return stream.fd===null},llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap(stream,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync(stream,buffer,offset,length,mmapFlags){if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile(path,opts={}){opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error(`Invalid encoding type \"${opts.encoding}\"`)}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile(path,data,opts={}){opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0;var randomByte=()=>{if(randomLeft===0){randomLeft=randomFill(randomBuffer).byteLength}return randomBuffer[--randomLeft]};FS.createDevice(\"/dev\",\"random\",randomByte);FS.createDevice(\"/dev\",\"urandom\",randomByte);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories(){FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount(){var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup(parent,name){var fd=+name;var stream=FS.getStreamChecked(fd);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.name=\"ErrnoError\";this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath(parent,path,canRead,canWrite){parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS_getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS_getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice(parent,name,input,output){var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS_getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open(stream){stream.seekable=false},close(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||\"\",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=stat.mode;HEAPU32[buf+8>>2]=stat.nlink;HEAP32[buf+12>>2]=stat.uid;HEAP32[buf+16>>2]=stat.gid;HEAP32[buf+20>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>2]=tempI64[0],HEAP32[buf+28>>2]=tempI64[1];HEAP32[buf+32>>2]=4096;HEAP32[buf+36>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();tempI64=[Math.floor(atime/1e3)>>>0,(tempDouble=Math.floor(atime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAPU32[buf+48>>2]=atime%1e3*1e3;tempI64=[Math.floor(mtime/1e3)>>>0,(tempDouble=Math.floor(mtime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=mtime%1e3*1e3;tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=ctime%1e3*1e3;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];return 0},doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD(fd){var stream=FS.getStreamChecked(fd);return stream}};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;if(typeof offset!==\"undefined\"){offset+=curr}}return ret};function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!==\"undefined\"){offset+=curr}}return ret};function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e.name===\"ErrnoError\"))throw e;return e.errno}}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var _strftime=(s,maxsize,format,tm)=>{var tm_zone=HEAPU32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":date=>WEEKDAYS[date.tm_wday].substring(0,3),\"%A\":date=>WEEKDAYS[date.tm_wday],\"%b\":date=>MONTHS[date.tm_mon].substring(0,3),\"%B\":date=>MONTHS[date.tm_mon],\"%C\":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":date=>leadingNulls(date.tm_mday,2),\"%e\":date=>leadingSomething(date.tm_mday,2,\" \"),\"%g\":date=>getWeekBasedYear(date).toString().substring(2),\"%G\":date=>getWeekBasedYear(date),\"%H\":date=>leadingNulls(date.tm_hour,2),\"%I\":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),\"%m\":date=>leadingNulls(date.tm_mon+1,2),\"%M\":date=>leadingNulls(date.tm_min,2),\"%n\":()=>\"\\n\",\"%p\":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":date=>leadingNulls(date.tm_sec,2),\"%t\":()=>\"\\t\",\"%u\":date=>date.tm_wday||7,\"%U\":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":date=>date.tm_wday,\"%W\":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":date=>(date.tm_year+1900).toString().substring(2),\"%Y\":date=>date.tm_year+1900,\"%z\":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":date=>date.tm_zone,\"%%\":()=>\"%\"};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1};var _strftime_l=(s,maxsize,format,tm,loc)=>_strftime(s,maxsize,format,tm);var getCFunc=ident=>{var func=Module[\"_\"+ident];return func};var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");handleAllocatorInit();init_emval();var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.createPreloadedFile=FS_createPreloadedFile;FS.staticInit();var wasmImports={d:___cxa_throw,n:__embind_finalize_value_array,l:__embind_finalize_value_object,w:__embind_register_bigint,G:__embind_register_bool,h:__embind_register_class,g:__embind_register_class_constructor,c:__embind_register_class_function,q:__embind_register_class_property,F:__embind_register_emval,p:__embind_register_enum,i:__embind_register_enum_value,t:__embind_register_float,a:__embind_register_function,j:__embind_register_integer,e:__embind_register_memory_view,u:__embind_register_std_string,r:__embind_register_std_wstring,o:__embind_register_value_array,b:__embind_register_value_array_element,m:__embind_register_value_object,f:__embind_register_value_object_field,H:__embind_register_void,I:__emval_decref,J:__emval_incref,k:__emval_take_value,s:_abort,E:_emscripten_memcpy_js,y:_emscripten_resize_heap,z:_environ_get,A:_environ_sizes_get,B:_fd_close,D:_fd_read,v:_fd_seek,C:_fd_write,x:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"L\"])();var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"M\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"N\"])(a0);var ___getTypeName=a0=>(___getTypeName=wasmExports[\"P\"])(a0);var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=()=>(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=wasmExports[\"Q\"])();var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var stackSave=()=>(stackSave=wasmExports[\"R\"])();var stackRestore=a0=>(stackRestore=wasmExports[\"S\"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports[\"T\"])(a0);var ___cxa_increment_exception_refcount=a0=>(___cxa_increment_exception_refcount=wasmExports[\"__cxa_increment_exception_refcount\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"U\"])(a0);var dynCall_jiji=Module[\"dynCall_jiji\"]=(a0,a1,a2,a3,a4)=>(dynCall_jiji=Module[\"dynCall_jiji\"]=wasmExports[\"V\"])(a0,a1,a2,a3,a4);var dynCall_viijii=Module[\"dynCall_viijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_viijii=Module[\"dynCall_viijii\"]=wasmExports[\"W\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=wasmExports[\"X\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=wasmExports[\"Y\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=wasmExports[\"Z\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default Module;"]},"metadata":{},"sourceType":"module"}